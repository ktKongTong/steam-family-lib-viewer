// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file web-ui/service_player.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";
import { UserContentDescriptorPreferences } from "./common_pb";

/**
 * @generated from message CPlayer_AcceptSSA_Request
 */
export class CPlayer_AcceptSSA_Request extends Message<CPlayer_AcceptSSA_Request> {
  /**
   * @generated from field: optional int32 agreement_type = 1;
   */
  agreementType?: number;

  /**
   * @generated from field: optional uint32 time_signed_utc = 2;
   */
  timeSignedUtc?: number;

  constructor(data?: PartialMessage<CPlayer_AcceptSSA_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_AcceptSSA_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "agreement_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "time_signed_utc", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_AcceptSSA_Request {
    return new CPlayer_AcceptSSA_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_AcceptSSA_Request {
    return new CPlayer_AcceptSSA_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_AcceptSSA_Request {
    return new CPlayer_AcceptSSA_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_AcceptSSA_Request | PlainMessage<CPlayer_AcceptSSA_Request> | undefined, b: CPlayer_AcceptSSA_Request | PlainMessage<CPlayer_AcceptSSA_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_AcceptSSA_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_AcceptSSA_Response
 */
export class CPlayer_AcceptSSA_Response extends Message<CPlayer_AcceptSSA_Response> {
  constructor(data?: PartialMessage<CPlayer_AcceptSSA_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_AcceptSSA_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_AcceptSSA_Response {
    return new CPlayer_AcceptSSA_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_AcceptSSA_Response {
    return new CPlayer_AcceptSSA_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_AcceptSSA_Response {
    return new CPlayer_AcceptSSA_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_AcceptSSA_Response | PlainMessage<CPlayer_AcceptSSA_Response> | undefined, b: CPlayer_AcceptSSA_Response | PlainMessage<CPlayer_AcceptSSA_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_AcceptSSA_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_AddFriend_Request
 */
export class CPlayer_AddFriend_Request extends Message<CPlayer_AddFriend_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  constructor(data?: PartialMessage<CPlayer_AddFriend_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_AddFriend_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_AddFriend_Request {
    return new CPlayer_AddFriend_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_AddFriend_Request {
    return new CPlayer_AddFriend_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_AddFriend_Request {
    return new CPlayer_AddFriend_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_AddFriend_Request | PlainMessage<CPlayer_AddFriend_Request> | undefined, b: CPlayer_AddFriend_Request | PlainMessage<CPlayer_AddFriend_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_AddFriend_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_AddFriend_Response
 */
export class CPlayer_AddFriend_Response extends Message<CPlayer_AddFriend_Response> {
  /**
   * @generated from field: optional bool invite_sent = 1;
   */
  inviteSent?: boolean;

  /**
   * @generated from field: optional uint32 friend_relationship = 2;
   */
  friendRelationship?: number;

  /**
   * @generated from field: optional int32 result = 3;
   */
  result?: number;

  constructor(data?: PartialMessage<CPlayer_AddFriend_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_AddFriend_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "invite_sent", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "friend_relationship", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "result", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_AddFriend_Response {
    return new CPlayer_AddFriend_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_AddFriend_Response {
    return new CPlayer_AddFriend_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_AddFriend_Response {
    return new CPlayer_AddFriend_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_AddFriend_Response | PlainMessage<CPlayer_AddFriend_Response> | undefined, b: CPlayer_AddFriend_Response | PlainMessage<CPlayer_AddFriend_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_AddFriend_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_CommunityPreferences
 */
export class CPlayer_CommunityPreferences extends Message<CPlayer_CommunityPreferences> {
  /**
   * @generated from field: optional bool hide_adult_content_violence = 1 [default = true];
   */
  hideAdultContentViolence?: boolean;

  /**
   * @generated from field: optional bool hide_adult_content_sex = 2 [default = true];
   */
  hideAdultContentSex?: boolean;

  /**
   * @generated from field: optional uint32 timestamp_updated = 3;
   */
  timestampUpdated?: number;

  /**
   * @generated from field: optional bool parenthesize_nicknames = 4 [default = false];
   */
  parenthesizeNicknames?: boolean;

  /**
   * @generated from field: optional int32 text_filter_setting = 5;
   */
  textFilterSetting?: number;

  /**
   * @generated from field: optional bool text_filter_ignore_friends = 6 [default = true];
   */
  textFilterIgnoreFriends?: boolean;

  /**
   * @generated from field: optional uint32 text_filter_words_revision = 7;
   */
  textFilterWordsRevision?: number;

  constructor(data?: PartialMessage<CPlayer_CommunityPreferences>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_CommunityPreferences";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hide_adult_content_violence", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: true },
    { no: 2, name: "hide_adult_content_sex", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: true },
    { no: 3, name: "timestamp_updated", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "parenthesize_nicknames", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: false },
    { no: 5, name: "text_filter_setting", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "text_filter_ignore_friends", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: true },
    { no: 7, name: "text_filter_words_revision", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_CommunityPreferences {
    return new CPlayer_CommunityPreferences().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_CommunityPreferences {
    return new CPlayer_CommunityPreferences().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_CommunityPreferences {
    return new CPlayer_CommunityPreferences().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_CommunityPreferences | PlainMessage<CPlayer_CommunityPreferences> | undefined, b: CPlayer_CommunityPreferences | PlainMessage<CPlayer_CommunityPreferences> | undefined): boolean {
    return proto2.util.equals(CPlayer_CommunityPreferences, a, b);
  }
}

/**
 * @generated from message CPlayer_CommunityPreferencesChanged_Notification
 */
export class CPlayer_CommunityPreferencesChanged_Notification extends Message<CPlayer_CommunityPreferencesChanged_Notification> {
  /**
   * @generated from field: optional CPlayer_CommunityPreferences preferences = 1;
   */
  preferences?: CPlayer_CommunityPreferences;

  /**
   * @generated from field: optional UserContentDescriptorPreferences content_descriptor_preferences = 2;
   */
  contentDescriptorPreferences?: UserContentDescriptorPreferences;

  constructor(data?: PartialMessage<CPlayer_CommunityPreferencesChanged_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_CommunityPreferencesChanged_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "preferences", kind: "message", T: CPlayer_CommunityPreferences, opt: true },
    { no: 2, name: "content_descriptor_preferences", kind: "message", T: UserContentDescriptorPreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_CommunityPreferencesChanged_Notification {
    return new CPlayer_CommunityPreferencesChanged_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_CommunityPreferencesChanged_Notification {
    return new CPlayer_CommunityPreferencesChanged_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_CommunityPreferencesChanged_Notification {
    return new CPlayer_CommunityPreferencesChanged_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_CommunityPreferencesChanged_Notification | PlainMessage<CPlayer_CommunityPreferencesChanged_Notification> | undefined, b: CPlayer_CommunityPreferencesChanged_Notification | PlainMessage<CPlayer_CommunityPreferencesChanged_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_CommunityPreferencesChanged_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_DeletePostedStatus_Request
 */
export class CPlayer_DeletePostedStatus_Request extends Message<CPlayer_DeletePostedStatus_Request> {
  /**
   * @generated from field: optional uint64 postid = 1;
   */
  postid?: bigint;

  constructor(data?: PartialMessage<CPlayer_DeletePostedStatus_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_DeletePostedStatus_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "postid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_DeletePostedStatus_Request {
    return new CPlayer_DeletePostedStatus_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_DeletePostedStatus_Request {
    return new CPlayer_DeletePostedStatus_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_DeletePostedStatus_Request {
    return new CPlayer_DeletePostedStatus_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_DeletePostedStatus_Request | PlainMessage<CPlayer_DeletePostedStatus_Request> | undefined, b: CPlayer_DeletePostedStatus_Request | PlainMessage<CPlayer_DeletePostedStatus_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_DeletePostedStatus_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_DeletePostedStatus_Response
 */
export class CPlayer_DeletePostedStatus_Response extends Message<CPlayer_DeletePostedStatus_Response> {
  constructor(data?: PartialMessage<CPlayer_DeletePostedStatus_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_DeletePostedStatus_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_DeletePostedStatus_Response {
    return new CPlayer_DeletePostedStatus_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_DeletePostedStatus_Response {
    return new CPlayer_DeletePostedStatus_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_DeletePostedStatus_Response {
    return new CPlayer_DeletePostedStatus_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_DeletePostedStatus_Response | PlainMessage<CPlayer_DeletePostedStatus_Response> | undefined, b: CPlayer_DeletePostedStatus_Response | PlainMessage<CPlayer_DeletePostedStatus_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_DeletePostedStatus_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_FriendEquippedProfileItemsChanged_Notification
 */
export class CPlayer_FriendEquippedProfileItemsChanged_Notification extends Message<CPlayer_FriendEquippedProfileItemsChanged_Notification> {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid?: number;

  constructor(data?: PartialMessage<CPlayer_FriendEquippedProfileItemsChanged_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_FriendEquippedProfileItemsChanged_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_FriendEquippedProfileItemsChanged_Notification {
    return new CPlayer_FriendEquippedProfileItemsChanged_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_FriendEquippedProfileItemsChanged_Notification {
    return new CPlayer_FriendEquippedProfileItemsChanged_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_FriendEquippedProfileItemsChanged_Notification {
    return new CPlayer_FriendEquippedProfileItemsChanged_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_FriendEquippedProfileItemsChanged_Notification | PlainMessage<CPlayer_FriendEquippedProfileItemsChanged_Notification> | undefined, b: CPlayer_FriendEquippedProfileItemsChanged_Notification | PlainMessage<CPlayer_FriendEquippedProfileItemsChanged_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_FriendEquippedProfileItemsChanged_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_FriendNicknameChanged_Notification
 */
export class CPlayer_FriendNicknameChanged_Notification extends Message<CPlayer_FriendNicknameChanged_Notification> {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid?: number;

  /**
   * @generated from field: optional string nickname = 2;
   */
  nickname?: string;

  /**
   * @generated from field: optional bool is_echo_to_self = 3;
   */
  isEchoToSelf?: boolean;

  constructor(data?: PartialMessage<CPlayer_FriendNicknameChanged_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_FriendNicknameChanged_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "is_echo_to_self", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_FriendNicknameChanged_Notification {
    return new CPlayer_FriendNicknameChanged_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_FriendNicknameChanged_Notification {
    return new CPlayer_FriendNicknameChanged_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_FriendNicknameChanged_Notification {
    return new CPlayer_FriendNicknameChanged_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_FriendNicknameChanged_Notification | PlainMessage<CPlayer_FriendNicknameChanged_Notification> | undefined, b: CPlayer_FriendNicknameChanged_Notification | PlainMessage<CPlayer_FriendNicknameChanged_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_FriendNicknameChanged_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAchievementsProgress_Request
 */
export class CPlayer_GetAchievementsProgress_Request extends Message<CPlayer_GetAchievementsProgress_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  /**
   * @generated from field: repeated uint32 appids = 3;
   */
  appids: number[] = [];

  constructor(data?: PartialMessage<CPlayer_GetAchievementsProgress_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAchievementsProgress_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "appids", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAchievementsProgress_Request {
    return new CPlayer_GetAchievementsProgress_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAchievementsProgress_Request {
    return new CPlayer_GetAchievementsProgress_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAchievementsProgress_Request {
    return new CPlayer_GetAchievementsProgress_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAchievementsProgress_Request | PlainMessage<CPlayer_GetAchievementsProgress_Request> | undefined, b: CPlayer_GetAchievementsProgress_Request | PlainMessage<CPlayer_GetAchievementsProgress_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAchievementsProgress_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAchievementsProgress_Response
 */
export class CPlayer_GetAchievementsProgress_Response extends Message<CPlayer_GetAchievementsProgress_Response> {
  /**
   * @generated from field: repeated CPlayer_GetAchievementsProgress_Response_AchievementProgress achievement_progress = 1;
   */
  achievementProgress: CPlayer_GetAchievementsProgress_Response_AchievementProgress[] = [];

  constructor(data?: PartialMessage<CPlayer_GetAchievementsProgress_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAchievementsProgress_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "achievement_progress", kind: "message", T: CPlayer_GetAchievementsProgress_Response_AchievementProgress, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAchievementsProgress_Response {
    return new CPlayer_GetAchievementsProgress_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAchievementsProgress_Response {
    return new CPlayer_GetAchievementsProgress_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAchievementsProgress_Response {
    return new CPlayer_GetAchievementsProgress_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAchievementsProgress_Response | PlainMessage<CPlayer_GetAchievementsProgress_Response> | undefined, b: CPlayer_GetAchievementsProgress_Response | PlainMessage<CPlayer_GetAchievementsProgress_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAchievementsProgress_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAchievementsProgress_Response_AchievementProgress
 */
export class CPlayer_GetAchievementsProgress_Response_AchievementProgress extends Message<CPlayer_GetAchievementsProgress_Response_AchievementProgress> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 unlocked = 2;
   */
  unlocked?: number;

  /**
   * @generated from field: optional uint32 total = 3;
   */
  total?: number;

  /**
   * @generated from field: optional float percentage = 4;
   */
  percentage?: number;

  /**
   * @generated from field: optional bool all_unlocked = 5;
   */
  allUnlocked?: boolean;

  /**
   * @generated from field: optional uint32 cache_time = 6;
   */
  cacheTime?: number;

  constructor(data?: PartialMessage<CPlayer_GetAchievementsProgress_Response_AchievementProgress>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAchievementsProgress_Response_AchievementProgress";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "unlocked", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "total", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "percentage", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 5, name: "all_unlocked", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "cache_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAchievementsProgress_Response_AchievementProgress {
    return new CPlayer_GetAchievementsProgress_Response_AchievementProgress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAchievementsProgress_Response_AchievementProgress {
    return new CPlayer_GetAchievementsProgress_Response_AchievementProgress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAchievementsProgress_Response_AchievementProgress {
    return new CPlayer_GetAchievementsProgress_Response_AchievementProgress().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAchievementsProgress_Response_AchievementProgress | PlainMessage<CPlayer_GetAchievementsProgress_Response_AchievementProgress> | undefined, b: CPlayer_GetAchievementsProgress_Response_AchievementProgress | PlainMessage<CPlayer_GetAchievementsProgress_Response_AchievementProgress> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAchievementsProgress_Response_AchievementProgress, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAnimatedAvatar_Request
 */
export class CPlayer_GetAnimatedAvatar_Request extends Message<CPlayer_GetAnimatedAvatar_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetAnimatedAvatar_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAnimatedAvatar_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAnimatedAvatar_Request {
    return new CPlayer_GetAnimatedAvatar_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAnimatedAvatar_Request {
    return new CPlayer_GetAnimatedAvatar_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAnimatedAvatar_Request {
    return new CPlayer_GetAnimatedAvatar_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAnimatedAvatar_Request | PlainMessage<CPlayer_GetAnimatedAvatar_Request> | undefined, b: CPlayer_GetAnimatedAvatar_Request | PlainMessage<CPlayer_GetAnimatedAvatar_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAnimatedAvatar_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAnimatedAvatar_Response
 */
export class CPlayer_GetAnimatedAvatar_Response extends Message<CPlayer_GetAnimatedAvatar_Response> {
  /**
   * @generated from field: optional ProfileItem avatar = 1;
   */
  avatar?: ProfileItem;

  constructor(data?: PartialMessage<CPlayer_GetAnimatedAvatar_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAnimatedAvatar_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "avatar", kind: "message", T: ProfileItem, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAnimatedAvatar_Response {
    return new CPlayer_GetAnimatedAvatar_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAnimatedAvatar_Response {
    return new CPlayer_GetAnimatedAvatar_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAnimatedAvatar_Response {
    return new CPlayer_GetAnimatedAvatar_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAnimatedAvatar_Response | PlainMessage<CPlayer_GetAnimatedAvatar_Response> | undefined, b: CPlayer_GetAnimatedAvatar_Response | PlainMessage<CPlayer_GetAnimatedAvatar_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAnimatedAvatar_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAvatarFrame_Request
 */
export class CPlayer_GetAvatarFrame_Request extends Message<CPlayer_GetAvatarFrame_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetAvatarFrame_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAvatarFrame_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAvatarFrame_Request {
    return new CPlayer_GetAvatarFrame_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAvatarFrame_Request {
    return new CPlayer_GetAvatarFrame_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAvatarFrame_Request {
    return new CPlayer_GetAvatarFrame_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAvatarFrame_Request | PlainMessage<CPlayer_GetAvatarFrame_Request> | undefined, b: CPlayer_GetAvatarFrame_Request | PlainMessage<CPlayer_GetAvatarFrame_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAvatarFrame_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetAvatarFrame_Response
 */
export class CPlayer_GetAvatarFrame_Response extends Message<CPlayer_GetAvatarFrame_Response> {
  /**
   * @generated from field: optional ProfileItem avatar_frame = 1;
   */
  avatarFrame?: ProfileItem;

  constructor(data?: PartialMessage<CPlayer_GetAvatarFrame_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetAvatarFrame_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "avatar_frame", kind: "message", T: ProfileItem, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetAvatarFrame_Response {
    return new CPlayer_GetAvatarFrame_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetAvatarFrame_Response {
    return new CPlayer_GetAvatarFrame_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetAvatarFrame_Response {
    return new CPlayer_GetAvatarFrame_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetAvatarFrame_Response | PlainMessage<CPlayer_GetAvatarFrame_Response> | undefined, b: CPlayer_GetAvatarFrame_Response | PlainMessage<CPlayer_GetAvatarFrame_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetAvatarFrame_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetCommunityBadgeProgress_Request
 */
export class CPlayer_GetCommunityBadgeProgress_Request extends Message<CPlayer_GetCommunityBadgeProgress_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional int32 badgeid = 2;
   */
  badgeid?: number;

  constructor(data?: PartialMessage<CPlayer_GetCommunityBadgeProgress_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetCommunityBadgeProgress_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "badgeid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetCommunityBadgeProgress_Request {
    return new CPlayer_GetCommunityBadgeProgress_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityBadgeProgress_Request {
    return new CPlayer_GetCommunityBadgeProgress_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityBadgeProgress_Request {
    return new CPlayer_GetCommunityBadgeProgress_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetCommunityBadgeProgress_Request | PlainMessage<CPlayer_GetCommunityBadgeProgress_Request> | undefined, b: CPlayer_GetCommunityBadgeProgress_Request | PlainMessage<CPlayer_GetCommunityBadgeProgress_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetCommunityBadgeProgress_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetCommunityBadgeProgress_Response
 */
export class CPlayer_GetCommunityBadgeProgress_Response extends Message<CPlayer_GetCommunityBadgeProgress_Response> {
  /**
   * @generated from field: repeated CPlayer_GetCommunityBadgeProgress_Response_Quest quests = 1;
   */
  quests: CPlayer_GetCommunityBadgeProgress_Response_Quest[] = [];

  constructor(data?: PartialMessage<CPlayer_GetCommunityBadgeProgress_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetCommunityBadgeProgress_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "quests", kind: "message", T: CPlayer_GetCommunityBadgeProgress_Response_Quest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetCommunityBadgeProgress_Response {
    return new CPlayer_GetCommunityBadgeProgress_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityBadgeProgress_Response {
    return new CPlayer_GetCommunityBadgeProgress_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityBadgeProgress_Response {
    return new CPlayer_GetCommunityBadgeProgress_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetCommunityBadgeProgress_Response | PlainMessage<CPlayer_GetCommunityBadgeProgress_Response> | undefined, b: CPlayer_GetCommunityBadgeProgress_Response | PlainMessage<CPlayer_GetCommunityBadgeProgress_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetCommunityBadgeProgress_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetCommunityBadgeProgress_Response_Quest
 */
export class CPlayer_GetCommunityBadgeProgress_Response_Quest extends Message<CPlayer_GetCommunityBadgeProgress_Response_Quest> {
  /**
   * @generated from field: optional uint32 questid = 1;
   */
  questid?: number;

  /**
   * @generated from field: optional bool completed = 2;
   */
  completed?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetCommunityBadgeProgress_Response_Quest>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetCommunityBadgeProgress_Response_Quest";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "questid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "completed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetCommunityBadgeProgress_Response_Quest {
    return new CPlayer_GetCommunityBadgeProgress_Response_Quest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityBadgeProgress_Response_Quest {
    return new CPlayer_GetCommunityBadgeProgress_Response_Quest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityBadgeProgress_Response_Quest {
    return new CPlayer_GetCommunityBadgeProgress_Response_Quest().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetCommunityBadgeProgress_Response_Quest | PlainMessage<CPlayer_GetCommunityBadgeProgress_Response_Quest> | undefined, b: CPlayer_GetCommunityBadgeProgress_Response_Quest | PlainMessage<CPlayer_GetCommunityBadgeProgress_Response_Quest> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetCommunityBadgeProgress_Response_Quest, a, b);
  }
}

/**
 * @generated from message CPlayer_GetCommunityPreferences_Request
 */
export class CPlayer_GetCommunityPreferences_Request extends Message<CPlayer_GetCommunityPreferences_Request> {
  constructor(data?: PartialMessage<CPlayer_GetCommunityPreferences_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetCommunityPreferences_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetCommunityPreferences_Request {
    return new CPlayer_GetCommunityPreferences_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityPreferences_Request {
    return new CPlayer_GetCommunityPreferences_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityPreferences_Request {
    return new CPlayer_GetCommunityPreferences_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetCommunityPreferences_Request | PlainMessage<CPlayer_GetCommunityPreferences_Request> | undefined, b: CPlayer_GetCommunityPreferences_Request | PlainMessage<CPlayer_GetCommunityPreferences_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetCommunityPreferences_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetCommunityPreferences_Response
 */
export class CPlayer_GetCommunityPreferences_Response extends Message<CPlayer_GetCommunityPreferences_Response> {
  /**
   * @generated from field: optional CPlayer_CommunityPreferences preferences = 1;
   */
  preferences?: CPlayer_CommunityPreferences;

  /**
   * @generated from field: optional UserContentDescriptorPreferences content_descriptor_preferences = 2;
   */
  contentDescriptorPreferences?: UserContentDescriptorPreferences;

  constructor(data?: PartialMessage<CPlayer_GetCommunityPreferences_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetCommunityPreferences_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "preferences", kind: "message", T: CPlayer_CommunityPreferences, opt: true },
    { no: 2, name: "content_descriptor_preferences", kind: "message", T: UserContentDescriptorPreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetCommunityPreferences_Response {
    return new CPlayer_GetCommunityPreferences_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityPreferences_Response {
    return new CPlayer_GetCommunityPreferences_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetCommunityPreferences_Response {
    return new CPlayer_GetCommunityPreferences_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetCommunityPreferences_Response | PlainMessage<CPlayer_GetCommunityPreferences_Response> | undefined, b: CPlayer_GetCommunityPreferences_Response | PlainMessage<CPlayer_GetCommunityPreferences_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetCommunityPreferences_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetDurationControl_Request
 */
export class CPlayer_GetDurationControl_Request extends Message<CPlayer_GetDurationControl_Request> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  constructor(data?: PartialMessage<CPlayer_GetDurationControl_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetDurationControl_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetDurationControl_Request {
    return new CPlayer_GetDurationControl_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetDurationControl_Request {
    return new CPlayer_GetDurationControl_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetDurationControl_Request {
    return new CPlayer_GetDurationControl_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetDurationControl_Request | PlainMessage<CPlayer_GetDurationControl_Request> | undefined, b: CPlayer_GetDurationControl_Request | PlainMessage<CPlayer_GetDurationControl_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetDurationControl_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetDurationControl_Response
 */
export class CPlayer_GetDurationControl_Response extends Message<CPlayer_GetDurationControl_Response> {
  /**
   * @generated from field: optional bool is_enabled = 1;
   */
  isEnabled?: boolean;

  /**
   * @generated from field: optional int32 seconds = 2;
   */
  seconds?: number;

  /**
   * @generated from field: optional int32 seconds_today = 3;
   */
  secondsToday?: number;

  /**
   * @generated from field: optional bool is_steamchina_account = 4;
   */
  isSteamchinaAccount?: boolean;

  /**
   * @generated from field: optional bool is_age_verified = 5;
   */
  isAgeVerified?: boolean;

  /**
   * @generated from field: optional uint32 seconds_allowed_today = 6;
   */
  secondsAllowedToday?: number;

  /**
   * @generated from field: optional bool age_verification_pending = 7;
   */
  ageVerificationPending?: boolean;

  /**
   * @generated from field: optional bool block_minors = 8;
   */
  blockMinors?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetDurationControl_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetDurationControl_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "is_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "seconds_today", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "is_steamchina_account", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "is_age_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "seconds_allowed_today", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "age_verification_pending", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "block_minors", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetDurationControl_Response {
    return new CPlayer_GetDurationControl_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetDurationControl_Response {
    return new CPlayer_GetDurationControl_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetDurationControl_Response {
    return new CPlayer_GetDurationControl_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetDurationControl_Response | PlainMessage<CPlayer_GetDurationControl_Response> | undefined, b: CPlayer_GetDurationControl_Response | PlainMessage<CPlayer_GetDurationControl_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetDurationControl_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetEmoticonList_Request
 */
export class CPlayer_GetEmoticonList_Request extends Message<CPlayer_GetEmoticonList_Request> {
  constructor(data?: PartialMessage<CPlayer_GetEmoticonList_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetEmoticonList_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetEmoticonList_Request {
    return new CPlayer_GetEmoticonList_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetEmoticonList_Request {
    return new CPlayer_GetEmoticonList_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetEmoticonList_Request {
    return new CPlayer_GetEmoticonList_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetEmoticonList_Request | PlainMessage<CPlayer_GetEmoticonList_Request> | undefined, b: CPlayer_GetEmoticonList_Request | PlainMessage<CPlayer_GetEmoticonList_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetEmoticonList_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetEmoticonList_Response
 */
export class CPlayer_GetEmoticonList_Response extends Message<CPlayer_GetEmoticonList_Response> {
  /**
   * @generated from field: repeated CPlayer_GetEmoticonList_Response_Emoticon emoticons = 1;
   */
  emoticons: CPlayer_GetEmoticonList_Response_Emoticon[] = [];

  constructor(data?: PartialMessage<CPlayer_GetEmoticonList_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetEmoticonList_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "emoticons", kind: "message", T: CPlayer_GetEmoticonList_Response_Emoticon, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetEmoticonList_Response {
    return new CPlayer_GetEmoticonList_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetEmoticonList_Response {
    return new CPlayer_GetEmoticonList_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetEmoticonList_Response {
    return new CPlayer_GetEmoticonList_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetEmoticonList_Response | PlainMessage<CPlayer_GetEmoticonList_Response> | undefined, b: CPlayer_GetEmoticonList_Response | PlainMessage<CPlayer_GetEmoticonList_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetEmoticonList_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetEmoticonList_Response_Emoticon
 */
export class CPlayer_GetEmoticonList_Response_Emoticon extends Message<CPlayer_GetEmoticonList_Response_Emoticon> {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional int32 count = 2;
   */
  count?: number;

  /**
   * @generated from field: optional uint32 time_last_used = 3;
   */
  timeLastUsed?: number;

  /**
   * @generated from field: optional uint32 use_count = 4;
   */
  useCount?: number;

  /**
   * @generated from field: optional uint32 time_received = 5;
   */
  timeReceived?: number;

  /**
   * @generated from field: optional uint32 appid = 6;
   */
  appid?: number;

  constructor(data?: PartialMessage<CPlayer_GetEmoticonList_Response_Emoticon>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetEmoticonList_Response_Emoticon";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "time_last_used", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "use_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "time_received", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetEmoticonList_Response_Emoticon {
    return new CPlayer_GetEmoticonList_Response_Emoticon().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetEmoticonList_Response_Emoticon {
    return new CPlayer_GetEmoticonList_Response_Emoticon().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetEmoticonList_Response_Emoticon {
    return new CPlayer_GetEmoticonList_Response_Emoticon().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetEmoticonList_Response_Emoticon | PlainMessage<CPlayer_GetEmoticonList_Response_Emoticon> | undefined, b: CPlayer_GetEmoticonList_Response_Emoticon | PlainMessage<CPlayer_GetEmoticonList_Response_Emoticon> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetEmoticonList_Response_Emoticon, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFavoriteBadge_Request
 */
export class CPlayer_GetFavoriteBadge_Request extends Message<CPlayer_GetFavoriteBadge_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  constructor(data?: PartialMessage<CPlayer_GetFavoriteBadge_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFavoriteBadge_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFavoriteBadge_Request {
    return new CPlayer_GetFavoriteBadge_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFavoriteBadge_Request {
    return new CPlayer_GetFavoriteBadge_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFavoriteBadge_Request {
    return new CPlayer_GetFavoriteBadge_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFavoriteBadge_Request | PlainMessage<CPlayer_GetFavoriteBadge_Request> | undefined, b: CPlayer_GetFavoriteBadge_Request | PlainMessage<CPlayer_GetFavoriteBadge_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFavoriteBadge_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFavoriteBadge_Response
 */
export class CPlayer_GetFavoriteBadge_Response extends Message<CPlayer_GetFavoriteBadge_Response> {
  /**
   * @generated from field: optional bool has_favorite_badge = 1;
   */
  hasFavoriteBadge?: boolean;

  /**
   * @generated from field: optional uint32 badgeid = 2;
   */
  badgeid?: number;

  /**
   * @generated from field: optional uint64 communityitemid = 3;
   */
  communityitemid?: bigint;

  /**
   * @generated from field: optional uint32 item_type = 4;
   */
  itemType?: number;

  /**
   * @generated from field: optional uint32 border_color = 5;
   */
  borderColor?: number;

  /**
   * @generated from field: optional uint32 appid = 6;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 level = 7;
   */
  level?: number;

  constructor(data?: PartialMessage<CPlayer_GetFavoriteBadge_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFavoriteBadge_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "has_favorite_badge", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "badgeid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "item_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "border_color", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "level", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFavoriteBadge_Response {
    return new CPlayer_GetFavoriteBadge_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFavoriteBadge_Response {
    return new CPlayer_GetFavoriteBadge_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFavoriteBadge_Response {
    return new CPlayer_GetFavoriteBadge_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFavoriteBadge_Response | PlainMessage<CPlayer_GetFavoriteBadge_Response> | undefined, b: CPlayer_GetFavoriteBadge_Response | PlainMessage<CPlayer_GetFavoriteBadge_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFavoriteBadge_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsAppsActivity_Request
 */
export class CPlayer_GetFriendsAppsActivity_Request extends Message<CPlayer_GetFriendsAppsActivity_Request> {
  /**
   * @generated from field: optional string news_language = 1;
   */
  newsLanguage?: string;

  /**
   * @generated from field: optional uint32 request_flags = 2;
   */
  requestFlags?: number;

  constructor(data?: PartialMessage<CPlayer_GetFriendsAppsActivity_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsAppsActivity_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "news_language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "request_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsAppsActivity_Request {
    return new CPlayer_GetFriendsAppsActivity_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Request {
    return new CPlayer_GetFriendsAppsActivity_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Request {
    return new CPlayer_GetFriendsAppsActivity_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsAppsActivity_Request | PlainMessage<CPlayer_GetFriendsAppsActivity_Request> | undefined, b: CPlayer_GetFriendsAppsActivity_Request | PlainMessage<CPlayer_GetFriendsAppsActivity_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsAppsActivity_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsAppsActivity_Response
 */
export class CPlayer_GetFriendsAppsActivity_Response extends Message<CPlayer_GetFriendsAppsActivity_Response> {
  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo trending = 1;
   */
  trending: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo recent_purchases = 2;
   */
  recentPurchases: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo unowned = 3;
   */
  unowned: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo popular = 4;
   */
  popular: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo dont_forget = 5;
   */
  dontForget: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo being_discussed = 6;
   */
  beingDiscussed: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo new_to_group = 7;
   */
  newToGroup: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo returned_to_group = 8;
   */
  returnedToGroup: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo[] = [];

  /**
   * @generated from field: optional uint32 active_friend_count = 9 [default = 0];
   */
  activeFriendCount?: number;

  constructor(data?: PartialMessage<CPlayer_GetFriendsAppsActivity_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsAppsActivity_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "trending", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 2, name: "recent_purchases", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 3, name: "unowned", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 4, name: "popular", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 5, name: "dont_forget", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 6, name: "being_discussed", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 7, name: "new_to_group", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 8, name: "returned_to_group", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, repeated: true },
    { no: 9, name: "active_friend_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 0 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsAppsActivity_Response {
    return new CPlayer_GetFriendsAppsActivity_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Response {
    return new CPlayer_GetFriendsAppsActivity_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Response {
    return new CPlayer_GetFriendsAppsActivity_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsAppsActivity_Response | PlainMessage<CPlayer_GetFriendsAppsActivity_Response> | undefined, b: CPlayer_GetFriendsAppsActivity_Response | PlainMessage<CPlayer_GetFriendsAppsActivity_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsAppsActivity_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo
 */
export class CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo extends Message<CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: repeated CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime friends = 2;
   */
  friends: CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime[] = [];

  /**
   * @generated from field: optional uint32 display_order = 3;
   */
  displayOrder?: number;

  constructor(data?: PartialMessage<CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "friends", kind: "message", T: CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime, repeated: true },
    { no: 3, name: "display_order", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo {
    return new CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo {
    return new CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo {
    return new CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo | PlainMessage<CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo> | undefined, b: CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo | PlainMessage<CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsAppsActivity_Response_AppFriendsInfo, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime
 */
export class CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime extends Message<CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional uint32 minutes_played_this_week = 2;
   */
  minutesPlayedThisWeek?: number;

  /**
   * @generated from field: optional uint32 minutes_played_two_weeks = 3;
   */
  minutesPlayedTwoWeeks?: number;

  /**
   * @generated from field: optional uint32 minutes_played_forever = 4;
   */
  minutesPlayedForever?: number;

  /**
   * @generated from field: optional uint32 event_count = 5;
   */
  eventCount?: number;

  constructor(data?: PartialMessage<CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "minutes_played_this_week", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "minutes_played_two_weeks", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "minutes_played_forever", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "event_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime {
    return new CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime {
    return new CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime {
    return new CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime | PlainMessage<CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime> | undefined, b: CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime | PlainMessage<CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsAppsActivity_Response_FriendPlayTime, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Request
 */
export class CPlayer_GetFriendsGameplayInfo_Request extends Message<CPlayer_GetFriendsGameplayInfo_Request> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  constructor(data?: PartialMessage<CPlayer_GetFriendsGameplayInfo_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsGameplayInfo_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsGameplayInfo_Request {
    return new CPlayer_GetFriendsGameplayInfo_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Request {
    return new CPlayer_GetFriendsGameplayInfo_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Request {
    return new CPlayer_GetFriendsGameplayInfo_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsGameplayInfo_Request | PlainMessage<CPlayer_GetFriendsGameplayInfo_Request> | undefined, b: CPlayer_GetFriendsGameplayInfo_Request | PlainMessage<CPlayer_GetFriendsGameplayInfo_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsGameplayInfo_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Response
 */
export class CPlayer_GetFriendsGameplayInfo_Response extends Message<CPlayer_GetFriendsGameplayInfo_Response> {
  /**
   * @generated from field: optional CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo your_info = 1;
   */
  yourInfo?: CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo;

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo in_game = 2;
   */
  inGame: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo played_recently = 3;
   */
  playedRecently: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo played_ever = 4;
   */
  playedEver: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo owns = 5;
   */
  owns: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[] = [];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo in_wishlist = 6;
   */
  inWishlist: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[] = [];

  constructor(data?: PartialMessage<CPlayer_GetFriendsGameplayInfo_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsGameplayInfo_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "your_info", kind: "message", T: CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo, opt: true },
    { no: 2, name: "in_game", kind: "message", T: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo, repeated: true },
    { no: 3, name: "played_recently", kind: "message", T: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo, repeated: true },
    { no: 4, name: "played_ever", kind: "message", T: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo, repeated: true },
    { no: 5, name: "owns", kind: "message", T: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo, repeated: true },
    { no: 6, name: "in_wishlist", kind: "message", T: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsGameplayInfo_Response {
    return new CPlayer_GetFriendsGameplayInfo_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Response {
    return new CPlayer_GetFriendsGameplayInfo_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Response {
    return new CPlayer_GetFriendsGameplayInfo_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsGameplayInfo_Response | PlainMessage<CPlayer_GetFriendsGameplayInfo_Response> | undefined, b: CPlayer_GetFriendsGameplayInfo_Response | PlainMessage<CPlayer_GetFriendsGameplayInfo_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsGameplayInfo_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo
 */
export class CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo extends Message<CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional uint32 minutes_played = 2;
   */
  minutesPlayed?: number;

  /**
   * @generated from field: optional uint32 minutes_played_forever = 3;
   */
  minutesPlayedForever?: number;

  constructor(data?: PartialMessage<CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "minutes_played", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "minutes_played_forever", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo {
    return new CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo {
    return new CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo {
    return new CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo | PlainMessage<CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo> | undefined, b: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo | PlainMessage<CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo, a, b);
  }
}

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo
 */
export class CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo extends Message<CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional uint32 minutes_played = 2;
   */
  minutesPlayed?: number;

  /**
   * @generated from field: optional uint32 minutes_played_forever = 3;
   */
  minutesPlayedForever?: number;

  /**
   * @generated from field: optional bool in_wishlist = 4;
   */
  inWishlist?: boolean;

  /**
   * @generated from field: optional bool owned = 5;
   */
  owned?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "minutes_played", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "minutes_played_forever", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "in_wishlist", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "owned", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo {
    return new CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo {
    return new CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo {
    return new CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo | PlainMessage<CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo> | undefined, b: CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo | PlainMessage<CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo, a, b);
  }
}

/**
 * @generated from message CPlayer_GetGameAchievements_Request
 */
export class CPlayer_GetGameAchievements_Request extends Message<CPlayer_GetGameAchievements_Request> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetGameAchievements_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetGameAchievements_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetGameAchievements_Request {
    return new CPlayer_GetGameAchievements_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetGameAchievements_Request {
    return new CPlayer_GetGameAchievements_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetGameAchievements_Request {
    return new CPlayer_GetGameAchievements_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetGameAchievements_Request | PlainMessage<CPlayer_GetGameAchievements_Request> | undefined, b: CPlayer_GetGameAchievements_Request | PlainMessage<CPlayer_GetGameAchievements_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetGameAchievements_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetGameAchievements_Response
 */
export class CPlayer_GetGameAchievements_Response extends Message<CPlayer_GetGameAchievements_Response> {
  /**
   * @generated from field: repeated CPlayer_GetGameAchievements_Response_Achievement achievements = 1;
   */
  achievements: CPlayer_GetGameAchievements_Response_Achievement[] = [];

  constructor(data?: PartialMessage<CPlayer_GetGameAchievements_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetGameAchievements_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "achievements", kind: "message", T: CPlayer_GetGameAchievements_Response_Achievement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetGameAchievements_Response {
    return new CPlayer_GetGameAchievements_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetGameAchievements_Response {
    return new CPlayer_GetGameAchievements_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetGameAchievements_Response {
    return new CPlayer_GetGameAchievements_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetGameAchievements_Response | PlainMessage<CPlayer_GetGameAchievements_Response> | undefined, b: CPlayer_GetGameAchievements_Response | PlainMessage<CPlayer_GetGameAchievements_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetGameAchievements_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetGameAchievements_Response_Achievement
 */
export class CPlayer_GetGameAchievements_Response_Achievement extends Message<CPlayer_GetGameAchievements_Response_Achievement> {
  /**
   * @generated from field: optional string internal_name = 1;
   */
  internalName?: string;

  /**
   * @generated from field: optional string localized_name = 2;
   */
  localizedName?: string;

  /**
   * @generated from field: optional string localized_desc = 3;
   */
  localizedDesc?: string;

  /**
   * @generated from field: optional string icon = 4;
   */
  icon?: string;

  /**
   * @generated from field: optional string icon_gray = 5;
   */
  iconGray?: string;

  /**
   * @generated from field: optional bool hidden = 6;
   */
  hidden?: boolean;

  /**
   * @generated from field: optional string player_percent_unlocked = 7;
   */
  playerPercentUnlocked?: string;

  constructor(data?: PartialMessage<CPlayer_GetGameAchievements_Response_Achievement>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetGameAchievements_Response_Achievement";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "internal_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "localized_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "localized_desc", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "icon", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "icon_gray", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "hidden", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "player_percent_unlocked", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetGameAchievements_Response_Achievement {
    return new CPlayer_GetGameAchievements_Response_Achievement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetGameAchievements_Response_Achievement {
    return new CPlayer_GetGameAchievements_Response_Achievement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetGameAchievements_Response_Achievement {
    return new CPlayer_GetGameAchievements_Response_Achievement().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetGameAchievements_Response_Achievement | PlainMessage<CPlayer_GetGameAchievements_Response_Achievement> | undefined, b: CPlayer_GetGameAchievements_Response_Achievement | PlainMessage<CPlayer_GetGameAchievements_Response_Achievement> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetGameAchievements_Response_Achievement, a, b);
  }
}

/**
 * @generated from message CPlayer_GetGameBadgeLevels_Request
 */
export class CPlayer_GetGameBadgeLevels_Request extends Message<CPlayer_GetGameBadgeLevels_Request> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  constructor(data?: PartialMessage<CPlayer_GetGameBadgeLevels_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetGameBadgeLevels_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetGameBadgeLevels_Request {
    return new CPlayer_GetGameBadgeLevels_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetGameBadgeLevels_Request {
    return new CPlayer_GetGameBadgeLevels_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetGameBadgeLevels_Request {
    return new CPlayer_GetGameBadgeLevels_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetGameBadgeLevels_Request | PlainMessage<CPlayer_GetGameBadgeLevels_Request> | undefined, b: CPlayer_GetGameBadgeLevels_Request | PlainMessage<CPlayer_GetGameBadgeLevels_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetGameBadgeLevels_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetGameBadgeLevels_Response
 */
export class CPlayer_GetGameBadgeLevels_Response extends Message<CPlayer_GetGameBadgeLevels_Response> {
  /**
   * @generated from field: optional uint32 player_level = 1;
   */
  playerLevel?: number;

  /**
   * @generated from field: repeated CPlayer_GetGameBadgeLevels_Response_Badge badges = 2;
   */
  badges: CPlayer_GetGameBadgeLevels_Response_Badge[] = [];

  constructor(data?: PartialMessage<CPlayer_GetGameBadgeLevels_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetGameBadgeLevels_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "player_level", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "badges", kind: "message", T: CPlayer_GetGameBadgeLevels_Response_Badge, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetGameBadgeLevels_Response {
    return new CPlayer_GetGameBadgeLevels_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetGameBadgeLevels_Response {
    return new CPlayer_GetGameBadgeLevels_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetGameBadgeLevels_Response {
    return new CPlayer_GetGameBadgeLevels_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetGameBadgeLevels_Response | PlainMessage<CPlayer_GetGameBadgeLevels_Response> | undefined, b: CPlayer_GetGameBadgeLevels_Response | PlainMessage<CPlayer_GetGameBadgeLevels_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetGameBadgeLevels_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetGameBadgeLevels_Response_Badge
 */
export class CPlayer_GetGameBadgeLevels_Response_Badge extends Message<CPlayer_GetGameBadgeLevels_Response_Badge> {
  /**
   * @generated from field: optional int32 level = 1;
   */
  level?: number;

  /**
   * @generated from field: optional int32 series = 2;
   */
  series?: number;

  /**
   * @generated from field: optional uint32 border_color = 3;
   */
  borderColor?: number;

  constructor(data?: PartialMessage<CPlayer_GetGameBadgeLevels_Response_Badge>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetGameBadgeLevels_Response_Badge";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "level", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "series", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "border_color", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetGameBadgeLevels_Response_Badge {
    return new CPlayer_GetGameBadgeLevels_Response_Badge().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetGameBadgeLevels_Response_Badge {
    return new CPlayer_GetGameBadgeLevels_Response_Badge().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetGameBadgeLevels_Response_Badge {
    return new CPlayer_GetGameBadgeLevels_Response_Badge().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetGameBadgeLevels_Response_Badge | PlainMessage<CPlayer_GetGameBadgeLevels_Response_Badge> | undefined, b: CPlayer_GetGameBadgeLevels_Response_Badge | PlainMessage<CPlayer_GetGameBadgeLevels_Response_Badge> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetGameBadgeLevels_Response_Badge, a, b);
  }
}

/**
 * @generated from message CPlayer_GetLastPlayedTimes_Request
 */
export class CPlayer_GetLastPlayedTimes_Request extends Message<CPlayer_GetLastPlayedTimes_Request> {
  /**
   * @generated from field: optional uint32 min_last_played = 1;
   */
  minLastPlayed?: number;

  constructor(data?: PartialMessage<CPlayer_GetLastPlayedTimes_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetLastPlayedTimes_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "min_last_played", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetLastPlayedTimes_Request {
    return new CPlayer_GetLastPlayedTimes_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetLastPlayedTimes_Request {
    return new CPlayer_GetLastPlayedTimes_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetLastPlayedTimes_Request {
    return new CPlayer_GetLastPlayedTimes_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetLastPlayedTimes_Request | PlainMessage<CPlayer_GetLastPlayedTimes_Request> | undefined, b: CPlayer_GetLastPlayedTimes_Request | PlainMessage<CPlayer_GetLastPlayedTimes_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetLastPlayedTimes_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetLastPlayedTimes_Response
 */
export class CPlayer_GetLastPlayedTimes_Response extends Message<CPlayer_GetLastPlayedTimes_Response> {
  /**
   * @generated from field: repeated CPlayer_GetLastPlayedTimes_Response_Game games = 1;
   */
  games: CPlayer_GetLastPlayedTimes_Response_Game[] = [];

  constructor(data?: PartialMessage<CPlayer_GetLastPlayedTimes_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetLastPlayedTimes_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "games", kind: "message", T: CPlayer_GetLastPlayedTimes_Response_Game, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetLastPlayedTimes_Response {
    return new CPlayer_GetLastPlayedTimes_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetLastPlayedTimes_Response {
    return new CPlayer_GetLastPlayedTimes_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetLastPlayedTimes_Response {
    return new CPlayer_GetLastPlayedTimes_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetLastPlayedTimes_Response | PlainMessage<CPlayer_GetLastPlayedTimes_Response> | undefined, b: CPlayer_GetLastPlayedTimes_Response | PlainMessage<CPlayer_GetLastPlayedTimes_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetLastPlayedTimes_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetLastPlayedTimes_Response_Game
 */
export class CPlayer_GetLastPlayedTimes_Response_Game extends Message<CPlayer_GetLastPlayedTimes_Response_Game> {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 last_playtime = 2;
   */
  lastPlaytime?: number;

  /**
   * @generated from field: optional int32 playtime_2weeks = 3;
   */
  playtime2weeks?: number;

  /**
   * @generated from field: optional int32 playtime_forever = 4;
   */
  playtimeForever?: number;

  /**
   * @generated from field: optional uint32 first_playtime = 5;
   */
  firstPlaytime?: number;

  /**
   * @generated from field: optional int32 playtime_windows_forever = 6;
   */
  playtimeWindowsForever?: number;

  /**
   * @generated from field: optional int32 playtime_mac_forever = 7;
   */
  playtimeMacForever?: number;

  /**
   * @generated from field: optional int32 playtime_linux_forever = 8;
   */
  playtimeLinuxForever?: number;

  /**
   * @generated from field: optional uint32 first_windows_playtime = 9;
   */
  firstWindowsPlaytime?: number;

  /**
   * @generated from field: optional uint32 first_mac_playtime = 10;
   */
  firstMacPlaytime?: number;

  /**
   * @generated from field: optional uint32 first_linux_playtime = 11;
   */
  firstLinuxPlaytime?: number;

  /**
   * @generated from field: optional uint32 last_windows_playtime = 12;
   */
  lastWindowsPlaytime?: number;

  /**
   * @generated from field: optional uint32 last_mac_playtime = 13;
   */
  lastMacPlaytime?: number;

  /**
   * @generated from field: optional uint32 last_linux_playtime = 14;
   */
  lastLinuxPlaytime?: number;

  /**
   * @generated from field: optional uint32 playtime_disconnected = 15;
   */
  playtimeDisconnected?: number;

  /**
   * @generated from field: optional int32 playtime_deck_forever = 16;
   */
  playtimeDeckForever?: number;

  /**
   * @generated from field: optional uint32 first_deck_playtime = 17;
   */
  firstDeckPlaytime?: number;

  /**
   * @generated from field: optional uint32 last_deck_playtime = 18;
   */
  lastDeckPlaytime?: number;

  constructor(data?: PartialMessage<CPlayer_GetLastPlayedTimes_Response_Game>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetLastPlayedTimes_Response_Game";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "last_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "playtime_2weeks", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "playtime_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "first_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "playtime_windows_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "playtime_mac_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "playtime_linux_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "first_windows_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 10, name: "first_mac_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "first_linux_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 12, name: "last_windows_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 13, name: "last_mac_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 14, name: "last_linux_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 15, name: "playtime_disconnected", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 16, name: "playtime_deck_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 17, name: "first_deck_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 18, name: "last_deck_playtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetLastPlayedTimes_Response_Game {
    return new CPlayer_GetLastPlayedTimes_Response_Game().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetLastPlayedTimes_Response_Game {
    return new CPlayer_GetLastPlayedTimes_Response_Game().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetLastPlayedTimes_Response_Game {
    return new CPlayer_GetLastPlayedTimes_Response_Game().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetLastPlayedTimes_Response_Game | PlainMessage<CPlayer_GetLastPlayedTimes_Response_Game> | undefined, b: CPlayer_GetLastPlayedTimes_Response_Game | PlainMessage<CPlayer_GetLastPlayedTimes_Response_Game> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetLastPlayedTimes_Response_Game, a, b);
  }
}

/**
 * @generated from message CPlayer_GetMiniProfileBackground_Request
 */
export class CPlayer_GetMiniProfileBackground_Request extends Message<CPlayer_GetMiniProfileBackground_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetMiniProfileBackground_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetMiniProfileBackground_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetMiniProfileBackground_Request {
    return new CPlayer_GetMiniProfileBackground_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetMiniProfileBackground_Request {
    return new CPlayer_GetMiniProfileBackground_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetMiniProfileBackground_Request {
    return new CPlayer_GetMiniProfileBackground_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetMiniProfileBackground_Request | PlainMessage<CPlayer_GetMiniProfileBackground_Request> | undefined, b: CPlayer_GetMiniProfileBackground_Request | PlainMessage<CPlayer_GetMiniProfileBackground_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetMiniProfileBackground_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetMiniProfileBackground_Response
 */
export class CPlayer_GetMiniProfileBackground_Response extends Message<CPlayer_GetMiniProfileBackground_Response> {
  /**
   * @generated from field: optional ProfileItem profile_background = 1;
   */
  profileBackground?: ProfileItem;

  constructor(data?: PartialMessage<CPlayer_GetMiniProfileBackground_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetMiniProfileBackground_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "profile_background", kind: "message", T: ProfileItem, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetMiniProfileBackground_Response {
    return new CPlayer_GetMiniProfileBackground_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetMiniProfileBackground_Response {
    return new CPlayer_GetMiniProfileBackground_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetMiniProfileBackground_Response {
    return new CPlayer_GetMiniProfileBackground_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetMiniProfileBackground_Response | PlainMessage<CPlayer_GetMiniProfileBackground_Response> | undefined, b: CPlayer_GetMiniProfileBackground_Response | PlainMessage<CPlayer_GetMiniProfileBackground_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetMiniProfileBackground_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetMutualFriendsForIncomingInvites_Request
 */
export class CPlayer_GetMutualFriendsForIncomingInvites_Request extends Message<CPlayer_GetMutualFriendsForIncomingInvites_Request> {
  constructor(data?: PartialMessage<CPlayer_GetMutualFriendsForIncomingInvites_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetMutualFriendsForIncomingInvites_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetMutualFriendsForIncomingInvites_Request {
    return new CPlayer_GetMutualFriendsForIncomingInvites_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetMutualFriendsForIncomingInvites_Request {
    return new CPlayer_GetMutualFriendsForIncomingInvites_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetMutualFriendsForIncomingInvites_Request {
    return new CPlayer_GetMutualFriendsForIncomingInvites_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetMutualFriendsForIncomingInvites_Request | PlainMessage<CPlayer_GetMutualFriendsForIncomingInvites_Request> | undefined, b: CPlayer_GetMutualFriendsForIncomingInvites_Request | PlainMessage<CPlayer_GetMutualFriendsForIncomingInvites_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetMutualFriendsForIncomingInvites_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetMutualFriendsForIncomingInvites_Response
 */
export class CPlayer_GetMutualFriendsForIncomingInvites_Response extends Message<CPlayer_GetMutualFriendsForIncomingInvites_Response> {
  /**
   * @generated from field: repeated CPlayer_IncomingInviteMutualFriendList incoming_invite_mutual_friends_lists = 1;
   */
  incomingInviteMutualFriendsLists: CPlayer_IncomingInviteMutualFriendList[] = [];

  constructor(data?: PartialMessage<CPlayer_GetMutualFriendsForIncomingInvites_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetMutualFriendsForIncomingInvites_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "incoming_invite_mutual_friends_lists", kind: "message", T: CPlayer_IncomingInviteMutualFriendList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetMutualFriendsForIncomingInvites_Response {
    return new CPlayer_GetMutualFriendsForIncomingInvites_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetMutualFriendsForIncomingInvites_Response {
    return new CPlayer_GetMutualFriendsForIncomingInvites_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetMutualFriendsForIncomingInvites_Response {
    return new CPlayer_GetMutualFriendsForIncomingInvites_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetMutualFriendsForIncomingInvites_Response | PlainMessage<CPlayer_GetMutualFriendsForIncomingInvites_Response> | undefined, b: CPlayer_GetMutualFriendsForIncomingInvites_Response | PlainMessage<CPlayer_GetMutualFriendsForIncomingInvites_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetMutualFriendsForIncomingInvites_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetNewSteamAnnouncementState_Request
 */
export class CPlayer_GetNewSteamAnnouncementState_Request extends Message<CPlayer_GetNewSteamAnnouncementState_Request> {
  /**
   * @generated from field: optional int32 language = 1;
   */
  language?: number;

  constructor(data?: PartialMessage<CPlayer_GetNewSteamAnnouncementState_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetNewSteamAnnouncementState_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetNewSteamAnnouncementState_Request {
    return new CPlayer_GetNewSteamAnnouncementState_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetNewSteamAnnouncementState_Request {
    return new CPlayer_GetNewSteamAnnouncementState_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetNewSteamAnnouncementState_Request {
    return new CPlayer_GetNewSteamAnnouncementState_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetNewSteamAnnouncementState_Request | PlainMessage<CPlayer_GetNewSteamAnnouncementState_Request> | undefined, b: CPlayer_GetNewSteamAnnouncementState_Request | PlainMessage<CPlayer_GetNewSteamAnnouncementState_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetNewSteamAnnouncementState_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetNewSteamAnnouncementState_Response
 */
export class CPlayer_GetNewSteamAnnouncementState_Response extends Message<CPlayer_GetNewSteamAnnouncementState_Response> {
  /**
   * @generated from field: optional int32 state = 1;
   */
  state?: number;

  /**
   * @generated from field: optional string announcement_headline = 2;
   */
  announcementHeadline?: string;

  /**
   * @generated from field: optional string announcement_url = 3;
   */
  announcementUrl?: string;

  /**
   * @generated from field: optional uint32 time_posted = 4;
   */
  timePosted?: number;

  /**
   * @generated from field: optional uint64 announcement_gid = 5;
   */
  announcementGid?: bigint;

  constructor(data?: PartialMessage<CPlayer_GetNewSteamAnnouncementState_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetNewSteamAnnouncementState_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "announcement_headline", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "announcement_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "time_posted", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "announcement_gid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetNewSteamAnnouncementState_Response {
    return new CPlayer_GetNewSteamAnnouncementState_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetNewSteamAnnouncementState_Response {
    return new CPlayer_GetNewSteamAnnouncementState_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetNewSteamAnnouncementState_Response {
    return new CPlayer_GetNewSteamAnnouncementState_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetNewSteamAnnouncementState_Response | PlainMessage<CPlayer_GetNewSteamAnnouncementState_Response> | undefined, b: CPlayer_GetNewSteamAnnouncementState_Response | PlainMessage<CPlayer_GetNewSteamAnnouncementState_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetNewSteamAnnouncementState_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetNicknameList_Request
 */
export class CPlayer_GetNicknameList_Request extends Message<CPlayer_GetNicknameList_Request> {
  constructor(data?: PartialMessage<CPlayer_GetNicknameList_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetNicknameList_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetNicknameList_Request {
    return new CPlayer_GetNicknameList_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetNicknameList_Request {
    return new CPlayer_GetNicknameList_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetNicknameList_Request {
    return new CPlayer_GetNicknameList_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetNicknameList_Request | PlainMessage<CPlayer_GetNicknameList_Request> | undefined, b: CPlayer_GetNicknameList_Request | PlainMessage<CPlayer_GetNicknameList_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetNicknameList_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetNicknameList_Response
 */
export class CPlayer_GetNicknameList_Response extends Message<CPlayer_GetNicknameList_Response> {
  /**
   * @generated from field: repeated CPlayer_GetNicknameList_Response_PlayerNickname nicknames = 1;
   */
  nicknames: CPlayer_GetNicknameList_Response_PlayerNickname[] = [];

  constructor(data?: PartialMessage<CPlayer_GetNicknameList_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetNicknameList_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "nicknames", kind: "message", T: CPlayer_GetNicknameList_Response_PlayerNickname, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetNicknameList_Response {
    return new CPlayer_GetNicknameList_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetNicknameList_Response {
    return new CPlayer_GetNicknameList_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetNicknameList_Response {
    return new CPlayer_GetNicknameList_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetNicknameList_Response | PlainMessage<CPlayer_GetNicknameList_Response> | undefined, b: CPlayer_GetNicknameList_Response | PlainMessage<CPlayer_GetNicknameList_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetNicknameList_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetNicknameList_Response_PlayerNickname
 */
export class CPlayer_GetNicknameList_Response_PlayerNickname extends Message<CPlayer_GetNicknameList_Response_PlayerNickname> {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid?: number;

  /**
   * @generated from field: optional string nickname = 2;
   */
  nickname?: string;

  constructor(data?: PartialMessage<CPlayer_GetNicknameList_Response_PlayerNickname>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetNicknameList_Response_PlayerNickname";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetNicknameList_Response_PlayerNickname {
    return new CPlayer_GetNicknameList_Response_PlayerNickname().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetNicknameList_Response_PlayerNickname {
    return new CPlayer_GetNicknameList_Response_PlayerNickname().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetNicknameList_Response_PlayerNickname {
    return new CPlayer_GetNicknameList_Response_PlayerNickname().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetNicknameList_Response_PlayerNickname | PlainMessage<CPlayer_GetNicknameList_Response_PlayerNickname> | undefined, b: CPlayer_GetNicknameList_Response_PlayerNickname | PlainMessage<CPlayer_GetNicknameList_Response_PlayerNickname> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetNicknameList_Response_PlayerNickname, a, b);
  }
}

/**
 * @generated from message CPlayer_GetOwnedGames_Request
 */
export class CPlayer_GetOwnedGames_Request extends Message<CPlayer_GetOwnedGames_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional bool include_appinfo = 2;
   */
  includeAppinfo?: boolean;

  /**
   * @generated from field: optional bool include_played_free_games = 3;
   */
  includePlayedFreeGames?: boolean;

  /**
   * @generated from field: repeated uint32 appids_filter = 4;
   */
  appidsFilter: number[] = [];

  /**
   * @generated from field: optional bool include_free_sub = 5;
   */
  includeFreeSub?: boolean;

  /**
   * @generated from field: optional bool skip_unvetted_apps = 6 [default = true];
   */
  skipUnvettedApps?: boolean;

  /**
   * @generated from field: optional string language = 7;
   */
  language?: string;

  /**
   * @generated from field: optional bool include_extended_appinfo = 8;
   */
  includeExtendedAppinfo?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetOwnedGames_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetOwnedGames_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "include_appinfo", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "include_played_free_games", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "appids_filter", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 5, name: "include_free_sub", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "skip_unvetted_apps", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true, default: true },
    { no: 7, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "include_extended_appinfo", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetOwnedGames_Request {
    return new CPlayer_GetOwnedGames_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetOwnedGames_Request {
    return new CPlayer_GetOwnedGames_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetOwnedGames_Request {
    return new CPlayer_GetOwnedGames_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetOwnedGames_Request | PlainMessage<CPlayer_GetOwnedGames_Request> | undefined, b: CPlayer_GetOwnedGames_Request | PlainMessage<CPlayer_GetOwnedGames_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetOwnedGames_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetOwnedGames_Response
 */
export class CPlayer_GetOwnedGames_Response extends Message<CPlayer_GetOwnedGames_Response> {
  /**
   * @generated from field: optional uint32 game_count = 1;
   */
  gameCount?: number;

  /**
   * @generated from field: repeated CPlayer_GetOwnedGames_Response_Game games = 2;
   */
  games: CPlayer_GetOwnedGames_Response_Game[] = [];

  constructor(data?: PartialMessage<CPlayer_GetOwnedGames_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetOwnedGames_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "game_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "games", kind: "message", T: CPlayer_GetOwnedGames_Response_Game, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetOwnedGames_Response {
    return new CPlayer_GetOwnedGames_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetOwnedGames_Response {
    return new CPlayer_GetOwnedGames_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetOwnedGames_Response {
    return new CPlayer_GetOwnedGames_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetOwnedGames_Response | PlainMessage<CPlayer_GetOwnedGames_Response> | undefined, b: CPlayer_GetOwnedGames_Response | PlainMessage<CPlayer_GetOwnedGames_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetOwnedGames_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetOwnedGames_Response_Game
 */
export class CPlayer_GetOwnedGames_Response_Game extends Message<CPlayer_GetOwnedGames_Response_Game> {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional int32 playtime_2weeks = 3;
   */
  playtime2weeks?: number;

  /**
   * @generated from field: optional int32 playtime_forever = 4;
   */
  playtimeForever?: number;

  /**
   * @generated from field: optional string img_icon_url = 5;
   */
  imgIconUrl?: string;

  /**
   * @generated from field: optional string img_logo_url = 6;
   */
  imgLogoUrl?: string;

  /**
   * @generated from field: optional bool has_community_visible_stats = 7;
   */
  hasCommunityVisibleStats?: boolean;

  /**
   * @generated from field: optional int32 playtime_windows_forever = 8;
   */
  playtimeWindowsForever?: number;

  /**
   * @generated from field: optional int32 playtime_mac_forever = 9;
   */
  playtimeMacForever?: number;

  /**
   * @generated from field: optional int32 playtime_linux_forever = 10;
   */
  playtimeLinuxForever?: number;

  /**
   * @generated from field: optional uint32 rtime_last_played = 11;
   */
  rtimeLastPlayed?: number;

  /**
   * @generated from field: optional string capsule_filename = 12;
   */
  capsuleFilename?: string;

  /**
   * @generated from field: optional string sort_as = 13;
   */
  sortAs?: string;

  /**
   * @generated from field: optional bool has_workshop = 14;
   */
  hasWorkshop?: boolean;

  /**
   * @generated from field: optional bool has_market = 15;
   */
  hasMarket?: boolean;

  /**
   * @generated from field: optional bool has_dlc = 16;
   */
  hasDlc?: boolean;

  /**
   * @generated from field: optional bool has_leaderboards = 17;
   */
  hasLeaderboards?: boolean;

  /**
   * @generated from field: repeated uint32 content_descriptorids = 18;
   */
  contentDescriptorids: number[] = [];

  /**
   * @generated from field: optional int32 playtime_disconnected = 19;
   */
  playtimeDisconnected?: number;

  /**
   * @generated from field: optional int32 playtime_deck_forever = 20;
   */
  playtimeDeckForever?: number;

  constructor(data?: PartialMessage<CPlayer_GetOwnedGames_Response_Game>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetOwnedGames_Response_Game";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "playtime_2weeks", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "playtime_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "img_icon_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "img_logo_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "has_community_visible_stats", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "playtime_windows_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "playtime_mac_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "playtime_linux_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "rtime_last_played", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 12, name: "capsule_filename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "sort_as", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "has_workshop", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 15, name: "has_market", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 16, name: "has_dlc", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 17, name: "has_leaderboards", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 18, name: "content_descriptorids", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 19, name: "playtime_disconnected", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 20, name: "playtime_deck_forever", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetOwnedGames_Response_Game {
    return new CPlayer_GetOwnedGames_Response_Game().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetOwnedGames_Response_Game {
    return new CPlayer_GetOwnedGames_Response_Game().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetOwnedGames_Response_Game {
    return new CPlayer_GetOwnedGames_Response_Game().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetOwnedGames_Response_Game | PlainMessage<CPlayer_GetOwnedGames_Response_Game> | undefined, b: CPlayer_GetOwnedGames_Response_Game | PlainMessage<CPlayer_GetOwnedGames_Response_Game> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetOwnedGames_Response_Game, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPerFriendPreferences_Request
 */
export class CPlayer_GetPerFriendPreferences_Request extends Message<CPlayer_GetPerFriendPreferences_Request> {
  constructor(data?: PartialMessage<CPlayer_GetPerFriendPreferences_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPerFriendPreferences_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPerFriendPreferences_Request {
    return new CPlayer_GetPerFriendPreferences_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPerFriendPreferences_Request {
    return new CPlayer_GetPerFriendPreferences_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPerFriendPreferences_Request {
    return new CPlayer_GetPerFriendPreferences_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPerFriendPreferences_Request | PlainMessage<CPlayer_GetPerFriendPreferences_Request> | undefined, b: CPlayer_GetPerFriendPreferences_Request | PlainMessage<CPlayer_GetPerFriendPreferences_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPerFriendPreferences_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPerFriendPreferences_Response
 */
export class CPlayer_GetPerFriendPreferences_Response extends Message<CPlayer_GetPerFriendPreferences_Response> {
  /**
   * @generated from field: repeated PerFriendPreferences preferences = 1;
   */
  preferences: PerFriendPreferences[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPerFriendPreferences_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPerFriendPreferences_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "preferences", kind: "message", T: PerFriendPreferences, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPerFriendPreferences_Response {
    return new CPlayer_GetPerFriendPreferences_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPerFriendPreferences_Response {
    return new CPlayer_GetPerFriendPreferences_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPerFriendPreferences_Response {
    return new CPlayer_GetPerFriendPreferences_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPerFriendPreferences_Response | PlainMessage<CPlayer_GetPerFriendPreferences_Response> | undefined, b: CPlayer_GetPerFriendPreferences_Response | PlainMessage<CPlayer_GetPerFriendPreferences_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPerFriendPreferences_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Request
 */
export class CPlayer_GetPlayerLinkDetails_Request extends Message<CPlayer_GetPlayerLinkDetails_Request> {
  /**
   * @generated from field: repeated uint64 steamids = 1;
   */
  steamids: bigint[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPlayerLinkDetails_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayerLinkDetails_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayerLinkDetails_Request {
    return new CPlayer_GetPlayerLinkDetails_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Request {
    return new CPlayer_GetPlayerLinkDetails_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Request {
    return new CPlayer_GetPlayerLinkDetails_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayerLinkDetails_Request | PlainMessage<CPlayer_GetPlayerLinkDetails_Request> | undefined, b: CPlayer_GetPlayerLinkDetails_Request | PlainMessage<CPlayer_GetPlayerLinkDetails_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayerLinkDetails_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response
 */
export class CPlayer_GetPlayerLinkDetails_Response extends Message<CPlayer_GetPlayerLinkDetails_Response> {
  /**
   * @generated from field: repeated CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails accounts = 1;
   */
  accounts: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPlayerLinkDetails_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayerLinkDetails_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accounts", kind: "message", T: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayerLinkDetails_Response {
    return new CPlayer_GetPlayerLinkDetails_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response {
    return new CPlayer_GetPlayerLinkDetails_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response {
    return new CPlayer_GetPlayerLinkDetails_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayerLinkDetails_Response | PlainMessage<CPlayer_GetPlayerLinkDetails_Response> | undefined, b: CPlayer_GetPlayerLinkDetails_Response | PlainMessage<CPlayer_GetPlayerLinkDetails_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayerLinkDetails_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails
 */
export class CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails extends Message<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails> {
  /**
   * @generated from field: optional CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData public_data = 1;
   */
  publicData?: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData;

  /**
   * @generated from field: optional CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData private_data = 2;
   */
  privateData?: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData;

  constructor(data?: PartialMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "public_data", kind: "message", T: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData, opt: true },
    { no: 2, name: "private_data", kind: "message", T: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails | PlainMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails> | undefined, b: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails | PlainMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData
 */
export class CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData extends Message<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData> {
  /**
   * @generated from field: optional int32 persona_state = 1;
   */
  personaState?: number;

  /**
   * @generated from field: optional uint32 persona_state_flags = 2;
   */
  personaStateFlags?: number;

  /**
   * @generated from field: optional uint32 time_created = 3;
   */
  timeCreated?: number;

  /**
   * @generated from field: optional fixed64 game_id = 4;
   */
  gameId?: bigint;

  /**
   * @generated from field: optional fixed64 game_server_steam_id = 5;
   */
  gameServerSteamId?: bigint;

  /**
   * @generated from field: optional uint32 game_server_ip_address = 6;
   */
  gameServerIpAddress?: number;

  /**
   * @generated from field: optional uint32 game_server_port = 7;
   */
  gameServerPort?: number;

  /**
   * @generated from field: optional string game_extra_info = 8;
   */
  gameExtraInfo?: string;

  /**
   * @generated from field: optional string account_name = 9;
   */
  accountName?: string;

  /**
   * @generated from field: optional fixed64 lobby_steam_id = 10;
   */
  lobbySteamId?: bigint;

  /**
   * @generated from field: optional string rich_presence_kv = 11;
   */
  richPresenceKv?: string;

  /**
   * @generated from field: optional fixed64 broadcast_session_id = 12;
   */
  broadcastSessionId?: bigint;

  /**
   * @generated from field: optional uint32 watching_broadcast_accountid = 13;
   */
  watchingBroadcastAccountid?: number;

  /**
   * @generated from field: optional uint32 watching_broadcast_appid = 14;
   */
  watchingBroadcastAppid?: number;

  /**
   * @generated from field: optional uint32 watching_broadcast_viewers = 15;
   */
  watchingBroadcastViewers?: number;

  /**
   * @generated from field: optional string watching_broadcast_title = 16;
   */
  watchingBroadcastTitle?: string;

  /**
   * @generated from field: optional uint32 last_logoff_time = 17;
   */
  lastLogoffTime?: number;

  /**
   * @generated from field: optional uint32 last_seen_online = 18;
   */
  lastSeenOnline?: number;

  /**
   * @generated from field: optional int32 game_os_type = 19;
   */
  gameOsType?: number;

  /**
   * @generated from field: optional int32 game_device_type = 20;
   */
  gameDeviceType?: number;

  /**
   * @generated from field: optional string game_device_name = 21;
   */
  gameDeviceName?: string;

  /**
   * @generated from field: optional bool game_is_private = 22;
   */
  gameIsPrivate?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "persona_state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "persona_state_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "time_created", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "game_id", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 5, name: "game_server_steam_id", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 6, name: "game_server_ip_address", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "game_server_port", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "game_extra_info", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "account_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "lobby_steam_id", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 11, name: "rich_presence_kv", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "broadcast_session_id", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 13, name: "watching_broadcast_accountid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 14, name: "watching_broadcast_appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 15, name: "watching_broadcast_viewers", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 16, name: "watching_broadcast_title", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 17, name: "last_logoff_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 18, name: "last_seen_online", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 19, name: "game_os_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 20, name: "game_device_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 21, name: "game_device_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 22, name: "game_is_private", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData | PlainMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData> | undefined, b: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData | PlainMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData
 */
export class CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData extends Message<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional int32 visibility_state = 2;
   */
  visibilityState?: number;

  /**
   * @generated from field: optional int32 privacy_state = 3;
   */
  privacyState?: number;

  /**
   * @generated from field: optional int32 profile_state = 4;
   */
  profileState?: number;

  /**
   * @generated from field: optional uint32 ban_expires_time = 7;
   */
  banExpiresTime?: number;

  /**
   * @generated from field: optional uint32 account_flags = 8;
   */
  accountFlags?: number;

  /**
   * @generated from field: optional bytes sha_digest_avatar = 9;
   */
  shaDigestAvatar?: Uint8Array;

  /**
   * @generated from field: optional string persona_name = 10;
   */
  personaName?: string;

  /**
   * @generated from field: optional string profile_url = 11;
   */
  profileUrl?: string;

  /**
   * @generated from field: optional bool content_country_restricted = 12;
   */
  contentCountryRestricted?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "visibility_state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "privacy_state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "profile_state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "ban_expires_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "account_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "sha_digest_avatar", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 10, name: "persona_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "profile_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "content_country_restricted", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData {
    return new CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData | PlainMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData> | undefined, b: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData | PlainMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayNext_Request
 */
export class CPlayer_GetPlayNext_Request extends Message<CPlayer_GetPlayNext_Request> {
  /**
   * @generated from field: optional uint32 max_age_seconds = 1;
   */
  maxAgeSeconds?: number;

  /**
   * @generated from field: repeated uint32 ignore_appids = 2;
   */
  ignoreAppids: number[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPlayNext_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayNext_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "max_age_seconds", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "ignore_appids", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayNext_Request {
    return new CPlayer_GetPlayNext_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayNext_Request {
    return new CPlayer_GetPlayNext_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayNext_Request {
    return new CPlayer_GetPlayNext_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayNext_Request | PlainMessage<CPlayer_GetPlayNext_Request> | undefined, b: CPlayer_GetPlayNext_Request | PlainMessage<CPlayer_GetPlayNext_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayNext_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPlayNext_Response
 */
export class CPlayer_GetPlayNext_Response extends Message<CPlayer_GetPlayNext_Response> {
  /**
   * @generated from field: optional uint32 last_update_time = 1;
   */
  lastUpdateTime?: number;

  /**
   * @generated from field: repeated uint32 appids = 2;
   */
  appids: number[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPlayNext_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPlayNext_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "last_update_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "appids", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPlayNext_Response {
    return new CPlayer_GetPlayNext_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPlayNext_Response {
    return new CPlayer_GetPlayNext_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPlayNext_Response {
    return new CPlayer_GetPlayNext_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPlayNext_Response | PlainMessage<CPlayer_GetPlayNext_Response> | undefined, b: CPlayer_GetPlayNext_Response | PlainMessage<CPlayer_GetPlayNext_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPlayNext_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPostedStatus_Request
 */
export class CPlayer_GetPostedStatus_Request extends Message<CPlayer_GetPostedStatus_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional uint64 postid = 2;
   */
  postid?: bigint;

  constructor(data?: PartialMessage<CPlayer_GetPostedStatus_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPostedStatus_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "postid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPostedStatus_Request {
    return new CPlayer_GetPostedStatus_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPostedStatus_Request {
    return new CPlayer_GetPostedStatus_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPostedStatus_Request {
    return new CPlayer_GetPostedStatus_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPostedStatus_Request | PlainMessage<CPlayer_GetPostedStatus_Request> | undefined, b: CPlayer_GetPostedStatus_Request | PlainMessage<CPlayer_GetPostedStatus_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPostedStatus_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPostedStatus_Response
 */
export class CPlayer_GetPostedStatus_Response extends Message<CPlayer_GetPostedStatus_Response> {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid?: number;

  /**
   * @generated from field: optional uint64 postid = 2;
   */
  postid?: bigint;

  /**
   * @generated from field: optional string status_text = 3;
   */
  statusText?: string;

  /**
   * @generated from field: optional bool deleted = 4;
   */
  deleted?: boolean;

  /**
   * @generated from field: optional uint32 appid = 5;
   */
  appid?: number;

  constructor(data?: PartialMessage<CPlayer_GetPostedStatus_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPostedStatus_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "postid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "status_text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPostedStatus_Response {
    return new CPlayer_GetPostedStatus_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPostedStatus_Response {
    return new CPlayer_GetPostedStatus_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPostedStatus_Response {
    return new CPlayer_GetPostedStatus_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPostedStatus_Response | PlainMessage<CPlayer_GetPostedStatus_Response> | undefined, b: CPlayer_GetPostedStatus_Response | PlainMessage<CPlayer_GetPostedStatus_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPostedStatus_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPrivacySettings_Request
 */
export class CPlayer_GetPrivacySettings_Request extends Message<CPlayer_GetPrivacySettings_Request> {
  constructor(data?: PartialMessage<CPlayer_GetPrivacySettings_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPrivacySettings_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPrivacySettings_Request {
    return new CPlayer_GetPrivacySettings_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPrivacySettings_Request {
    return new CPlayer_GetPrivacySettings_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPrivacySettings_Request {
    return new CPlayer_GetPrivacySettings_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPrivacySettings_Request | PlainMessage<CPlayer_GetPrivacySettings_Request> | undefined, b: CPlayer_GetPrivacySettings_Request | PlainMessage<CPlayer_GetPrivacySettings_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPrivacySettings_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPrivacySettings_Response
 */
export class CPlayer_GetPrivacySettings_Response extends Message<CPlayer_GetPrivacySettings_Response> {
  /**
   * @generated from field: optional CPrivacySettings privacy_settings = 1;
   */
  privacySettings?: CPrivacySettings;

  constructor(data?: PartialMessage<CPlayer_GetPrivacySettings_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPrivacySettings_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "privacy_settings", kind: "message", T: CPrivacySettings, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPrivacySettings_Response {
    return new CPlayer_GetPrivacySettings_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPrivacySettings_Response {
    return new CPlayer_GetPrivacySettings_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPrivacySettings_Response {
    return new CPlayer_GetPrivacySettings_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPrivacySettings_Response | PlainMessage<CPlayer_GetPrivacySettings_Response> | undefined, b: CPlayer_GetPrivacySettings_Response | PlainMessage<CPlayer_GetPrivacySettings_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPrivacySettings_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileBackground_Request
 */
export class CPlayer_GetProfileBackground_Request extends Message<CPlayer_GetProfileBackground_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetProfileBackground_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileBackground_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileBackground_Request {
    return new CPlayer_GetProfileBackground_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileBackground_Request {
    return new CPlayer_GetProfileBackground_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileBackground_Request {
    return new CPlayer_GetProfileBackground_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileBackground_Request | PlainMessage<CPlayer_GetProfileBackground_Request> | undefined, b: CPlayer_GetProfileBackground_Request | PlainMessage<CPlayer_GetProfileBackground_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileBackground_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileBackground_Response
 */
export class CPlayer_GetProfileBackground_Response extends Message<CPlayer_GetProfileBackground_Response> {
  /**
   * @generated from field: optional ProfileItem profile_background = 1;
   */
  profileBackground?: ProfileItem;

  constructor(data?: PartialMessage<CPlayer_GetProfileBackground_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileBackground_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "profile_background", kind: "message", T: ProfileItem, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileBackground_Response {
    return new CPlayer_GetProfileBackground_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileBackground_Response {
    return new CPlayer_GetProfileBackground_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileBackground_Response {
    return new CPlayer_GetProfileBackground_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileBackground_Response | PlainMessage<CPlayer_GetProfileBackground_Response> | undefined, b: CPlayer_GetProfileBackground_Response | PlainMessage<CPlayer_GetProfileBackground_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileBackground_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileCustomization_Request
 */
export class CPlayer_GetProfileCustomization_Request extends Message<CPlayer_GetProfileCustomization_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional bool include_inactive_customizations = 2;
   */
  includeInactiveCustomizations?: boolean;

  /**
   * @generated from field: optional bool include_purchased_customizations = 3;
   */
  includePurchasedCustomizations?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetProfileCustomization_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileCustomization_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "include_inactive_customizations", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "include_purchased_customizations", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileCustomization_Request {
    return new CPlayer_GetProfileCustomization_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileCustomization_Request {
    return new CPlayer_GetProfileCustomization_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileCustomization_Request {
    return new CPlayer_GetProfileCustomization_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileCustomization_Request | PlainMessage<CPlayer_GetProfileCustomization_Request> | undefined, b: CPlayer_GetProfileCustomization_Request | PlainMessage<CPlayer_GetProfileCustomization_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileCustomization_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileCustomization_Response
 */
export class CPlayer_GetProfileCustomization_Response extends Message<CPlayer_GetProfileCustomization_Response> {
  /**
   * @generated from field: repeated ProfileCustomization customizations = 1;
   */
  customizations: ProfileCustomization[] = [];

  /**
   * @generated from field: optional uint32 slots_available = 2;
   */
  slotsAvailable?: number;

  /**
   * @generated from field: optional ProfileTheme profile_theme = 3;
   */
  profileTheme?: ProfileTheme;

  /**
   * @generated from field: repeated CPlayer_GetProfileCustomization_Response_PurchasedCustomization purchased_customizations = 4;
   */
  purchasedCustomizations: CPlayer_GetProfileCustomization_Response_PurchasedCustomization[] = [];

  /**
   * @generated from field: optional ProfilePreferences profile_preferences = 5;
   */
  profilePreferences?: ProfilePreferences;

  constructor(data?: PartialMessage<CPlayer_GetProfileCustomization_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileCustomization_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "customizations", kind: "message", T: ProfileCustomization, repeated: true },
    { no: 2, name: "slots_available", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "profile_theme", kind: "message", T: ProfileTheme, opt: true },
    { no: 4, name: "purchased_customizations", kind: "message", T: CPlayer_GetProfileCustomization_Response_PurchasedCustomization, repeated: true },
    { no: 5, name: "profile_preferences", kind: "message", T: ProfilePreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileCustomization_Response {
    return new CPlayer_GetProfileCustomization_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileCustomization_Response {
    return new CPlayer_GetProfileCustomization_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileCustomization_Response {
    return new CPlayer_GetProfileCustomization_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileCustomization_Response | PlainMessage<CPlayer_GetProfileCustomization_Response> | undefined, b: CPlayer_GetProfileCustomization_Response | PlainMessage<CPlayer_GetProfileCustomization_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileCustomization_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileCustomization_Response_PurchasedCustomization
 */
export class CPlayer_GetProfileCustomization_Response_PurchasedCustomization extends Message<CPlayer_GetProfileCustomization_Response_PurchasedCustomization> {
  /**
   * @generated from field: optional uint64 purchaseid = 1;
   */
  purchaseid?: bigint;

  /**
   * @generated from field: optional int32 customization_type = 2;
   */
  customizationType?: number;

  /**
   * @generated from field: optional uint32 level = 3;
   */
  level?: number;

  constructor(data?: PartialMessage<CPlayer_GetProfileCustomization_Response_PurchasedCustomization>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileCustomization_Response_PurchasedCustomization";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "purchaseid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "customization_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "level", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileCustomization_Response_PurchasedCustomization {
    return new CPlayer_GetProfileCustomization_Response_PurchasedCustomization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileCustomization_Response_PurchasedCustomization {
    return new CPlayer_GetProfileCustomization_Response_PurchasedCustomization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileCustomization_Response_PurchasedCustomization {
    return new CPlayer_GetProfileCustomization_Response_PurchasedCustomization().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileCustomization_Response_PurchasedCustomization | PlainMessage<CPlayer_GetProfileCustomization_Response_PurchasedCustomization> | undefined, b: CPlayer_GetProfileCustomization_Response_PurchasedCustomization | PlainMessage<CPlayer_GetProfileCustomization_Response_PurchasedCustomization> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileCustomization_Response_PurchasedCustomization, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileItemsEquipped_Request
 */
export class CPlayer_GetProfileItemsEquipped_Request extends Message<CPlayer_GetProfileItemsEquipped_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetProfileItemsEquipped_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileItemsEquipped_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileItemsEquipped_Request {
    return new CPlayer_GetProfileItemsEquipped_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsEquipped_Request {
    return new CPlayer_GetProfileItemsEquipped_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsEquipped_Request {
    return new CPlayer_GetProfileItemsEquipped_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileItemsEquipped_Request | PlainMessage<CPlayer_GetProfileItemsEquipped_Request> | undefined, b: CPlayer_GetProfileItemsEquipped_Request | PlainMessage<CPlayer_GetProfileItemsEquipped_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileItemsEquipped_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileItemsEquipped_Response
 */
export class CPlayer_GetProfileItemsEquipped_Response extends Message<CPlayer_GetProfileItemsEquipped_Response> {
  /**
   * @generated from field: optional ProfileItem profile_background = 1;
   */
  profileBackground?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem mini_profile_background = 2;
   */
  miniProfileBackground?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem avatar_frame = 3;
   */
  avatarFrame?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem animated_avatar = 4;
   */
  animatedAvatar?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem profile_modifier = 5;
   */
  profileModifier?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem steam_deck_keyboard_skin = 6;
   */
  steamDeckKeyboardSkin?: ProfileItem;

  constructor(data?: PartialMessage<CPlayer_GetProfileItemsEquipped_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileItemsEquipped_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "profile_background", kind: "message", T: ProfileItem, opt: true },
    { no: 2, name: "mini_profile_background", kind: "message", T: ProfileItem, opt: true },
    { no: 3, name: "avatar_frame", kind: "message", T: ProfileItem, opt: true },
    { no: 4, name: "animated_avatar", kind: "message", T: ProfileItem, opt: true },
    { no: 5, name: "profile_modifier", kind: "message", T: ProfileItem, opt: true },
    { no: 6, name: "steam_deck_keyboard_skin", kind: "message", T: ProfileItem, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileItemsEquipped_Response {
    return new CPlayer_GetProfileItemsEquipped_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsEquipped_Response {
    return new CPlayer_GetProfileItemsEquipped_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsEquipped_Response {
    return new CPlayer_GetProfileItemsEquipped_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileItemsEquipped_Response | PlainMessage<CPlayer_GetProfileItemsEquipped_Response> | undefined, b: CPlayer_GetProfileItemsEquipped_Response | PlainMessage<CPlayer_GetProfileItemsEquipped_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileItemsEquipped_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileItemsOwned_Request
 */
export class CPlayer_GetProfileItemsOwned_Request extends Message<CPlayer_GetProfileItemsOwned_Request> {
  /**
   * @generated from field: optional string language = 1;
   */
  language?: string;

  /**
   * @generated from field: repeated int32 filters = 2;
   */
  filters: number[] = [];

  constructor(data?: PartialMessage<CPlayer_GetProfileItemsOwned_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileItemsOwned_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "filters", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileItemsOwned_Request {
    return new CPlayer_GetProfileItemsOwned_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsOwned_Request {
    return new CPlayer_GetProfileItemsOwned_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsOwned_Request {
    return new CPlayer_GetProfileItemsOwned_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileItemsOwned_Request | PlainMessage<CPlayer_GetProfileItemsOwned_Request> | undefined, b: CPlayer_GetProfileItemsOwned_Request | PlainMessage<CPlayer_GetProfileItemsOwned_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileItemsOwned_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileItemsOwned_Response
 */
export class CPlayer_GetProfileItemsOwned_Response extends Message<CPlayer_GetProfileItemsOwned_Response> {
  /**
   * @generated from field: repeated ProfileItem profile_backgrounds = 1;
   */
  profileBackgrounds: ProfileItem[] = [];

  /**
   * @generated from field: repeated ProfileItem mini_profile_backgrounds = 2;
   */
  miniProfileBackgrounds: ProfileItem[] = [];

  /**
   * @generated from field: repeated ProfileItem avatar_frames = 3;
   */
  avatarFrames: ProfileItem[] = [];

  /**
   * @generated from field: repeated ProfileItem animated_avatars = 4;
   */
  animatedAvatars: ProfileItem[] = [];

  /**
   * @generated from field: repeated ProfileItem profile_modifiers = 5;
   */
  profileModifiers: ProfileItem[] = [];

  /**
   * @generated from field: repeated ProfileItem steam_deck_keyboard_skins = 6;
   */
  steamDeckKeyboardSkins: ProfileItem[] = [];

  /**
   * @generated from field: repeated ProfileItem steam_deck_startup_movies = 7;
   */
  steamDeckStartupMovies: ProfileItem[] = [];

  constructor(data?: PartialMessage<CPlayer_GetProfileItemsOwned_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileItemsOwned_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "profile_backgrounds", kind: "message", T: ProfileItem, repeated: true },
    { no: 2, name: "mini_profile_backgrounds", kind: "message", T: ProfileItem, repeated: true },
    { no: 3, name: "avatar_frames", kind: "message", T: ProfileItem, repeated: true },
    { no: 4, name: "animated_avatars", kind: "message", T: ProfileItem, repeated: true },
    { no: 5, name: "profile_modifiers", kind: "message", T: ProfileItem, repeated: true },
    { no: 6, name: "steam_deck_keyboard_skins", kind: "message", T: ProfileItem, repeated: true },
    { no: 7, name: "steam_deck_startup_movies", kind: "message", T: ProfileItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileItemsOwned_Response {
    return new CPlayer_GetProfileItemsOwned_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsOwned_Response {
    return new CPlayer_GetProfileItemsOwned_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileItemsOwned_Response {
    return new CPlayer_GetProfileItemsOwned_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileItemsOwned_Response | PlainMessage<CPlayer_GetProfileItemsOwned_Response> | undefined, b: CPlayer_GetProfileItemsOwned_Response | PlainMessage<CPlayer_GetProfileItemsOwned_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileItemsOwned_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileThemesAvailable_Request
 */
export class CPlayer_GetProfileThemesAvailable_Request extends Message<CPlayer_GetProfileThemesAvailable_Request> {
  constructor(data?: PartialMessage<CPlayer_GetProfileThemesAvailable_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileThemesAvailable_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileThemesAvailable_Request {
    return new CPlayer_GetProfileThemesAvailable_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileThemesAvailable_Request {
    return new CPlayer_GetProfileThemesAvailable_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileThemesAvailable_Request {
    return new CPlayer_GetProfileThemesAvailable_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileThemesAvailable_Request | PlainMessage<CPlayer_GetProfileThemesAvailable_Request> | undefined, b: CPlayer_GetProfileThemesAvailable_Request | PlainMessage<CPlayer_GetProfileThemesAvailable_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileThemesAvailable_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetProfileThemesAvailable_Response
 */
export class CPlayer_GetProfileThemesAvailable_Response extends Message<CPlayer_GetProfileThemesAvailable_Response> {
  /**
   * @generated from field: repeated ProfileTheme profile_themes = 1;
   */
  profileThemes: ProfileTheme[] = [];

  constructor(data?: PartialMessage<CPlayer_GetProfileThemesAvailable_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetProfileThemesAvailable_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "profile_themes", kind: "message", T: ProfileTheme, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetProfileThemesAvailable_Response {
    return new CPlayer_GetProfileThemesAvailable_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetProfileThemesAvailable_Response {
    return new CPlayer_GetProfileThemesAvailable_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetProfileThemesAvailable_Response {
    return new CPlayer_GetProfileThemesAvailable_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetProfileThemesAvailable_Response | PlainMessage<CPlayer_GetProfileThemesAvailable_Response> | undefined, b: CPlayer_GetProfileThemesAvailable_Response | PlainMessage<CPlayer_GetProfileThemesAvailable_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetProfileThemesAvailable_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request
 */
export class CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request extends Message<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  constructor(data?: PartialMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request> | undefined, b: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response
 */
export class CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response extends Message<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response> {
  /**
   * @generated from field: repeated CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization purchased_customizations = 1;
   */
  purchasedCustomizations: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization[] = [];

  /**
   * @generated from field: repeated CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization upgraded_customizations = 2;
   */
  upgradedCustomizations: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "purchased_customizations", kind: "message", T: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization, repeated: true },
    { no: 2, name: "upgraded_customizations", kind: "message", T: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response> | undefined, b: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization
 */
export class CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization extends Message<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization> {
  /**
   * @generated from field: optional int32 customization_type = 1;
   */
  customizationType?: number;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count?: number;

  constructor(data?: PartialMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "customization_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization> | undefined, b: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization
 */
export class CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization extends Message<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization> {
  /**
   * @generated from field: optional int32 customization_type = 1;
   */
  customizationType?: number;

  /**
   * @generated from field: optional uint32 level = 2;
   */
  level?: number;

  constructor(data?: PartialMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "customization_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "level", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization {
    return new CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization> | undefined, b: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization | PlainMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedProfileCustomizations_Request
 */
export class CPlayer_GetPurchasedProfileCustomizations_Request extends Message<CPlayer_GetPurchasedProfileCustomizations_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  constructor(data?: PartialMessage<CPlayer_GetPurchasedProfileCustomizations_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedProfileCustomizations_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Request {
    return new CPlayer_GetPurchasedProfileCustomizations_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Request {
    return new CPlayer_GetPurchasedProfileCustomizations_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Request {
    return new CPlayer_GetPurchasedProfileCustomizations_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedProfileCustomizations_Request | PlainMessage<CPlayer_GetPurchasedProfileCustomizations_Request> | undefined, b: CPlayer_GetPurchasedProfileCustomizations_Request | PlainMessage<CPlayer_GetPurchasedProfileCustomizations_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedProfileCustomizations_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedProfileCustomizations_Response
 */
export class CPlayer_GetPurchasedProfileCustomizations_Response extends Message<CPlayer_GetPurchasedProfileCustomizations_Response> {
  /**
   * @generated from field: repeated CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization purchased_customizations = 1;
   */
  purchasedCustomizations: CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization[] = [];

  constructor(data?: PartialMessage<CPlayer_GetPurchasedProfileCustomizations_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedProfileCustomizations_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "purchased_customizations", kind: "message", T: CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Response {
    return new CPlayer_GetPurchasedProfileCustomizations_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Response {
    return new CPlayer_GetPurchasedProfileCustomizations_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Response {
    return new CPlayer_GetPurchasedProfileCustomizations_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedProfileCustomizations_Response | PlainMessage<CPlayer_GetPurchasedProfileCustomizations_Response> | undefined, b: CPlayer_GetPurchasedProfileCustomizations_Response | PlainMessage<CPlayer_GetPurchasedProfileCustomizations_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedProfileCustomizations_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization
 */
export class CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization extends Message<CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization> {
  /**
   * @generated from field: optional uint64 purchaseid = 1;
   */
  purchaseid?: bigint;

  /**
   * @generated from field: optional int32 customization_type = 2;
   */
  customizationType?: number;

  constructor(data?: PartialMessage<CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "purchaseid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "customization_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization {
    return new CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization {
    return new CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization {
    return new CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization | PlainMessage<CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization> | undefined, b: CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization | PlainMessage<CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization, a, b);
  }
}

/**
 * @generated from message CPlayer_GetRecentPlaytimeSessionsForChild_Request
 */
export class CPlayer_GetRecentPlaytimeSessionsForChild_Request extends Message<CPlayer_GetRecentPlaytimeSessionsForChild_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  constructor(data?: PartialMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetRecentPlaytimeSessionsForChild_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Request {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Request {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Request {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetRecentPlaytimeSessionsForChild_Request | PlainMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Request> | undefined, b: CPlayer_GetRecentPlaytimeSessionsForChild_Request | PlainMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetRecentPlaytimeSessionsForChild_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetRecentPlaytimeSessionsForChild_Response
 */
export class CPlayer_GetRecentPlaytimeSessionsForChild_Response extends Message<CPlayer_GetRecentPlaytimeSessionsForChild_Response> {
  /**
   * @generated from field: repeated CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession sessions = 1;
   */
  sessions: CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession[] = [];

  constructor(data?: PartialMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetRecentPlaytimeSessionsForChild_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "sessions", kind: "message", T: CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Response {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Response {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Response {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetRecentPlaytimeSessionsForChild_Response | PlainMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response> | undefined, b: CPlayer_GetRecentPlaytimeSessionsForChild_Response | PlainMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetRecentPlaytimeSessionsForChild_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession
 */
export class CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession extends Message<CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession> {
  /**
   * @generated from field: optional uint32 time_start = 1;
   */
  timeStart?: number;

  /**
   * @generated from field: optional uint32 time_end = 2;
   */
  timeEnd?: number;

  /**
   * @generated from field: optional uint32 appid = 3;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 device_type = 4;
   */
  deviceType?: number;

  /**
   * @generated from field: optional bool disconnected = 5;
   */
  disconnected?: boolean;

  constructor(data?: PartialMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "time_start", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "time_end", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "device_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "disconnected", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession {
    return new CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession | PlainMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession> | undefined, b: CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession | PlainMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession, a, b);
  }
}

/**
 * @generated from message CPlayer_GetSteamDeckKeyboardSkin_Request
 */
export class CPlayer_GetSteamDeckKeyboardSkin_Request extends Message<CPlayer_GetSteamDeckKeyboardSkin_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  constructor(data?: PartialMessage<CPlayer_GetSteamDeckKeyboardSkin_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetSteamDeckKeyboardSkin_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetSteamDeckKeyboardSkin_Request {
    return new CPlayer_GetSteamDeckKeyboardSkin_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetSteamDeckKeyboardSkin_Request {
    return new CPlayer_GetSteamDeckKeyboardSkin_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetSteamDeckKeyboardSkin_Request {
    return new CPlayer_GetSteamDeckKeyboardSkin_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetSteamDeckKeyboardSkin_Request | PlainMessage<CPlayer_GetSteamDeckKeyboardSkin_Request> | undefined, b: CPlayer_GetSteamDeckKeyboardSkin_Request | PlainMessage<CPlayer_GetSteamDeckKeyboardSkin_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetSteamDeckKeyboardSkin_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetSteamDeckKeyboardSkin_Response
 */
export class CPlayer_GetSteamDeckKeyboardSkin_Response extends Message<CPlayer_GetSteamDeckKeyboardSkin_Response> {
  /**
   * @generated from field: optional ProfileItem steam_deck_keyboard_skin = 1;
   */
  steamDeckKeyboardSkin?: ProfileItem;

  constructor(data?: PartialMessage<CPlayer_GetSteamDeckKeyboardSkin_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetSteamDeckKeyboardSkin_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steam_deck_keyboard_skin", kind: "message", T: ProfileItem, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetSteamDeckKeyboardSkin_Response {
    return new CPlayer_GetSteamDeckKeyboardSkin_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetSteamDeckKeyboardSkin_Response {
    return new CPlayer_GetSteamDeckKeyboardSkin_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetSteamDeckKeyboardSkin_Response {
    return new CPlayer_GetSteamDeckKeyboardSkin_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetSteamDeckKeyboardSkin_Response | PlainMessage<CPlayer_GetSteamDeckKeyboardSkin_Response> | undefined, b: CPlayer_GetSteamDeckKeyboardSkin_Response | PlainMessage<CPlayer_GetSteamDeckKeyboardSkin_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetSteamDeckKeyboardSkin_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTextFilterWords_Request
 */
export class CPlayer_GetTextFilterWords_Request extends Message<CPlayer_GetTextFilterWords_Request> {
  constructor(data?: PartialMessage<CPlayer_GetTextFilterWords_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTextFilterWords_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTextFilterWords_Request {
    return new CPlayer_GetTextFilterWords_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTextFilterWords_Request {
    return new CPlayer_GetTextFilterWords_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTextFilterWords_Request {
    return new CPlayer_GetTextFilterWords_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTextFilterWords_Request | PlainMessage<CPlayer_GetTextFilterWords_Request> | undefined, b: CPlayer_GetTextFilterWords_Request | PlainMessage<CPlayer_GetTextFilterWords_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTextFilterWords_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTextFilterWords_Response
 */
export class CPlayer_GetTextFilterWords_Response extends Message<CPlayer_GetTextFilterWords_Response> {
  /**
   * @generated from field: optional CPlayer_TextFilterWords words = 1;
   */
  words?: CPlayer_TextFilterWords;

  constructor(data?: PartialMessage<CPlayer_GetTextFilterWords_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTextFilterWords_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "words", kind: "message", T: CPlayer_TextFilterWords, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTextFilterWords_Response {
    return new CPlayer_GetTextFilterWords_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTextFilterWords_Response {
    return new CPlayer_GetTextFilterWords_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTextFilterWords_Response {
    return new CPlayer_GetTextFilterWords_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTextFilterWords_Response | PlainMessage<CPlayer_GetTextFilterWords_Response> | undefined, b: CPlayer_GetTextFilterWords_Response | PlainMessage<CPlayer_GetTextFilterWords_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTextFilterWords_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTimeSSAAccepted_Request
 */
export class CPlayer_GetTimeSSAAccepted_Request extends Message<CPlayer_GetTimeSSAAccepted_Request> {
  constructor(data?: PartialMessage<CPlayer_GetTimeSSAAccepted_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTimeSSAAccepted_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTimeSSAAccepted_Request {
    return new CPlayer_GetTimeSSAAccepted_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTimeSSAAccepted_Request {
    return new CPlayer_GetTimeSSAAccepted_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTimeSSAAccepted_Request {
    return new CPlayer_GetTimeSSAAccepted_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTimeSSAAccepted_Request | PlainMessage<CPlayer_GetTimeSSAAccepted_Request> | undefined, b: CPlayer_GetTimeSSAAccepted_Request | PlainMessage<CPlayer_GetTimeSSAAccepted_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTimeSSAAccepted_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTimeSSAAccepted_Response
 */
export class CPlayer_GetTimeSSAAccepted_Response extends Message<CPlayer_GetTimeSSAAccepted_Response> {
  /**
   * @generated from field: optional uint32 time_ssa_accepted = 1;
   */
  timeSsaAccepted?: number;

  /**
   * @generated from field: optional uint32 time_ssa_updated = 2;
   */
  timeSsaUpdated?: number;

  /**
   * @generated from field: optional uint32 time_chinassa_accepted = 3;
   */
  timeChinassaAccepted?: number;

  constructor(data?: PartialMessage<CPlayer_GetTimeSSAAccepted_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTimeSSAAccepted_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "time_ssa_accepted", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "time_ssa_updated", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "time_chinassa_accepted", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTimeSSAAccepted_Response {
    return new CPlayer_GetTimeSSAAccepted_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTimeSSAAccepted_Response {
    return new CPlayer_GetTimeSSAAccepted_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTimeSSAAccepted_Response {
    return new CPlayer_GetTimeSSAAccepted_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTimeSSAAccepted_Response | PlainMessage<CPlayer_GetTimeSSAAccepted_Response> | undefined, b: CPlayer_GetTimeSSAAccepted_Response | PlainMessage<CPlayer_GetTimeSSAAccepted_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTimeSSAAccepted_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Request
 */
export class CPlayer_GetTopAchievementsForGames_Request extends Message<CPlayer_GetTopAchievementsForGames_Request> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;

  /**
   * @generated from field: optional uint32 max_achievements = 3;
   */
  maxAchievements?: number;

  /**
   * @generated from field: repeated uint32 appids = 4;
   */
  appids: number[] = [];

  constructor(data?: PartialMessage<CPlayer_GetTopAchievementsForGames_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTopAchievementsForGames_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "max_achievements", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "appids", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTopAchievementsForGames_Request {
    return new CPlayer_GetTopAchievementsForGames_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Request {
    return new CPlayer_GetTopAchievementsForGames_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Request {
    return new CPlayer_GetTopAchievementsForGames_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTopAchievementsForGames_Request | PlainMessage<CPlayer_GetTopAchievementsForGames_Request> | undefined, b: CPlayer_GetTopAchievementsForGames_Request | PlainMessage<CPlayer_GetTopAchievementsForGames_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTopAchievementsForGames_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Response
 */
export class CPlayer_GetTopAchievementsForGames_Response extends Message<CPlayer_GetTopAchievementsForGames_Response> {
  /**
   * @generated from field: repeated CPlayer_GetTopAchievementsForGames_Response_Game games = 1;
   */
  games: CPlayer_GetTopAchievementsForGames_Response_Game[] = [];

  constructor(data?: PartialMessage<CPlayer_GetTopAchievementsForGames_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTopAchievementsForGames_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "games", kind: "message", T: CPlayer_GetTopAchievementsForGames_Response_Game, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTopAchievementsForGames_Response {
    return new CPlayer_GetTopAchievementsForGames_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Response {
    return new CPlayer_GetTopAchievementsForGames_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Response {
    return new CPlayer_GetTopAchievementsForGames_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTopAchievementsForGames_Response | PlainMessage<CPlayer_GetTopAchievementsForGames_Response> | undefined, b: CPlayer_GetTopAchievementsForGames_Response | PlainMessage<CPlayer_GetTopAchievementsForGames_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTopAchievementsForGames_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Response_Achievement
 */
export class CPlayer_GetTopAchievementsForGames_Response_Achievement extends Message<CPlayer_GetTopAchievementsForGames_Response_Achievement> {
  /**
   * @generated from field: optional uint32 statid = 1;
   */
  statid?: number;

  /**
   * @generated from field: optional uint32 bit = 2;
   */
  bit?: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name?: string;

  /**
   * @generated from field: optional string desc = 4;
   */
  desc?: string;

  /**
   * @generated from field: optional string icon = 5;
   */
  icon?: string;

  /**
   * @generated from field: optional string icon_gray = 6;
   */
  iconGray?: string;

  /**
   * @generated from field: optional bool hidden = 7;
   */
  hidden?: boolean;

  /**
   * @generated from field: optional string player_percent_unlocked = 8;
   */
  playerPercentUnlocked?: string;

  constructor(data?: PartialMessage<CPlayer_GetTopAchievementsForGames_Response_Achievement>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTopAchievementsForGames_Response_Achievement";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "statid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "bit", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "desc", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "icon", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "icon_gray", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "hidden", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "player_percent_unlocked", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTopAchievementsForGames_Response_Achievement {
    return new CPlayer_GetTopAchievementsForGames_Response_Achievement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Response_Achievement {
    return new CPlayer_GetTopAchievementsForGames_Response_Achievement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Response_Achievement {
    return new CPlayer_GetTopAchievementsForGames_Response_Achievement().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTopAchievementsForGames_Response_Achievement | PlainMessage<CPlayer_GetTopAchievementsForGames_Response_Achievement> | undefined, b: CPlayer_GetTopAchievementsForGames_Response_Achievement | PlainMessage<CPlayer_GetTopAchievementsForGames_Response_Achievement> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTopAchievementsForGames_Response_Achievement, a, b);
  }
}

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Response_Game
 */
export class CPlayer_GetTopAchievementsForGames_Response_Game extends Message<CPlayer_GetTopAchievementsForGames_Response_Game> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 total_achievements = 2;
   */
  totalAchievements?: number;

  /**
   * @generated from field: repeated CPlayer_GetTopAchievementsForGames_Response_Achievement achievements = 3;
   */
  achievements: CPlayer_GetTopAchievementsForGames_Response_Achievement[] = [];

  constructor(data?: PartialMessage<CPlayer_GetTopAchievementsForGames_Response_Game>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_GetTopAchievementsForGames_Response_Game";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "total_achievements", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "achievements", kind: "message", T: CPlayer_GetTopAchievementsForGames_Response_Achievement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_GetTopAchievementsForGames_Response_Game {
    return new CPlayer_GetTopAchievementsForGames_Response_Game().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Response_Game {
    return new CPlayer_GetTopAchievementsForGames_Response_Game().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_GetTopAchievementsForGames_Response_Game {
    return new CPlayer_GetTopAchievementsForGames_Response_Game().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_GetTopAchievementsForGames_Response_Game | PlainMessage<CPlayer_GetTopAchievementsForGames_Response_Game> | undefined, b: CPlayer_GetTopAchievementsForGames_Response_Game | PlainMessage<CPlayer_GetTopAchievementsForGames_Response_Game> | undefined): boolean {
    return proto2.util.equals(CPlayer_GetTopAchievementsForGames_Response_Game, a, b);
  }
}

/**
 * @generated from message CPlayer_IgnoreFriend_Request
 */
export class CPlayer_IgnoreFriend_Request extends Message<CPlayer_IgnoreFriend_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional bool unignore = 2;
   */
  unignore?: boolean;

  constructor(data?: PartialMessage<CPlayer_IgnoreFriend_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_IgnoreFriend_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "unignore", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_IgnoreFriend_Request {
    return new CPlayer_IgnoreFriend_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_IgnoreFriend_Request {
    return new CPlayer_IgnoreFriend_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_IgnoreFriend_Request {
    return new CPlayer_IgnoreFriend_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_IgnoreFriend_Request | PlainMessage<CPlayer_IgnoreFriend_Request> | undefined, b: CPlayer_IgnoreFriend_Request | PlainMessage<CPlayer_IgnoreFriend_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_IgnoreFriend_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_IgnoreFriend_Response
 */
export class CPlayer_IgnoreFriend_Response extends Message<CPlayer_IgnoreFriend_Response> {
  /**
   * @generated from field: optional uint32 friend_relationship = 1;
   */
  friendRelationship?: number;

  constructor(data?: PartialMessage<CPlayer_IgnoreFriend_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_IgnoreFriend_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "friend_relationship", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_IgnoreFriend_Response {
    return new CPlayer_IgnoreFriend_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_IgnoreFriend_Response {
    return new CPlayer_IgnoreFriend_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_IgnoreFriend_Response {
    return new CPlayer_IgnoreFriend_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_IgnoreFriend_Response | PlainMessage<CPlayer_IgnoreFriend_Response> | undefined, b: CPlayer_IgnoreFriend_Response | PlainMessage<CPlayer_IgnoreFriend_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_IgnoreFriend_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_IncomingInviteMutualFriendList
 */
export class CPlayer_IncomingInviteMutualFriendList extends Message<CPlayer_IncomingInviteMutualFriendList> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: repeated uint32 mutual_friend_account_ids = 2;
   */
  mutualFriendAccountIds: number[] = [];

  constructor(data?: PartialMessage<CPlayer_IncomingInviteMutualFriendList>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_IncomingInviteMutualFriendList";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "mutual_friend_account_ids", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_IncomingInviteMutualFriendList {
    return new CPlayer_IncomingInviteMutualFriendList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_IncomingInviteMutualFriendList {
    return new CPlayer_IncomingInviteMutualFriendList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_IncomingInviteMutualFriendList {
    return new CPlayer_IncomingInviteMutualFriendList().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_IncomingInviteMutualFriendList | PlainMessage<CPlayer_IncomingInviteMutualFriendList> | undefined, b: CPlayer_IncomingInviteMutualFriendList | PlainMessage<CPlayer_IncomingInviteMutualFriendList> | undefined): boolean {
    return proto2.util.equals(CPlayer_IncomingInviteMutualFriendList, a, b);
  }
}

/**
 * @generated from message CPlayer_LastPlayedTimes_Notification
 */
export class CPlayer_LastPlayedTimes_Notification extends Message<CPlayer_LastPlayedTimes_Notification> {
  /**
   * @generated from field: repeated CPlayer_GetLastPlayedTimes_Response_Game games = 1;
   */
  games: CPlayer_GetLastPlayedTimes_Response_Game[] = [];

  constructor(data?: PartialMessage<CPlayer_LastPlayedTimes_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_LastPlayedTimes_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "games", kind: "message", T: CPlayer_GetLastPlayedTimes_Response_Game, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_LastPlayedTimes_Notification {
    return new CPlayer_LastPlayedTimes_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_LastPlayedTimes_Notification {
    return new CPlayer_LastPlayedTimes_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_LastPlayedTimes_Notification {
    return new CPlayer_LastPlayedTimes_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_LastPlayedTimes_Notification | PlainMessage<CPlayer_LastPlayedTimes_Notification> | undefined, b: CPlayer_LastPlayedTimes_Notification | PlainMessage<CPlayer_LastPlayedTimes_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_LastPlayedTimes_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_NewSteamAnnouncementState_Notification
 */
export class CPlayer_NewSteamAnnouncementState_Notification extends Message<CPlayer_NewSteamAnnouncementState_Notification> {
  /**
   * @generated from field: optional int32 state = 1;
   */
  state?: number;

  /**
   * @generated from field: optional string announcement_headline = 2;
   */
  announcementHeadline?: string;

  /**
   * @generated from field: optional string announcement_url = 3;
   */
  announcementUrl?: string;

  /**
   * @generated from field: optional uint32 time_posted = 4;
   */
  timePosted?: number;

  /**
   * @generated from field: optional uint64 announcement_gid = 5;
   */
  announcementGid?: bigint;

  constructor(data?: PartialMessage<CPlayer_NewSteamAnnouncementState_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_NewSteamAnnouncementState_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "announcement_headline", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "announcement_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "time_posted", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "announcement_gid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_NewSteamAnnouncementState_Notification {
    return new CPlayer_NewSteamAnnouncementState_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_NewSteamAnnouncementState_Notification {
    return new CPlayer_NewSteamAnnouncementState_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_NewSteamAnnouncementState_Notification {
    return new CPlayer_NewSteamAnnouncementState_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_NewSteamAnnouncementState_Notification | PlainMessage<CPlayer_NewSteamAnnouncementState_Notification> | undefined, b: CPlayer_NewSteamAnnouncementState_Notification | PlainMessage<CPlayer_NewSteamAnnouncementState_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_NewSteamAnnouncementState_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_PerFriendPreferencesChanged_Notification
 */
export class CPlayer_PerFriendPreferencesChanged_Notification extends Message<CPlayer_PerFriendPreferencesChanged_Notification> {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid?: number;

  /**
   * @generated from field: optional PerFriendPreferences preferences = 2;
   */
  preferences?: PerFriendPreferences;

  constructor(data?: PartialMessage<CPlayer_PerFriendPreferencesChanged_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_PerFriendPreferencesChanged_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "preferences", kind: "message", T: PerFriendPreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_PerFriendPreferencesChanged_Notification {
    return new CPlayer_PerFriendPreferencesChanged_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_PerFriendPreferencesChanged_Notification {
    return new CPlayer_PerFriendPreferencesChanged_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_PerFriendPreferencesChanged_Notification {
    return new CPlayer_PerFriendPreferencesChanged_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_PerFriendPreferencesChanged_Notification | PlainMessage<CPlayer_PerFriendPreferencesChanged_Notification> | undefined, b: CPlayer_PerFriendPreferencesChanged_Notification | PlainMessage<CPlayer_PerFriendPreferencesChanged_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_PerFriendPreferencesChanged_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_PostStatusToFriends_Request
 */
export class CPlayer_PostStatusToFriends_Request extends Message<CPlayer_PostStatusToFriends_Request> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional string status_text = 2;
   */
  statusText?: string;

  constructor(data?: PartialMessage<CPlayer_PostStatusToFriends_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_PostStatusToFriends_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "status_text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_PostStatusToFriends_Request {
    return new CPlayer_PostStatusToFriends_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_PostStatusToFriends_Request {
    return new CPlayer_PostStatusToFriends_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_PostStatusToFriends_Request {
    return new CPlayer_PostStatusToFriends_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_PostStatusToFriends_Request | PlainMessage<CPlayer_PostStatusToFriends_Request> | undefined, b: CPlayer_PostStatusToFriends_Request | PlainMessage<CPlayer_PostStatusToFriends_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_PostStatusToFriends_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_PostStatusToFriends_Response
 */
export class CPlayer_PostStatusToFriends_Response extends Message<CPlayer_PostStatusToFriends_Response> {
  constructor(data?: PartialMessage<CPlayer_PostStatusToFriends_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_PostStatusToFriends_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_PostStatusToFriends_Response {
    return new CPlayer_PostStatusToFriends_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_PostStatusToFriends_Response {
    return new CPlayer_PostStatusToFriends_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_PostStatusToFriends_Response {
    return new CPlayer_PostStatusToFriends_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_PostStatusToFriends_Response | PlainMessage<CPlayer_PostStatusToFriends_Response> | undefined, b: CPlayer_PostStatusToFriends_Response | PlainMessage<CPlayer_PostStatusToFriends_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_PostStatusToFriends_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_PrivacySettingsChanged_Notification
 */
export class CPlayer_PrivacySettingsChanged_Notification extends Message<CPlayer_PrivacySettingsChanged_Notification> {
  /**
   * @generated from field: optional CPrivacySettings privacy_settings = 1;
   */
  privacySettings?: CPrivacySettings;

  constructor(data?: PartialMessage<CPlayer_PrivacySettingsChanged_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_PrivacySettingsChanged_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "privacy_settings", kind: "message", T: CPrivacySettings, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_PrivacySettingsChanged_Notification {
    return new CPlayer_PrivacySettingsChanged_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_PrivacySettingsChanged_Notification {
    return new CPlayer_PrivacySettingsChanged_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_PrivacySettingsChanged_Notification {
    return new CPlayer_PrivacySettingsChanged_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_PrivacySettingsChanged_Notification | PlainMessage<CPlayer_PrivacySettingsChanged_Notification> | undefined, b: CPlayer_PrivacySettingsChanged_Notification | PlainMessage<CPlayer_PrivacySettingsChanged_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_PrivacySettingsChanged_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_RecordDisconnectedPlaytime_Request
 */
export class CPlayer_RecordDisconnectedPlaytime_Request extends Message<CPlayer_RecordDisconnectedPlaytime_Request> {
  /**
   * @generated from field: repeated CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory play_sessions = 3;
   */
  playSessions: CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory[] = [];

  constructor(data?: PartialMessage<CPlayer_RecordDisconnectedPlaytime_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_RecordDisconnectedPlaytime_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 3, name: "play_sessions", kind: "message", T: CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_RecordDisconnectedPlaytime_Request {
    return new CPlayer_RecordDisconnectedPlaytime_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_RecordDisconnectedPlaytime_Request {
    return new CPlayer_RecordDisconnectedPlaytime_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_RecordDisconnectedPlaytime_Request {
    return new CPlayer_RecordDisconnectedPlaytime_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_RecordDisconnectedPlaytime_Request | PlainMessage<CPlayer_RecordDisconnectedPlaytime_Request> | undefined, b: CPlayer_RecordDisconnectedPlaytime_Request | PlainMessage<CPlayer_RecordDisconnectedPlaytime_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_RecordDisconnectedPlaytime_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory
 */
export class CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory extends Message<CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory> {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 session_time_start = 2;
   */
  sessionTimeStart?: number;

  /**
   * @generated from field: optional uint32 seconds = 3;
   */
  seconds?: number;

  /**
   * @generated from field: optional bool offline = 4;
   */
  offline?: boolean;

  /**
   * @generated from field: optional uint32 owner = 5;
   */
  owner?: number;

  constructor(data?: PartialMessage<CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "session_time_start", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "seconds", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "offline", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "owner", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory {
    return new CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory {
    return new CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory {
    return new CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory | PlainMessage<CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory> | undefined, b: CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory | PlainMessage<CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory> | undefined): boolean {
    return proto2.util.equals(CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory, a, b);
  }
}

/**
 * @generated from message CPlayer_RecordDisconnectedPlaytime_Response
 */
export class CPlayer_RecordDisconnectedPlaytime_Response extends Message<CPlayer_RecordDisconnectedPlaytime_Response> {
  constructor(data?: PartialMessage<CPlayer_RecordDisconnectedPlaytime_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_RecordDisconnectedPlaytime_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_RecordDisconnectedPlaytime_Response {
    return new CPlayer_RecordDisconnectedPlaytime_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_RecordDisconnectedPlaytime_Response {
    return new CPlayer_RecordDisconnectedPlaytime_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_RecordDisconnectedPlaytime_Response {
    return new CPlayer_RecordDisconnectedPlaytime_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_RecordDisconnectedPlaytime_Response | PlainMessage<CPlayer_RecordDisconnectedPlaytime_Response> | undefined, b: CPlayer_RecordDisconnectedPlaytime_Response | PlainMessage<CPlayer_RecordDisconnectedPlaytime_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_RecordDisconnectedPlaytime_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_RemoveFriend_Request
 */
export class CPlayer_RemoveFriend_Request extends Message<CPlayer_RemoveFriend_Request> {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: bigint;

  constructor(data?: PartialMessage<CPlayer_RemoveFriend_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_RemoveFriend_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_RemoveFriend_Request {
    return new CPlayer_RemoveFriend_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_RemoveFriend_Request {
    return new CPlayer_RemoveFriend_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_RemoveFriend_Request {
    return new CPlayer_RemoveFriend_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_RemoveFriend_Request | PlainMessage<CPlayer_RemoveFriend_Request> | undefined, b: CPlayer_RemoveFriend_Request | PlainMessage<CPlayer_RemoveFriend_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_RemoveFriend_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_RemoveFriend_Response
 */
export class CPlayer_RemoveFriend_Response extends Message<CPlayer_RemoveFriend_Response> {
  /**
   * @generated from field: optional uint32 friend_relationship = 1;
   */
  friendRelationship?: number;

  constructor(data?: PartialMessage<CPlayer_RemoveFriend_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_RemoveFriend_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "friend_relationship", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_RemoveFriend_Response {
    return new CPlayer_RemoveFriend_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_RemoveFriend_Response {
    return new CPlayer_RemoveFriend_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_RemoveFriend_Response {
    return new CPlayer_RemoveFriend_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_RemoveFriend_Response | PlainMessage<CPlayer_RemoveFriend_Response> | undefined, b: CPlayer_RemoveFriend_Response | PlainMessage<CPlayer_RemoveFriend_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_RemoveFriend_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetAnimatedAvatar_Request
 */
export class CPlayer_SetAnimatedAvatar_Request extends Message<CPlayer_SetAnimatedAvatar_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  constructor(data?: PartialMessage<CPlayer_SetAnimatedAvatar_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetAnimatedAvatar_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetAnimatedAvatar_Request {
    return new CPlayer_SetAnimatedAvatar_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetAnimatedAvatar_Request {
    return new CPlayer_SetAnimatedAvatar_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetAnimatedAvatar_Request {
    return new CPlayer_SetAnimatedAvatar_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetAnimatedAvatar_Request | PlainMessage<CPlayer_SetAnimatedAvatar_Request> | undefined, b: CPlayer_SetAnimatedAvatar_Request | PlainMessage<CPlayer_SetAnimatedAvatar_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetAnimatedAvatar_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetAnimatedAvatar_Response
 */
export class CPlayer_SetAnimatedAvatar_Response extends Message<CPlayer_SetAnimatedAvatar_Response> {
  constructor(data?: PartialMessage<CPlayer_SetAnimatedAvatar_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetAnimatedAvatar_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetAnimatedAvatar_Response {
    return new CPlayer_SetAnimatedAvatar_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetAnimatedAvatar_Response {
    return new CPlayer_SetAnimatedAvatar_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetAnimatedAvatar_Response {
    return new CPlayer_SetAnimatedAvatar_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetAnimatedAvatar_Response | PlainMessage<CPlayer_SetAnimatedAvatar_Response> | undefined, b: CPlayer_SetAnimatedAvatar_Response | PlainMessage<CPlayer_SetAnimatedAvatar_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetAnimatedAvatar_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetAvatarFrame_Request
 */
export class CPlayer_SetAvatarFrame_Request extends Message<CPlayer_SetAvatarFrame_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  constructor(data?: PartialMessage<CPlayer_SetAvatarFrame_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetAvatarFrame_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetAvatarFrame_Request {
    return new CPlayer_SetAvatarFrame_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetAvatarFrame_Request {
    return new CPlayer_SetAvatarFrame_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetAvatarFrame_Request {
    return new CPlayer_SetAvatarFrame_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetAvatarFrame_Request | PlainMessage<CPlayer_SetAvatarFrame_Request> | undefined, b: CPlayer_SetAvatarFrame_Request | PlainMessage<CPlayer_SetAvatarFrame_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetAvatarFrame_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetAvatarFrame_Response
 */
export class CPlayer_SetAvatarFrame_Response extends Message<CPlayer_SetAvatarFrame_Response> {
  constructor(data?: PartialMessage<CPlayer_SetAvatarFrame_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetAvatarFrame_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetAvatarFrame_Response {
    return new CPlayer_SetAvatarFrame_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetAvatarFrame_Response {
    return new CPlayer_SetAvatarFrame_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetAvatarFrame_Response {
    return new CPlayer_SetAvatarFrame_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetAvatarFrame_Response | PlainMessage<CPlayer_SetAvatarFrame_Response> | undefined, b: CPlayer_SetAvatarFrame_Response | PlainMessage<CPlayer_SetAvatarFrame_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetAvatarFrame_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetCommunityPreferences_Request
 */
export class CPlayer_SetCommunityPreferences_Request extends Message<CPlayer_SetCommunityPreferences_Request> {
  /**
   * @generated from field: optional CPlayer_CommunityPreferences preferences = 1;
   */
  preferences?: CPlayer_CommunityPreferences;

  constructor(data?: PartialMessage<CPlayer_SetCommunityPreferences_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetCommunityPreferences_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "preferences", kind: "message", T: CPlayer_CommunityPreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetCommunityPreferences_Request {
    return new CPlayer_SetCommunityPreferences_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetCommunityPreferences_Request {
    return new CPlayer_SetCommunityPreferences_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetCommunityPreferences_Request {
    return new CPlayer_SetCommunityPreferences_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetCommunityPreferences_Request | PlainMessage<CPlayer_SetCommunityPreferences_Request> | undefined, b: CPlayer_SetCommunityPreferences_Request | PlainMessage<CPlayer_SetCommunityPreferences_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetCommunityPreferences_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetCommunityPreferences_Response
 */
export class CPlayer_SetCommunityPreferences_Response extends Message<CPlayer_SetCommunityPreferences_Response> {
  constructor(data?: PartialMessage<CPlayer_SetCommunityPreferences_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetCommunityPreferences_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetCommunityPreferences_Response {
    return new CPlayer_SetCommunityPreferences_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetCommunityPreferences_Response {
    return new CPlayer_SetCommunityPreferences_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetCommunityPreferences_Response {
    return new CPlayer_SetCommunityPreferences_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetCommunityPreferences_Response | PlainMessage<CPlayer_SetCommunityPreferences_Response> | undefined, b: CPlayer_SetCommunityPreferences_Response | PlainMessage<CPlayer_SetCommunityPreferences_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetCommunityPreferences_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetEquippedProfileItemFlags_Request
 */
export class CPlayer_SetEquippedProfileItemFlags_Request extends Message<CPlayer_SetEquippedProfileItemFlags_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  /**
   * @generated from field: optional uint32 flags = 2;
   */
  flags?: number;

  constructor(data?: PartialMessage<CPlayer_SetEquippedProfileItemFlags_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetEquippedProfileItemFlags_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetEquippedProfileItemFlags_Request {
    return new CPlayer_SetEquippedProfileItemFlags_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetEquippedProfileItemFlags_Request {
    return new CPlayer_SetEquippedProfileItemFlags_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetEquippedProfileItemFlags_Request {
    return new CPlayer_SetEquippedProfileItemFlags_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetEquippedProfileItemFlags_Request | PlainMessage<CPlayer_SetEquippedProfileItemFlags_Request> | undefined, b: CPlayer_SetEquippedProfileItemFlags_Request | PlainMessage<CPlayer_SetEquippedProfileItemFlags_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetEquippedProfileItemFlags_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetEquippedProfileItemFlags_Response
 */
export class CPlayer_SetEquippedProfileItemFlags_Response extends Message<CPlayer_SetEquippedProfileItemFlags_Response> {
  constructor(data?: PartialMessage<CPlayer_SetEquippedProfileItemFlags_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetEquippedProfileItemFlags_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetEquippedProfileItemFlags_Response {
    return new CPlayer_SetEquippedProfileItemFlags_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetEquippedProfileItemFlags_Response {
    return new CPlayer_SetEquippedProfileItemFlags_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetEquippedProfileItemFlags_Response {
    return new CPlayer_SetEquippedProfileItemFlags_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetEquippedProfileItemFlags_Response | PlainMessage<CPlayer_SetEquippedProfileItemFlags_Response> | undefined, b: CPlayer_SetEquippedProfileItemFlags_Response | PlainMessage<CPlayer_SetEquippedProfileItemFlags_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetEquippedProfileItemFlags_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetFavoriteBadge_Request
 */
export class CPlayer_SetFavoriteBadge_Request extends Message<CPlayer_SetFavoriteBadge_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  /**
   * @generated from field: optional uint32 badgeid = 2;
   */
  badgeid?: number;

  constructor(data?: PartialMessage<CPlayer_SetFavoriteBadge_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetFavoriteBadge_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "badgeid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetFavoriteBadge_Request {
    return new CPlayer_SetFavoriteBadge_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetFavoriteBadge_Request {
    return new CPlayer_SetFavoriteBadge_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetFavoriteBadge_Request {
    return new CPlayer_SetFavoriteBadge_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetFavoriteBadge_Request | PlainMessage<CPlayer_SetFavoriteBadge_Request> | undefined, b: CPlayer_SetFavoriteBadge_Request | PlainMessage<CPlayer_SetFavoriteBadge_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetFavoriteBadge_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetFavoriteBadge_Response
 */
export class CPlayer_SetFavoriteBadge_Response extends Message<CPlayer_SetFavoriteBadge_Response> {
  constructor(data?: PartialMessage<CPlayer_SetFavoriteBadge_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetFavoriteBadge_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetFavoriteBadge_Response {
    return new CPlayer_SetFavoriteBadge_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetFavoriteBadge_Response {
    return new CPlayer_SetFavoriteBadge_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetFavoriteBadge_Response {
    return new CPlayer_SetFavoriteBadge_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetFavoriteBadge_Response | PlainMessage<CPlayer_SetFavoriteBadge_Response> | undefined, b: CPlayer_SetFavoriteBadge_Response | PlainMessage<CPlayer_SetFavoriteBadge_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetFavoriteBadge_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetMiniProfileBackground_Request
 */
export class CPlayer_SetMiniProfileBackground_Request extends Message<CPlayer_SetMiniProfileBackground_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  constructor(data?: PartialMessage<CPlayer_SetMiniProfileBackground_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetMiniProfileBackground_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetMiniProfileBackground_Request {
    return new CPlayer_SetMiniProfileBackground_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetMiniProfileBackground_Request {
    return new CPlayer_SetMiniProfileBackground_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetMiniProfileBackground_Request {
    return new CPlayer_SetMiniProfileBackground_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetMiniProfileBackground_Request | PlainMessage<CPlayer_SetMiniProfileBackground_Request> | undefined, b: CPlayer_SetMiniProfileBackground_Request | PlainMessage<CPlayer_SetMiniProfileBackground_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetMiniProfileBackground_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetMiniProfileBackground_Response
 */
export class CPlayer_SetMiniProfileBackground_Response extends Message<CPlayer_SetMiniProfileBackground_Response> {
  constructor(data?: PartialMessage<CPlayer_SetMiniProfileBackground_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetMiniProfileBackground_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetMiniProfileBackground_Response {
    return new CPlayer_SetMiniProfileBackground_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetMiniProfileBackground_Response {
    return new CPlayer_SetMiniProfileBackground_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetMiniProfileBackground_Response {
    return new CPlayer_SetMiniProfileBackground_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetMiniProfileBackground_Response | PlainMessage<CPlayer_SetMiniProfileBackground_Response> | undefined, b: CPlayer_SetMiniProfileBackground_Response | PlainMessage<CPlayer_SetMiniProfileBackground_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetMiniProfileBackground_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetPerFriendPreferences_Request
 */
export class CPlayer_SetPerFriendPreferences_Request extends Message<CPlayer_SetPerFriendPreferences_Request> {
  /**
   * @generated from field: optional PerFriendPreferences preferences = 1;
   */
  preferences?: PerFriendPreferences;

  constructor(data?: PartialMessage<CPlayer_SetPerFriendPreferences_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetPerFriendPreferences_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "preferences", kind: "message", T: PerFriendPreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetPerFriendPreferences_Request {
    return new CPlayer_SetPerFriendPreferences_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetPerFriendPreferences_Request {
    return new CPlayer_SetPerFriendPreferences_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetPerFriendPreferences_Request {
    return new CPlayer_SetPerFriendPreferences_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetPerFriendPreferences_Request | PlainMessage<CPlayer_SetPerFriendPreferences_Request> | undefined, b: CPlayer_SetPerFriendPreferences_Request | PlainMessage<CPlayer_SetPerFriendPreferences_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetPerFriendPreferences_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetPerFriendPreferences_Response
 */
export class CPlayer_SetPerFriendPreferences_Response extends Message<CPlayer_SetPerFriendPreferences_Response> {
  constructor(data?: PartialMessage<CPlayer_SetPerFriendPreferences_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetPerFriendPreferences_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetPerFriendPreferences_Response {
    return new CPlayer_SetPerFriendPreferences_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetPerFriendPreferences_Response {
    return new CPlayer_SetPerFriendPreferences_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetPerFriendPreferences_Response {
    return new CPlayer_SetPerFriendPreferences_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetPerFriendPreferences_Response | PlainMessage<CPlayer_SetPerFriendPreferences_Response> | undefined, b: CPlayer_SetPerFriendPreferences_Response | PlainMessage<CPlayer_SetPerFriendPreferences_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetPerFriendPreferences_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetProfileBackground_Request
 */
export class CPlayer_SetProfileBackground_Request extends Message<CPlayer_SetProfileBackground_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  constructor(data?: PartialMessage<CPlayer_SetProfileBackground_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetProfileBackground_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetProfileBackground_Request {
    return new CPlayer_SetProfileBackground_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetProfileBackground_Request {
    return new CPlayer_SetProfileBackground_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetProfileBackground_Request {
    return new CPlayer_SetProfileBackground_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetProfileBackground_Request | PlainMessage<CPlayer_SetProfileBackground_Request> | undefined, b: CPlayer_SetProfileBackground_Request | PlainMessage<CPlayer_SetProfileBackground_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetProfileBackground_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetProfileBackground_Response
 */
export class CPlayer_SetProfileBackground_Response extends Message<CPlayer_SetProfileBackground_Response> {
  constructor(data?: PartialMessage<CPlayer_SetProfileBackground_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetProfileBackground_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetProfileBackground_Response {
    return new CPlayer_SetProfileBackground_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetProfileBackground_Response {
    return new CPlayer_SetProfileBackground_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetProfileBackground_Response {
    return new CPlayer_SetProfileBackground_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetProfileBackground_Response | PlainMessage<CPlayer_SetProfileBackground_Response> | undefined, b: CPlayer_SetProfileBackground_Response | PlainMessage<CPlayer_SetProfileBackground_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetProfileBackground_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetProfilePreferences_Request
 */
export class CPlayer_SetProfilePreferences_Request extends Message<CPlayer_SetProfilePreferences_Request> {
  /**
   * @generated from field: optional ProfilePreferences profile_preferences = 1;
   */
  profilePreferences?: ProfilePreferences;

  constructor(data?: PartialMessage<CPlayer_SetProfilePreferences_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetProfilePreferences_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "profile_preferences", kind: "message", T: ProfilePreferences, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetProfilePreferences_Request {
    return new CPlayer_SetProfilePreferences_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetProfilePreferences_Request {
    return new CPlayer_SetProfilePreferences_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetProfilePreferences_Request {
    return new CPlayer_SetProfilePreferences_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetProfilePreferences_Request | PlainMessage<CPlayer_SetProfilePreferences_Request> | undefined, b: CPlayer_SetProfilePreferences_Request | PlainMessage<CPlayer_SetProfilePreferences_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetProfilePreferences_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetProfilePreferences_Response
 */
export class CPlayer_SetProfilePreferences_Response extends Message<CPlayer_SetProfilePreferences_Response> {
  constructor(data?: PartialMessage<CPlayer_SetProfilePreferences_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetProfilePreferences_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetProfilePreferences_Response {
    return new CPlayer_SetProfilePreferences_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetProfilePreferences_Response {
    return new CPlayer_SetProfilePreferences_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetProfilePreferences_Response {
    return new CPlayer_SetProfilePreferences_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetProfilePreferences_Response | PlainMessage<CPlayer_SetProfilePreferences_Response> | undefined, b: CPlayer_SetProfilePreferences_Response | PlainMessage<CPlayer_SetProfilePreferences_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetProfilePreferences_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetProfileTheme_Request
 */
export class CPlayer_SetProfileTheme_Request extends Message<CPlayer_SetProfileTheme_Request> {
  /**
   * @generated from field: optional string theme_id = 1;
   */
  themeId?: string;

  constructor(data?: PartialMessage<CPlayer_SetProfileTheme_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetProfileTheme_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "theme_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetProfileTheme_Request {
    return new CPlayer_SetProfileTheme_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetProfileTheme_Request {
    return new CPlayer_SetProfileTheme_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetProfileTheme_Request {
    return new CPlayer_SetProfileTheme_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetProfileTheme_Request | PlainMessage<CPlayer_SetProfileTheme_Request> | undefined, b: CPlayer_SetProfileTheme_Request | PlainMessage<CPlayer_SetProfileTheme_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetProfileTheme_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetProfileTheme_Response
 */
export class CPlayer_SetProfileTheme_Response extends Message<CPlayer_SetProfileTheme_Response> {
  constructor(data?: PartialMessage<CPlayer_SetProfileTheme_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetProfileTheme_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetProfileTheme_Response {
    return new CPlayer_SetProfileTheme_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetProfileTheme_Response {
    return new CPlayer_SetProfileTheme_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetProfileTheme_Response {
    return new CPlayer_SetProfileTheme_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetProfileTheme_Response | PlainMessage<CPlayer_SetProfileTheme_Response> | undefined, b: CPlayer_SetProfileTheme_Response | PlainMessage<CPlayer_SetProfileTheme_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetProfileTheme_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_SetSteamDeckKeyboardSkin_Request
 */
export class CPlayer_SetSteamDeckKeyboardSkin_Request extends Message<CPlayer_SetSteamDeckKeyboardSkin_Request> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  constructor(data?: PartialMessage<CPlayer_SetSteamDeckKeyboardSkin_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetSteamDeckKeyboardSkin_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetSteamDeckKeyboardSkin_Request {
    return new CPlayer_SetSteamDeckKeyboardSkin_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetSteamDeckKeyboardSkin_Request {
    return new CPlayer_SetSteamDeckKeyboardSkin_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetSteamDeckKeyboardSkin_Request {
    return new CPlayer_SetSteamDeckKeyboardSkin_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetSteamDeckKeyboardSkin_Request | PlainMessage<CPlayer_SetSteamDeckKeyboardSkin_Request> | undefined, b: CPlayer_SetSteamDeckKeyboardSkin_Request | PlainMessage<CPlayer_SetSteamDeckKeyboardSkin_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetSteamDeckKeyboardSkin_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_SetSteamDeckKeyboardSkin_Response
 */
export class CPlayer_SetSteamDeckKeyboardSkin_Response extends Message<CPlayer_SetSteamDeckKeyboardSkin_Response> {
  constructor(data?: PartialMessage<CPlayer_SetSteamDeckKeyboardSkin_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_SetSteamDeckKeyboardSkin_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_SetSteamDeckKeyboardSkin_Response {
    return new CPlayer_SetSteamDeckKeyboardSkin_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_SetSteamDeckKeyboardSkin_Response {
    return new CPlayer_SetSteamDeckKeyboardSkin_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_SetSteamDeckKeyboardSkin_Response {
    return new CPlayer_SetSteamDeckKeyboardSkin_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_SetSteamDeckKeyboardSkin_Response | PlainMessage<CPlayer_SetSteamDeckKeyboardSkin_Response> | undefined, b: CPlayer_SetSteamDeckKeyboardSkin_Response | PlainMessage<CPlayer_SetSteamDeckKeyboardSkin_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_SetSteamDeckKeyboardSkin_Response, a, b);
  }
}

/**
 * @generated from message CPlayer_TextFilterWords
 */
export class CPlayer_TextFilterWords extends Message<CPlayer_TextFilterWords> {
  /**
   * @generated from field: repeated string text_filter_custom_banned_words = 1;
   */
  textFilterCustomBannedWords: string[] = [];

  /**
   * @generated from field: repeated string text_filter_custom_clean_words = 2;
   */
  textFilterCustomCleanWords: string[] = [];

  /**
   * @generated from field: optional uint32 text_filter_words_revision = 3;
   */
  textFilterWordsRevision?: number;

  constructor(data?: PartialMessage<CPlayer_TextFilterWords>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_TextFilterWords";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "text_filter_custom_banned_words", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "text_filter_custom_clean_words", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "text_filter_words_revision", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_TextFilterWords {
    return new CPlayer_TextFilterWords().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_TextFilterWords {
    return new CPlayer_TextFilterWords().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_TextFilterWords {
    return new CPlayer_TextFilterWords().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_TextFilterWords | PlainMessage<CPlayer_TextFilterWords> | undefined, b: CPlayer_TextFilterWords | PlainMessage<CPlayer_TextFilterWords> | undefined): boolean {
    return proto2.util.equals(CPlayer_TextFilterWords, a, b);
  }
}

/**
 * @generated from message CPlayer_TextFilterWordsChanged_Notification
 */
export class CPlayer_TextFilterWordsChanged_Notification extends Message<CPlayer_TextFilterWordsChanged_Notification> {
  /**
   * @generated from field: optional CPlayer_TextFilterWords words = 1;
   */
  words?: CPlayer_TextFilterWords;

  constructor(data?: PartialMessage<CPlayer_TextFilterWordsChanged_Notification>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_TextFilterWordsChanged_Notification";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "words", kind: "message", T: CPlayer_TextFilterWords, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_TextFilterWordsChanged_Notification {
    return new CPlayer_TextFilterWordsChanged_Notification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_TextFilterWordsChanged_Notification {
    return new CPlayer_TextFilterWordsChanged_Notification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_TextFilterWordsChanged_Notification {
    return new CPlayer_TextFilterWordsChanged_Notification().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_TextFilterWordsChanged_Notification | PlainMessage<CPlayer_TextFilterWordsChanged_Notification> | undefined, b: CPlayer_TextFilterWordsChanged_Notification | PlainMessage<CPlayer_TextFilterWordsChanged_Notification> | undefined): boolean {
    return proto2.util.equals(CPlayer_TextFilterWordsChanged_Notification, a, b);
  }
}

/**
 * @generated from message CPlayer_UpdateSteamAnnouncementLastRead_Request
 */
export class CPlayer_UpdateSteamAnnouncementLastRead_Request extends Message<CPlayer_UpdateSteamAnnouncementLastRead_Request> {
  /**
   * @generated from field: optional uint64 announcement_gid = 1;
   */
  announcementGid?: bigint;

  /**
   * @generated from field: optional uint32 time_posted = 2;
   */
  timePosted?: number;

  constructor(data?: PartialMessage<CPlayer_UpdateSteamAnnouncementLastRead_Request>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_UpdateSteamAnnouncementLastRead_Request";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "announcement_gid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "time_posted", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_UpdateSteamAnnouncementLastRead_Request {
    return new CPlayer_UpdateSteamAnnouncementLastRead_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_UpdateSteamAnnouncementLastRead_Request {
    return new CPlayer_UpdateSteamAnnouncementLastRead_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_UpdateSteamAnnouncementLastRead_Request {
    return new CPlayer_UpdateSteamAnnouncementLastRead_Request().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_UpdateSteamAnnouncementLastRead_Request | PlainMessage<CPlayer_UpdateSteamAnnouncementLastRead_Request> | undefined, b: CPlayer_UpdateSteamAnnouncementLastRead_Request | PlainMessage<CPlayer_UpdateSteamAnnouncementLastRead_Request> | undefined): boolean {
    return proto2.util.equals(CPlayer_UpdateSteamAnnouncementLastRead_Request, a, b);
  }
}

/**
 * @generated from message CPlayer_UpdateSteamAnnouncementLastRead_Response
 */
export class CPlayer_UpdateSteamAnnouncementLastRead_Response extends Message<CPlayer_UpdateSteamAnnouncementLastRead_Response> {
  constructor(data?: PartialMessage<CPlayer_UpdateSteamAnnouncementLastRead_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPlayer_UpdateSteamAnnouncementLastRead_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPlayer_UpdateSteamAnnouncementLastRead_Response {
    return new CPlayer_UpdateSteamAnnouncementLastRead_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPlayer_UpdateSteamAnnouncementLastRead_Response {
    return new CPlayer_UpdateSteamAnnouncementLastRead_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPlayer_UpdateSteamAnnouncementLastRead_Response {
    return new CPlayer_UpdateSteamAnnouncementLastRead_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CPlayer_UpdateSteamAnnouncementLastRead_Response | PlainMessage<CPlayer_UpdateSteamAnnouncementLastRead_Response> | undefined, b: CPlayer_UpdateSteamAnnouncementLastRead_Response | PlainMessage<CPlayer_UpdateSteamAnnouncementLastRead_Response> | undefined): boolean {
    return proto2.util.equals(CPlayer_UpdateSteamAnnouncementLastRead_Response, a, b);
  }
}

/**
 * @generated from message CPrivacySettings
 */
export class CPrivacySettings extends Message<CPrivacySettings> {
  /**
   * @generated from field: optional int32 privacy_state = 1;
   */
  privacyState?: number;

  /**
   * @generated from field: optional int32 privacy_state_inventory = 2;
   */
  privacyStateInventory?: number;

  /**
   * @generated from field: optional int32 privacy_state_gifts = 3;
   */
  privacyStateGifts?: number;

  /**
   * @generated from field: optional int32 privacy_state_ownedgames = 4;
   */
  privacyStateOwnedgames?: number;

  /**
   * @generated from field: optional int32 privacy_state_playtime = 5;
   */
  privacyStatePlaytime?: number;

  /**
   * @generated from field: optional int32 privacy_state_friendslist = 6;
   */
  privacyStateFriendslist?: number;

  constructor(data?: PartialMessage<CPrivacySettings>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CPrivacySettings";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "privacy_state", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "privacy_state_inventory", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "privacy_state_gifts", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "privacy_state_ownedgames", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "privacy_state_playtime", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "privacy_state_friendslist", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CPrivacySettings {
    return new CPrivacySettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CPrivacySettings {
    return new CPrivacySettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CPrivacySettings {
    return new CPrivacySettings().fromJsonString(jsonString, options);
  }

  static equals(a: CPrivacySettings | PlainMessage<CPrivacySettings> | undefined, b: CPrivacySettings | PlainMessage<CPrivacySettings> | undefined): boolean {
    return proto2.util.equals(CPrivacySettings, a, b);
  }
}

/**
 * @generated from message PerFriendPreferences
 */
export class PerFriendPreferences extends Message<PerFriendPreferences> {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid?: number;

  /**
   * @generated from field: optional string nickname = 2;
   */
  nickname?: string;

  /**
   * @generated from field: optional int32 notifications_showingame = 3;
   */
  notificationsShowingame?: number;

  /**
   * @generated from field: optional int32 notifications_showonline = 4;
   */
  notificationsShowonline?: number;

  /**
   * @generated from field: optional int32 notifications_showmessages = 5;
   */
  notificationsShowmessages?: number;

  /**
   * @generated from field: optional int32 sounds_showingame = 6;
   */
  soundsShowingame?: number;

  /**
   * @generated from field: optional int32 sounds_showonline = 7;
   */
  soundsShowonline?: number;

  /**
   * @generated from field: optional int32 sounds_showmessages = 8;
   */
  soundsShowmessages?: number;

  /**
   * @generated from field: optional int32 notifications_sendmobile = 9;
   */
  notificationsSendmobile?: number;

  constructor(data?: PartialMessage<PerFriendPreferences>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "PerFriendPreferences";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "notifications_showingame", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "notifications_showonline", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "notifications_showmessages", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "sounds_showingame", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "sounds_showonline", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "sounds_showmessages", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "notifications_sendmobile", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PerFriendPreferences {
    return new PerFriendPreferences().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PerFriendPreferences {
    return new PerFriendPreferences().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PerFriendPreferences {
    return new PerFriendPreferences().fromJsonString(jsonString, options);
  }

  static equals(a: PerFriendPreferences | PlainMessage<PerFriendPreferences> | undefined, b: PerFriendPreferences | PlainMessage<PerFriendPreferences> | undefined): boolean {
    return proto2.util.equals(PerFriendPreferences, a, b);
  }
}

/**
 * @generated from message ProfileCustomization
 */
export class ProfileCustomization extends Message<ProfileCustomization> {
  /**
   * @generated from field: optional int32 customization_type = 1;
   */
  customizationType?: number;

  /**
   * @generated from field: optional bool large = 2;
   */
  large?: boolean;

  /**
   * @generated from field: repeated ProfileCustomizationSlot slots = 3;
   */
  slots: ProfileCustomizationSlot[] = [];

  /**
   * @generated from field: optional bool active = 4;
   */
  active?: boolean;

  /**
   * @generated from field: optional int32 customization_style = 5;
   */
  customizationStyle?: number;

  /**
   * @generated from field: optional uint64 purchaseid = 6;
   */
  purchaseid?: bigint;

  /**
   * @generated from field: optional uint32 level = 7;
   */
  level?: number;

  constructor(data?: PartialMessage<ProfileCustomization>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProfileCustomization";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "customization_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "large", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "slots", kind: "message", T: ProfileCustomizationSlot, repeated: true },
    { no: 4, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "customization_style", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "purchaseid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 7, name: "level", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileCustomization {
    return new ProfileCustomization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileCustomization {
    return new ProfileCustomization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileCustomization {
    return new ProfileCustomization().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileCustomization | PlainMessage<ProfileCustomization> | undefined, b: ProfileCustomization | PlainMessage<ProfileCustomization> | undefined): boolean {
    return proto2.util.equals(ProfileCustomization, a, b);
  }
}

/**
 * @generated from message ProfileCustomizationSlot
 */
export class ProfileCustomizationSlot extends Message<ProfileCustomizationSlot> {
  /**
   * @generated from field: optional uint32 slot = 1;
   */
  slot?: number;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid?: number;

  /**
   * @generated from field: optional uint64 publishedfileid = 3;
   */
  publishedfileid?: bigint;

  /**
   * @generated from field: optional uint64 item_assetid = 4;
   */
  itemAssetid?: bigint;

  /**
   * @generated from field: optional uint64 item_contextid = 5;
   */
  itemContextid?: bigint;

  /**
   * @generated from field: optional string notes = 6;
   */
  notes?: string;

  /**
   * @generated from field: optional string title = 7;
   */
  title?: string;

  /**
   * @generated from field: optional uint32 accountid = 8;
   */
  accountid?: number;

  /**
   * @generated from field: optional uint32 badgeid = 9;
   */
  badgeid?: number;

  /**
   * @generated from field: optional uint32 border_color = 10;
   */
  borderColor?: number;

  /**
   * @generated from field: optional uint64 item_classid = 11;
   */
  itemClassid?: bigint;

  /**
   * @generated from field: optional uint64 item_instanceid = 12;
   */
  itemInstanceid?: bigint;

  /**
   * @generated from field: optional int32 ban_check_result = 13;
   */
  banCheckResult?: number;

  /**
   * @generated from field: optional uint32 replay_year = 14;
   */
  replayYear?: number;

  constructor(data?: PartialMessage<ProfileCustomizationSlot>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProfileCustomizationSlot";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "slot", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "publishedfileid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "item_assetid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "item_contextid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 6, name: "notes", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "accountid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "badgeid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 10, name: "border_color", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "item_classid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 12, name: "item_instanceid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 13, name: "ban_check_result", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 14, name: "replay_year", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileCustomizationSlot {
    return new ProfileCustomizationSlot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileCustomizationSlot {
    return new ProfileCustomizationSlot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileCustomizationSlot {
    return new ProfileCustomizationSlot().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileCustomizationSlot | PlainMessage<ProfileCustomizationSlot> | undefined, b: ProfileCustomizationSlot | PlainMessage<ProfileCustomizationSlot> | undefined): boolean {
    return proto2.util.equals(ProfileCustomizationSlot, a, b);
  }
}

/**
 * @generated from message ProfileItem
 */
export class ProfileItem extends Message<ProfileItem> {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid?: bigint;

  /**
   * @generated from field: optional string image_small = 2;
   */
  imageSmall?: string;

  /**
   * @generated from field: optional string image_large = 3;
   */
  imageLarge?: string;

  /**
   * @generated from field: optional string name = 4;
   */
  name?: string;

  /**
   * @generated from field: optional string item_title = 5;
   */
  itemTitle?: string;

  /**
   * @generated from field: optional string item_description = 6;
   */
  itemDescription?: string;

  /**
   * @generated from field: optional uint32 appid = 7;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 item_type = 8;
   */
  itemType?: number;

  /**
   * @generated from field: optional uint32 item_class = 9;
   */
  itemClass?: number;

  /**
   * @generated from field: optional string movie_webm = 10;
   */
  movieWebm?: string;

  /**
   * @generated from field: optional string movie_mp4 = 11;
   */
  movieMp4?: string;

  /**
   * @generated from field: optional uint32 equipped_flags = 12;
   */
  equippedFlags?: number;

  /**
   * @generated from field: optional string movie_webm_small = 13;
   */
  movieWebmSmall?: string;

  /**
   * @generated from field: optional string movie_mp4_small = 14;
   */
  movieMp4Small?: string;

  /**
   * @generated from field: repeated ProfileItem_ProfileColor profile_colors = 15;
   */
  profileColors: ProfileItem_ProfileColor[] = [];

  constructor(data?: PartialMessage<ProfileItem>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProfileItem";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "communityitemid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "image_small", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "image_large", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "item_title", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "item_description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "appid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "item_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "item_class", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 10, name: "movie_webm", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "movie_mp4", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "equipped_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 13, name: "movie_webm_small", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "movie_mp4_small", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 15, name: "profile_colors", kind: "message", T: ProfileItem_ProfileColor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileItem {
    return new ProfileItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileItem {
    return new ProfileItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileItem {
    return new ProfileItem().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileItem | PlainMessage<ProfileItem> | undefined, b: ProfileItem | PlainMessage<ProfileItem> | undefined): boolean {
    return proto2.util.equals(ProfileItem, a, b);
  }
}

/**
 * @generated from message ProfileItem_ProfileColor
 */
export class ProfileItem_ProfileColor extends Message<ProfileItem_ProfileColor> {
  /**
   * @generated from field: optional string style_name = 1;
   */
  styleName?: string;

  /**
   * @generated from field: optional string color = 2;
   */
  color?: string;

  constructor(data?: PartialMessage<ProfileItem_ProfileColor>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProfileItem_ProfileColor";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "style_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "color", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileItem_ProfileColor {
    return new ProfileItem_ProfileColor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileItem_ProfileColor {
    return new ProfileItem_ProfileColor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileItem_ProfileColor {
    return new ProfileItem_ProfileColor().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileItem_ProfileColor | PlainMessage<ProfileItem_ProfileColor> | undefined, b: ProfileItem_ProfileColor | PlainMessage<ProfileItem_ProfileColor> | undefined): boolean {
    return proto2.util.equals(ProfileItem_ProfileColor, a, b);
  }
}

/**
 * @generated from message ProfilePreferences
 */
export class ProfilePreferences extends Message<ProfilePreferences> {
  /**
   * @generated from field: optional bool hide_profile_awards = 1;
   */
  hideProfileAwards?: boolean;

  constructor(data?: PartialMessage<ProfilePreferences>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProfilePreferences";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hide_profile_awards", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfilePreferences {
    return new ProfilePreferences().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfilePreferences {
    return new ProfilePreferences().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfilePreferences {
    return new ProfilePreferences().fromJsonString(jsonString, options);
  }

  static equals(a: ProfilePreferences | PlainMessage<ProfilePreferences> | undefined, b: ProfilePreferences | PlainMessage<ProfilePreferences> | undefined): boolean {
    return proto2.util.equals(ProfilePreferences, a, b);
  }
}

/**
 * @generated from message ProfileTheme
 */
export class ProfileTheme extends Message<ProfileTheme> {
  /**
   * @generated from field: optional string theme_id = 1;
   */
  themeId?: string;

  /**
   * @generated from field: optional string title = 2;
   */
  title?: string;

  constructor(data?: PartialMessage<ProfileTheme>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProfileTheme";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "theme_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileTheme {
    return new ProfileTheme().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileTheme {
    return new ProfileTheme().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileTheme {
    return new ProfileTheme().fromJsonString(jsonString, options);
  }

  static equals(a: ProfileTheme | PlainMessage<ProfileTheme> | undefined, b: ProfileTheme | PlainMessage<ProfileTheme> | undefined): boolean {
    return proto2.util.equals(ProfileTheme, a, b);
  }
}

