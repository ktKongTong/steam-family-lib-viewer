// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file web-ui/service_community.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_web_ui_common_base } from "./common_base_pb";
import type { CMsgIPAddress, CMsgIPAddressJson } from "./common_pb";
import { file_web_ui_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file web-ui/service_community.proto.
 */
export const file_web_ui_service_community: GenFile = /*@__PURE__*/
  fileDesc("", [file_web_ui_common_base, file_web_ui_common]);

/**
 * @generated from message CAppPriority
 */
export type CAppPriority = Message<"CAppPriority"> & {
  /**
   * @generated from field: optional uint32 priority = 1;
   */
  priority: number;

  /**
   * @generated from field: repeated uint32 appid = 2;
   */
  appid: number[];
};

/**
 * @generated from message CAppPriority
 */
export type CAppPriorityJson = {
  /**
   * @generated from field: optional uint32 priority = 1;
   */
  priority?: number;

  /**
   * @generated from field: repeated uint32 appid = 2;
   */
  appid?: number[];
};

/**
 * Describes the message CAppPriority.
 * Use `create(CAppPrioritySchema)` to create a new message.
 */
export const CAppPrioritySchema: GenMessage<CAppPriority, CAppPriorityJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 0);

/**
 * @generated from message CCDDBAppDetailCommon
 */
export type CCDDBAppDetailCommon = Message<"CCDDBAppDetailCommon"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string icon = 3;
   */
  icon: string;

  /**
   * @generated from field: optional string logo = 4;
   */
  logo: string;

  /**
   * @generated from field: optional string logo_small = 5;
   */
  logoSmall: string;

  /**
   * @generated from field: optional bool tool = 6;
   */
  tool: boolean;

  /**
   * @generated from field: optional bool demo = 7;
   */
  demo: boolean;

  /**
   * @generated from field: optional bool media = 8;
   */
  media: boolean;

  /**
   * @generated from field: optional bool community_visible_stats = 9;
   */
  communityVisibleStats: boolean;

  /**
   * @generated from field: optional string friendly_name = 10;
   */
  friendlyName: string;

  /**
   * @generated from field: optional string propagation = 11;
   */
  propagation: string;

  /**
   * @generated from field: optional bool has_adult_content = 12;
   */
  hasAdultContent: boolean;

  /**
   * @generated from field: optional bool is_visible_in_steam_china = 13;
   */
  isVisibleInSteamChina: boolean;

  /**
   * @generated from field: optional uint32 app_type = 14;
   */
  appType: number;

  /**
   * @generated from field: optional bool has_adult_content_sex = 15;
   */
  hasAdultContentSex: boolean;

  /**
   * @generated from field: optional bool has_adult_content_violence = 16;
   */
  hasAdultContentViolence: boolean;

  /**
   * @generated from field: repeated uint32 content_descriptorids = 17;
   */
  contentDescriptorids: number[];
};

/**
 * @generated from message CCDDBAppDetailCommon
 */
export type CCDDBAppDetailCommonJson = {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string icon = 3;
   */
  icon?: string;

  /**
   * @generated from field: optional string logo = 4;
   */
  logo?: string;

  /**
   * @generated from field: optional string logo_small = 5;
   */
  logoSmall?: string;

  /**
   * @generated from field: optional bool tool = 6;
   */
  tool?: boolean;

  /**
   * @generated from field: optional bool demo = 7;
   */
  demo?: boolean;

  /**
   * @generated from field: optional bool media = 8;
   */
  media?: boolean;

  /**
   * @generated from field: optional bool community_visible_stats = 9;
   */
  communityVisibleStats?: boolean;

  /**
   * @generated from field: optional string friendly_name = 10;
   */
  friendlyName?: string;

  /**
   * @generated from field: optional string propagation = 11;
   */
  propagation?: string;

  /**
   * @generated from field: optional bool has_adult_content = 12;
   */
  hasAdultContent?: boolean;

  /**
   * @generated from field: optional bool is_visible_in_steam_china = 13;
   */
  isVisibleInSteamChina?: boolean;

  /**
   * @generated from field: optional uint32 app_type = 14;
   */
  appType?: number;

  /**
   * @generated from field: optional bool has_adult_content_sex = 15;
   */
  hasAdultContentSex?: boolean;

  /**
   * @generated from field: optional bool has_adult_content_violence = 16;
   */
  hasAdultContentViolence?: boolean;

  /**
   * @generated from field: repeated uint32 content_descriptorids = 17;
   */
  contentDescriptorids?: number[];
};

/**
 * Describes the message CCDDBAppDetailCommon.
 * Use `create(CCDDBAppDetailCommonSchema)` to create a new message.
 */
export const CCDDBAppDetailCommonSchema: GenMessage<CCDDBAppDetailCommon, CCDDBAppDetailCommonJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 1);

/**
 * @generated from message CClanEventUserNewsTuple
 */
export type CClanEventUserNewsTuple = Message<"CClanEventUserNewsTuple"> & {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional fixed64 announcement_gid = 3;
   */
  announcementGid: bigint;

  /**
   * @generated from field: optional uint32 rtime_start = 4;
   */
  rtimeStart: number;

  /**
   * @generated from field: optional uint32 rtime_end = 5;
   */
  rtimeEnd: number;

  /**
   * @generated from field: optional uint32 priority_score = 6;
   */
  priorityScore: number;

  /**
   * @generated from field: optional uint32 type = 7;
   */
  type: number;

  /**
   * @generated from field: optional uint32 clamp_range_slot = 8;
   */
  clampRangeSlot: number;

  /**
   * @generated from field: optional uint32 appid = 9;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 10;
   */
  rtime32LastModified: number;
};

/**
 * @generated from message CClanEventUserNewsTuple
 */
export type CClanEventUserNewsTupleJson = {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid?: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid?: string;

  /**
   * @generated from field: optional fixed64 announcement_gid = 3;
   */
  announcementGid?: string;

  /**
   * @generated from field: optional uint32 rtime_start = 4;
   */
  rtimeStart?: number;

  /**
   * @generated from field: optional uint32 rtime_end = 5;
   */
  rtimeEnd?: number;

  /**
   * @generated from field: optional uint32 priority_score = 6;
   */
  priorityScore?: number;

  /**
   * @generated from field: optional uint32 type = 7;
   */
  type?: number;

  /**
   * @generated from field: optional uint32 clamp_range_slot = 8;
   */
  clampRangeSlot?: number;

  /**
   * @generated from field: optional uint32 appid = 9;
   */
  appid?: number;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 10;
   */
  rtime32LastModified?: number;
};

/**
 * Describes the message CClanEventUserNewsTuple.
 * Use `create(CClanEventUserNewsTupleSchema)` to create a new message.
 */
export const CClanEventUserNewsTupleSchema: GenMessage<CClanEventUserNewsTuple, CClanEventUserNewsTupleJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 2);

/**
 * @generated from message CClanMatchEventByRange
 */
export type CClanMatchEventByRange = Message<"CClanMatchEventByRange"> & {
  /**
   * @generated from field: optional uint32 rtime_before = 1;
   */
  rtimeBefore: number;

  /**
   * @generated from field: optional uint32 rtime_after = 2;
   */
  rtimeAfter: number;

  /**
   * @generated from field: optional uint32 qualified = 3;
   */
  qualified: number;

  /**
   * @generated from field: repeated CClanEventUserNewsTuple events = 4;
   */
  events: CClanEventUserNewsTuple[];
};

/**
 * @generated from message CClanMatchEventByRange
 */
export type CClanMatchEventByRangeJson = {
  /**
   * @generated from field: optional uint32 rtime_before = 1;
   */
  rtimeBefore?: number;

  /**
   * @generated from field: optional uint32 rtime_after = 2;
   */
  rtimeAfter?: number;

  /**
   * @generated from field: optional uint32 qualified = 3;
   */
  qualified?: number;

  /**
   * @generated from field: repeated CClanEventUserNewsTuple events = 4;
   */
  events?: CClanEventUserNewsTupleJson[];
};

/**
 * Describes the message CClanMatchEventByRange.
 * Use `create(CClanMatchEventByRangeSchema)` to create a new message.
 */
export const CClanMatchEventByRangeSchema: GenMessage<CClanMatchEventByRange, CClanMatchEventByRangeJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 3);

/**
 * @generated from message CCommunity_ClearSinglePartnerEventsAppPriority_Request
 */
export type CCommunity_ClearSinglePartnerEventsAppPriority_Request = Message<"CCommunity_ClearSinglePartnerEventsAppPriority_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * @generated from message CCommunity_ClearSinglePartnerEventsAppPriority_Request
 */
export type CCommunity_ClearSinglePartnerEventsAppPriority_RequestJson = {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;
};

/**
 * Describes the message CCommunity_ClearSinglePartnerEventsAppPriority_Request.
 * Use `create(CCommunity_ClearSinglePartnerEventsAppPriority_RequestSchema)` to create a new message.
 */
export const CCommunity_ClearSinglePartnerEventsAppPriority_RequestSchema: GenMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Request, CCommunity_ClearSinglePartnerEventsAppPriority_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 4);

/**
 * @generated from message CCommunity_ClearSinglePartnerEventsAppPriority_Response
 */
export type CCommunity_ClearSinglePartnerEventsAppPriority_Response = Message<"CCommunity_ClearSinglePartnerEventsAppPriority_Response"> & {
};

/**
 * @generated from message CCommunity_ClearSinglePartnerEventsAppPriority_Response
 */
export type CCommunity_ClearSinglePartnerEventsAppPriority_ResponseJson = {
};

/**
 * Describes the message CCommunity_ClearSinglePartnerEventsAppPriority_Response.
 * Use `create(CCommunity_ClearSinglePartnerEventsAppPriority_ResponseSchema)` to create a new message.
 */
export const CCommunity_ClearSinglePartnerEventsAppPriority_ResponseSchema: GenMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Response, CCommunity_ClearSinglePartnerEventsAppPriority_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 5);

/**
 * @generated from message CCommunity_ClearUserPartnerEventsAppPriorities_Request
 */
export type CCommunity_ClearUserPartnerEventsAppPriorities_Request = Message<"CCommunity_ClearUserPartnerEventsAppPriorities_Request"> & {
};

/**
 * @generated from message CCommunity_ClearUserPartnerEventsAppPriorities_Request
 */
export type CCommunity_ClearUserPartnerEventsAppPriorities_RequestJson = {
};

/**
 * Describes the message CCommunity_ClearUserPartnerEventsAppPriorities_Request.
 * Use `create(CCommunity_ClearUserPartnerEventsAppPriorities_RequestSchema)` to create a new message.
 */
export const CCommunity_ClearUserPartnerEventsAppPriorities_RequestSchema: GenMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Request, CCommunity_ClearUserPartnerEventsAppPriorities_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 6);

/**
 * @generated from message CCommunity_ClearUserPartnerEventsAppPriorities_Response
 */
export type CCommunity_ClearUserPartnerEventsAppPriorities_Response = Message<"CCommunity_ClearUserPartnerEventsAppPriorities_Response"> & {
};

/**
 * @generated from message CCommunity_ClearUserPartnerEventsAppPriorities_Response
 */
export type CCommunity_ClearUserPartnerEventsAppPriorities_ResponseJson = {
};

/**
 * Describes the message CCommunity_ClearUserPartnerEventsAppPriorities_Response.
 * Use `create(CCommunity_ClearUserPartnerEventsAppPriorities_ResponseSchema)` to create a new message.
 */
export const CCommunity_ClearUserPartnerEventsAppPriorities_ResponseSchema: GenMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Response, CCommunity_ClearUserPartnerEventsAppPriorities_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 7);

/**
 * @generated from message CCommunity_Comment
 */
export type CCommunity_Comment = Message<"CCommunity_Comment"> & {
  /**
   * @generated from field: optional fixed64 gidcomment = 1;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: optional string text = 4;
   */
  text: string;

  /**
   * @generated from field: optional int32 upvotes = 5;
   */
  upvotes: number;

  /**
   * @generated from field: optional bool hidden = 6;
   */
  hidden: boolean;

  /**
   * @generated from field: optional bool hidden_by_user = 7;
   */
  hiddenByUser: boolean;

  /**
   * @generated from field: optional bool deleted = 8;
   */
  deleted: boolean;

  /**
   * @generated from field: optional CMsgIPAddress ipaddress = 9;
   */
  ipaddress?: CMsgIPAddress;

  /**
   * @generated from field: optional int32 total_hidden = 10;
   */
  totalHidden: number;

  /**
   * @generated from field: optional bool upvoted_by_user = 11;
   */
  upvotedByUser: boolean;

  /**
   * @generated from field: repeated CCommunity_Comment_Reaction reactions = 12;
   */
  reactions: CCommunity_Comment_Reaction[];

  /**
   * @generated from field: optional fixed64 gidparentcomment = 13;
   */
  gidparentcomment: bigint;
};

/**
 * @generated from message CCommunity_Comment
 */
export type CCommunity_CommentJson = {
  /**
   * @generated from field: optional fixed64 gidcomment = 1;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid?: string;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp?: number;

  /**
   * @generated from field: optional string text = 4;
   */
  text?: string;

  /**
   * @generated from field: optional int32 upvotes = 5;
   */
  upvotes?: number;

  /**
   * @generated from field: optional bool hidden = 6;
   */
  hidden?: boolean;

  /**
   * @generated from field: optional bool hidden_by_user = 7;
   */
  hiddenByUser?: boolean;

  /**
   * @generated from field: optional bool deleted = 8;
   */
  deleted?: boolean;

  /**
   * @generated from field: optional CMsgIPAddress ipaddress = 9;
   */
  ipaddress?: CMsgIPAddressJson;

  /**
   * @generated from field: optional int32 total_hidden = 10;
   */
  totalHidden?: number;

  /**
   * @generated from field: optional bool upvoted_by_user = 11;
   */
  upvotedByUser?: boolean;

  /**
   * @generated from field: repeated CCommunity_Comment_Reaction reactions = 12;
   */
  reactions?: CCommunity_Comment_ReactionJson[];

  /**
   * @generated from field: optional fixed64 gidparentcomment = 13;
   */
  gidparentcomment?: string;
};

/**
 * Describes the message CCommunity_Comment.
 * Use `create(CCommunity_CommentSchema)` to create a new message.
 */
export const CCommunity_CommentSchema: GenMessage<CCommunity_Comment, CCommunity_CommentJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 8);

/**
 * @generated from message CCommunity_Comment_Reaction
 */
export type CCommunity_Comment_Reaction = Message<"CCommunity_Comment_Reaction"> & {
  /**
   * @generated from field: optional uint32 reactionid = 1;
   */
  reactionid: number;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * @generated from message CCommunity_Comment_Reaction
 */
export type CCommunity_Comment_ReactionJson = {
  /**
   * @generated from field: optional uint32 reactionid = 1;
   */
  reactionid?: number;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count?: number;
};

/**
 * Describes the message CCommunity_Comment_Reaction.
 * Use `create(CCommunity_Comment_ReactionSchema)` to create a new message.
 */
export const CCommunity_Comment_ReactionSchema: GenMessage<CCommunity_Comment_Reaction, CCommunity_Comment_ReactionJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 9);

/**
 * @generated from message CCommunity_DeleteCommentFromThread_Request
 */
export type CCommunity_DeleteCommentFromThread_Request = Message<"CCommunity_DeleteCommentFromThread_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 comment_thread_type = 2;
   */
  commentThreadType: number;

  /**
   * optional uint32 comment_thread_type = 2;
   *
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional fixed64 gidcomment = 5;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional bool undelete = 6;
   */
  undelete: boolean;
};

/**
 * @generated from message CCommunity_DeleteCommentFromThread_Request
 */
export type CCommunity_DeleteCommentFromThread_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;

  /**
   * @generated from field: optional int32 comment_thread_type = 2;
   */
  commentThreadType?: number;

  /**
   * optional uint32 comment_thread_type = 2;
   *
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature?: string;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2?: string;

  /**
   * @generated from field: optional fixed64 gidcomment = 5;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional bool undelete = 6;
   */
  undelete?: boolean;
};

/**
 * Describes the message CCommunity_DeleteCommentFromThread_Request.
 * Use `create(CCommunity_DeleteCommentFromThread_RequestSchema)` to create a new message.
 */
export const CCommunity_DeleteCommentFromThread_RequestSchema: GenMessage<CCommunity_DeleteCommentFromThread_Request, CCommunity_DeleteCommentFromThread_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 10);

/**
 * @generated from message CCommunity_DeleteCommentFromThread_Response
 */
export type CCommunity_DeleteCommentFromThread_Response = Message<"CCommunity_DeleteCommentFromThread_Response"> & {
};

/**
 * @generated from message CCommunity_DeleteCommentFromThread_Response
 */
export type CCommunity_DeleteCommentFromThread_ResponseJson = {
};

/**
 * Describes the message CCommunity_DeleteCommentFromThread_Response.
 * Use `create(CCommunity_DeleteCommentFromThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_DeleteCommentFromThread_ResponseSchema: GenMessage<CCommunity_DeleteCommentFromThread_Response, CCommunity_DeleteCommentFromThread_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 11);

/**
 * @generated from message CCommunity_FetchTranslationFromCrowdIn_Request
 */
export type CCommunity_FetchTranslationFromCrowdIn_Request = Message<"CCommunity_FetchTranslationFromCrowdIn_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid: bigint;

  /**
   * @generated from field: optional uint32 language = 3;
   */
  language: number;
};

/**
 * @generated from message CCommunity_FetchTranslationFromCrowdIn_Request
 */
export type CCommunity_FetchTranslationFromCrowdIn_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid?: string;

  /**
   * @generated from field: optional uint32 language = 3;
   */
  language?: number;
};

/**
 * Describes the message CCommunity_FetchTranslationFromCrowdIn_Request.
 * Use `create(CCommunity_FetchTranslationFromCrowdIn_RequestSchema)` to create a new message.
 */
export const CCommunity_FetchTranslationFromCrowdIn_RequestSchema: GenMessage<CCommunity_FetchTranslationFromCrowdIn_Request, CCommunity_FetchTranslationFromCrowdIn_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 12);

/**
 * @generated from message CCommunity_FetchTranslationFromCrowdIn_Response
 */
export type CCommunity_FetchTranslationFromCrowdIn_Response = Message<"CCommunity_FetchTranslationFromCrowdIn_Response"> & {
};

/**
 * @generated from message CCommunity_FetchTranslationFromCrowdIn_Response
 */
export type CCommunity_FetchTranslationFromCrowdIn_ResponseJson = {
};

/**
 * Describes the message CCommunity_FetchTranslationFromCrowdIn_Response.
 * Use `create(CCommunity_FetchTranslationFromCrowdIn_ResponseSchema)` to create a new message.
 */
export const CCommunity_FetchTranslationFromCrowdIn_ResponseSchema: GenMessage<CCommunity_FetchTranslationFromCrowdIn_Response, CCommunity_FetchTranslationFromCrowdIn_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 13);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Request
 */
export type CCommunity_GetAppRichPresenceLocalization_Request = Message<"CCommunity_GetAppRichPresenceLocalization_Request"> & {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Request
 */
export type CCommunity_GetAppRichPresenceLocalization_RequestJson = {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional string language = 2;
   */
  language?: string;
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Request.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_RequestSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_RequestSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Request, CCommunity_GetAppRichPresenceLocalization_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 14);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response
 */
export type CCommunity_GetAppRichPresenceLocalization_Response = Message<"CCommunity_GetAppRichPresenceLocalization_Response"> & {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: repeated CCommunity_GetAppRichPresenceLocalization_Response_TokenList token_lists = 2;
   */
  tokenLists: CCommunity_GetAppRichPresenceLocalization_Response_TokenList[];
};

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response
 */
export type CCommunity_GetAppRichPresenceLocalization_ResponseJson = {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: repeated CCommunity_GetAppRichPresenceLocalization_Response_TokenList token_lists = 2;
   */
  tokenLists?: CCommunity_GetAppRichPresenceLocalization_Response_TokenListJson[];
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Response.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_ResponseSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Response, CCommunity_GetAppRichPresenceLocalization_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 15);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response_Token
 */
export type CCommunity_GetAppRichPresenceLocalization_Response_Token = Message<"CCommunity_GetAppRichPresenceLocalization_Response_Token"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response_Token
 */
export type CCommunity_GetAppRichPresenceLocalization_Response_TokenJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value?: string;
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Response_Token.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_Response_TokenSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_Response_TokenSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Response_Token, CCommunity_GetAppRichPresenceLocalization_Response_TokenJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 16);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response_TokenList
 */
export type CCommunity_GetAppRichPresenceLocalization_Response_TokenList = Message<"CCommunity_GetAppRichPresenceLocalization_Response_TokenList"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: repeated CCommunity_GetAppRichPresenceLocalization_Response_Token tokens = 2;
   */
  tokens: CCommunity_GetAppRichPresenceLocalization_Response_Token[];
};

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response_TokenList
 */
export type CCommunity_GetAppRichPresenceLocalization_Response_TokenListJson = {
  /**
   * @generated from field: optional string language = 1;
   */
  language?: string;

  /**
   * @generated from field: repeated CCommunity_GetAppRichPresenceLocalization_Response_Token tokens = 2;
   */
  tokens?: CCommunity_GetAppRichPresenceLocalization_Response_TokenJson[];
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Response_TokenList.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_Response_TokenListSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_Response_TokenListSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Response_TokenList, CCommunity_GetAppRichPresenceLocalization_Response_TokenListJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 17);

/**
 * @generated from message CCommunity_GetApps_Request
 */
export type CCommunity_GetApps_Request = Message<"CCommunity_GetApps_Request"> & {
  /**
   * @generated from field: repeated int32 appids = 1;
   */
  appids: number[];

  /**
   * @generated from field: optional uint32 language = 2;
   */
  language: number;
};

/**
 * @generated from message CCommunity_GetApps_Request
 */
export type CCommunity_GetApps_RequestJson = {
  /**
   * @generated from field: repeated int32 appids = 1;
   */
  appids?: number[];

  /**
   * @generated from field: optional uint32 language = 2;
   */
  language?: number;
};

/**
 * Describes the message CCommunity_GetApps_Request.
 * Use `create(CCommunity_GetApps_RequestSchema)` to create a new message.
 */
export const CCommunity_GetApps_RequestSchema: GenMessage<CCommunity_GetApps_Request, CCommunity_GetApps_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 18);

/**
 * @generated from message CCommunity_GetApps_Response
 */
export type CCommunity_GetApps_Response = Message<"CCommunity_GetApps_Response"> & {
  /**
   * @generated from field: repeated CCDDBAppDetailCommon apps = 1;
   */
  apps: CCDDBAppDetailCommon[];
};

/**
 * @generated from message CCommunity_GetApps_Response
 */
export type CCommunity_GetApps_ResponseJson = {
  /**
   * @generated from field: repeated CCDDBAppDetailCommon apps = 1;
   */
  apps?: CCDDBAppDetailCommonJson[];
};

/**
 * Describes the message CCommunity_GetApps_Response.
 * Use `create(CCommunity_GetApps_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetApps_ResponseSchema: GenMessage<CCommunity_GetApps_Response, CCommunity_GetApps_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 19);

/**
 * @generated from message CCommunity_GetAvatarHistory_Request
 */
export type CCommunity_GetAvatarHistory_Request = Message<"CCommunity_GetAvatarHistory_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool filter_user_uploaded_only = 2;
   */
  filterUserUploadedOnly: boolean;
};

/**
 * @generated from message CCommunity_GetAvatarHistory_Request
 */
export type CCommunity_GetAvatarHistory_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;

  /**
   * @generated from field: optional bool filter_user_uploaded_only = 2;
   */
  filterUserUploadedOnly?: boolean;
};

/**
 * Describes the message CCommunity_GetAvatarHistory_Request.
 * Use `create(CCommunity_GetAvatarHistory_RequestSchema)` to create a new message.
 */
export const CCommunity_GetAvatarHistory_RequestSchema: GenMessage<CCommunity_GetAvatarHistory_Request, CCommunity_GetAvatarHistory_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 20);

/**
 * @generated from message CCommunity_GetAvatarHistory_Response
 */
export type CCommunity_GetAvatarHistory_Response = Message<"CCommunity_GetAvatarHistory_Response"> & {
  /**
   * @generated from field: repeated CCommunity_GetAvatarHistory_Response_AvatarData avatars = 1;
   */
  avatars: CCommunity_GetAvatarHistory_Response_AvatarData[];
};

/**
 * @generated from message CCommunity_GetAvatarHistory_Response
 */
export type CCommunity_GetAvatarHistory_ResponseJson = {
  /**
   * @generated from field: repeated CCommunity_GetAvatarHistory_Response_AvatarData avatars = 1;
   */
  avatars?: CCommunity_GetAvatarHistory_Response_AvatarDataJson[];
};

/**
 * Describes the message CCommunity_GetAvatarHistory_Response.
 * Use `create(CCommunity_GetAvatarHistory_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetAvatarHistory_ResponseSchema: GenMessage<CCommunity_GetAvatarHistory_Response, CCommunity_GetAvatarHistory_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 21);

/**
 * @generated from message CCommunity_GetAvatarHistory_Response_AvatarData
 */
export type CCommunity_GetAvatarHistory_Response_AvatarData = Message<"CCommunity_GetAvatarHistory_Response_AvatarData"> & {
  /**
   * @generated from field: optional string avatar_sha1 = 1;
   */
  avatarSha1: string;

  /**
   * @generated from field: optional bool user_uploaded = 2;
   */
  userUploaded: boolean;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp: number;
};

/**
 * @generated from message CCommunity_GetAvatarHistory_Response_AvatarData
 */
export type CCommunity_GetAvatarHistory_Response_AvatarDataJson = {
  /**
   * @generated from field: optional string avatar_sha1 = 1;
   */
  avatarSha1?: string;

  /**
   * @generated from field: optional bool user_uploaded = 2;
   */
  userUploaded?: boolean;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp?: number;
};

/**
 * Describes the message CCommunity_GetAvatarHistory_Response_AvatarData.
 * Use `create(CCommunity_GetAvatarHistory_Response_AvatarDataSchema)` to create a new message.
 */
export const CCommunity_GetAvatarHistory_Response_AvatarDataSchema: GenMessage<CCommunity_GetAvatarHistory_Response_AvatarData, CCommunity_GetAvatarHistory_Response_AvatarDataJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 22);

/**
 * @generated from message CCommunity_GetBestEventsForUser_Request
 */
export type CCommunity_GetBestEventsForUser_Request = Message<"CCommunity_GetBestEventsForUser_Request"> & {
  /**
   * @generated from field: optional bool include_steam_blog = 1;
   */
  includeSteamBlog: boolean;

  /**
   * @generated from field: optional uint32 filter_to_played_within_days = 2;
   */
  filterToPlayedWithinDays: number;

  /**
   * @generated from field: optional bool include_only_game_updates = 3;
   */
  includeOnlyGameUpdates: boolean;
};

/**
 * @generated from message CCommunity_GetBestEventsForUser_Request
 */
export type CCommunity_GetBestEventsForUser_RequestJson = {
  /**
   * @generated from field: optional bool include_steam_blog = 1;
   */
  includeSteamBlog?: boolean;

  /**
   * @generated from field: optional uint32 filter_to_played_within_days = 2;
   */
  filterToPlayedWithinDays?: number;

  /**
   * @generated from field: optional bool include_only_game_updates = 3;
   */
  includeOnlyGameUpdates?: boolean;
};

/**
 * Describes the message CCommunity_GetBestEventsForUser_Request.
 * Use `create(CCommunity_GetBestEventsForUser_RequestSchema)` to create a new message.
 */
export const CCommunity_GetBestEventsForUser_RequestSchema: GenMessage<CCommunity_GetBestEventsForUser_Request, CCommunity_GetBestEventsForUser_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 23);

/**
 * @generated from message CCommunity_GetBestEventsForUser_Response
 */
export type CCommunity_GetBestEventsForUser_Response = Message<"CCommunity_GetBestEventsForUser_Response"> & {
  /**
   * @generated from field: repeated CCommunity_PartnerEventResult results = 1;
   */
  results: CCommunity_PartnerEventResult[];
};

/**
 * @generated from message CCommunity_GetBestEventsForUser_Response
 */
export type CCommunity_GetBestEventsForUser_ResponseJson = {
  /**
   * @generated from field: repeated CCommunity_PartnerEventResult results = 1;
   */
  results?: CCommunity_PartnerEventResultJson[];
};

/**
 * Describes the message CCommunity_GetBestEventsForUser_Response.
 * Use `create(CCommunity_GetBestEventsForUser_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetBestEventsForUser_ResponseSchema: GenMessage<CCommunity_GetBestEventsForUser_Response, CCommunity_GetBestEventsForUser_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 24);

/**
 * @generated from message CCommunity_GetClanAnnouncementVoteForUser_Request
 */
export type CCommunity_GetClanAnnouncementVoteForUser_Request = Message<"CCommunity_GetClanAnnouncementVoteForUser_Request"> & {
  /**
   * @generated from field: optional uint64 announcementid = 1;
   */
  announcementid: bigint;
};

/**
 * @generated from message CCommunity_GetClanAnnouncementVoteForUser_Request
 */
export type CCommunity_GetClanAnnouncementVoteForUser_RequestJson = {
  /**
   * @generated from field: optional uint64 announcementid = 1;
   */
  announcementid?: string;
};

/**
 * Describes the message CCommunity_GetClanAnnouncementVoteForUser_Request.
 * Use `create(CCommunity_GetClanAnnouncementVoteForUser_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanAnnouncementVoteForUser_RequestSchema: GenMessage<CCommunity_GetClanAnnouncementVoteForUser_Request, CCommunity_GetClanAnnouncementVoteForUser_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 25);

/**
 * @generated from message CCommunity_GetClanAnnouncementVoteForUser_Response
 */
export type CCommunity_GetClanAnnouncementVoteForUser_Response = Message<"CCommunity_GetClanAnnouncementVoteForUser_Response"> & {
  /**
   * @generated from field: optional bool voted_up = 1;
   */
  votedUp: boolean;

  /**
   * @generated from field: optional bool voted_down = 2;
   */
  votedDown: boolean;
};

/**
 * @generated from message CCommunity_GetClanAnnouncementVoteForUser_Response
 */
export type CCommunity_GetClanAnnouncementVoteForUser_ResponseJson = {
  /**
   * @generated from field: optional bool voted_up = 1;
   */
  votedUp?: boolean;

  /**
   * @generated from field: optional bool voted_down = 2;
   */
  votedDown?: boolean;
};

/**
 * Describes the message CCommunity_GetClanAnnouncementVoteForUser_Response.
 * Use `create(CCommunity_GetClanAnnouncementVoteForUser_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanAnnouncementVoteForUser_ResponseSchema: GenMessage<CCommunity_GetClanAnnouncementVoteForUser_Response, CCommunity_GetClanAnnouncementVoteForUser_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 26);

/**
 * @generated from message CCommunity_GetClanCrowdInMetadata_Request
 */
export type CCommunity_GetClanCrowdInMetadata_Request = Message<"CCommunity_GetClanCrowdInMetadata_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * @generated from message CCommunity_GetClanCrowdInMetadata_Request
 */
export type CCommunity_GetClanCrowdInMetadata_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;
};

/**
 * Describes the message CCommunity_GetClanCrowdInMetadata_Request.
 * Use `create(CCommunity_GetClanCrowdInMetadata_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanCrowdInMetadata_RequestSchema: GenMessage<CCommunity_GetClanCrowdInMetadata_Request, CCommunity_GetClanCrowdInMetadata_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 27);

/**
 * @generated from message CCommunity_GetClanCrowdInMetadata_Response
 */
export type CCommunity_GetClanCrowdInMetadata_Response = Message<"CCommunity_GetClanCrowdInMetadata_Response"> & {
  /**
   * @generated from field: optional uint64 crowdin_project_id = 1;
   */
  crowdinProjectId: bigint;

  /**
   * @generated from field: optional uint64 crowdin_directory_id = 2;
   */
  crowdinDirectoryId: bigint;

  /**
   * @generated from field: optional bool push_by_default = 3;
   */
  pushByDefault: boolean;
};

/**
 * @generated from message CCommunity_GetClanCrowdInMetadata_Response
 */
export type CCommunity_GetClanCrowdInMetadata_ResponseJson = {
  /**
   * @generated from field: optional uint64 crowdin_project_id = 1;
   */
  crowdinProjectId?: string;

  /**
   * @generated from field: optional uint64 crowdin_directory_id = 2;
   */
  crowdinDirectoryId?: string;

  /**
   * @generated from field: optional bool push_by_default = 3;
   */
  pushByDefault?: boolean;
};

/**
 * Describes the message CCommunity_GetClanCrowdInMetadata_Response.
 * Use `create(CCommunity_GetClanCrowdInMetadata_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanCrowdInMetadata_ResponseSchema: GenMessage<CCommunity_GetClanCrowdInMetadata_Response, CCommunity_GetClanCrowdInMetadata_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 28);

/**
 * @generated from message CCommunity_GetClanEventCrowdInMetadata_Request
 */
export type CCommunity_GetClanEventCrowdInMetadata_Request = Message<"CCommunity_GetClanEventCrowdInMetadata_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid: bigint;
};

/**
 * @generated from message CCommunity_GetClanEventCrowdInMetadata_Request
 */
export type CCommunity_GetClanEventCrowdInMetadata_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid?: string;
};

/**
 * Describes the message CCommunity_GetClanEventCrowdInMetadata_Request.
 * Use `create(CCommunity_GetClanEventCrowdInMetadata_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanEventCrowdInMetadata_RequestSchema: GenMessage<CCommunity_GetClanEventCrowdInMetadata_Request, CCommunity_GetClanEventCrowdInMetadata_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 29);

/**
 * @generated from message CCommunity_GetClanEventCrowdInMetadata_Response
 */
export type CCommunity_GetClanEventCrowdInMetadata_Response = Message<"CCommunity_GetClanEventCrowdInMetadata_Response"> & {
  /**
   * @generated from field: optional uint64 crowdin_project_id = 1;
   */
  crowdinProjectId: bigint;

  /**
   * @generated from field: optional uint64 crowdin_file_id = 2;
   */
  crowdinFileId: bigint;
};

/**
 * @generated from message CCommunity_GetClanEventCrowdInMetadata_Response
 */
export type CCommunity_GetClanEventCrowdInMetadata_ResponseJson = {
  /**
   * @generated from field: optional uint64 crowdin_project_id = 1;
   */
  crowdinProjectId?: string;

  /**
   * @generated from field: optional uint64 crowdin_file_id = 2;
   */
  crowdinFileId?: string;
};

/**
 * Describes the message CCommunity_GetClanEventCrowdInMetadata_Response.
 * Use `create(CCommunity_GetClanEventCrowdInMetadata_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanEventCrowdInMetadata_ResponseSchema: GenMessage<CCommunity_GetClanEventCrowdInMetadata_Response, CCommunity_GetClanEventCrowdInMetadata_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 30);

/**
 * @generated from message CCommunity_GetCommentThread_Request
 */
export type CCommunity_GetCommentThread_Request = Message<"CCommunity_GetCommentThread_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 comment_thread_type = 2;
   */
  commentThreadType: number;

  /**
   * optional uint32 comment_thread_type = 2;
   *
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional fixed64 commentthreadid = 5;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional int32 start = 6;
   */
  start: number;

  /**
   * @generated from field: optional int32 count = 7;
   */
  count: number;

  /**
   * @generated from field: optional int32 upvoters = 8;
   */
  upvoters: number;

  /**
   * @generated from field: optional bool include_deleted = 9;
   */
  includeDeleted: boolean;

  /**
   * @generated from field: optional fixed64 gidcomment = 10;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint32 time_oldest = 11;
   */
  timeOldest: number;

  /**
   * @generated from field: optional bool oldest_first = 12;
   */
  oldestFirst: boolean;
};

/**
 * @generated from message CCommunity_GetCommentThread_Request
 */
export type CCommunity_GetCommentThread_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;

  /**
   * @generated from field: optional int32 comment_thread_type = 2;
   */
  commentThreadType?: number;

  /**
   * optional uint32 comment_thread_type = 2;
   *
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature?: string;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2?: string;

  /**
   * @generated from field: optional fixed64 commentthreadid = 5;
   */
  commentthreadid?: string;

  /**
   * @generated from field: optional int32 start = 6;
   */
  start?: number;

  /**
   * @generated from field: optional int32 count = 7;
   */
  count?: number;

  /**
   * @generated from field: optional int32 upvoters = 8;
   */
  upvoters?: number;

  /**
   * @generated from field: optional bool include_deleted = 9;
   */
  includeDeleted?: boolean;

  /**
   * @generated from field: optional fixed64 gidcomment = 10;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional uint32 time_oldest = 11;
   */
  timeOldest?: number;

  /**
   * @generated from field: optional bool oldest_first = 12;
   */
  oldestFirst?: boolean;
};

/**
 * Describes the message CCommunity_GetCommentThread_Request.
 * Use `create(CCommunity_GetCommentThread_RequestSchema)` to create a new message.
 */
export const CCommunity_GetCommentThread_RequestSchema: GenMessage<CCommunity_GetCommentThread_Request, CCommunity_GetCommentThread_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 31);

/**
 * @generated from message CCommunity_GetCommentThread_Response
 */
export type CCommunity_GetCommentThread_Response = Message<"CCommunity_GetCommentThread_Response"> & {
  /**
   * @generated from field: repeated CCommunity_Comment comments = 1;
   */
  comments: CCommunity_Comment[];

  /**
   * @generated from field: repeated CCommunity_Comment deleted_comments = 2;
   */
  deletedComments: CCommunity_Comment[];

  /**
   * @generated from field: optional fixed64 steamid = 3;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 commentthreadid = 4;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional int32 start = 5;
   */
  start: number;

  /**
   * @generated from field: optional int32 count = 6;
   */
  count: number;

  /**
   * @generated from field: optional int32 total_count = 7;
   */
  totalCount: number;

  /**
   * @generated from field: optional int32 upvotes = 8;
   */
  upvotes: number;

  /**
   * @generated from field: repeated uint32 upvoters = 9;
   */
  upvoters: number[];

  /**
   * @generated from field: optional bool user_subscribed = 10;
   */
  userSubscribed: boolean;

  /**
   * @generated from field: optional bool user_upvoted = 11;
   */
  userUpvoted: boolean;

  /**
   * @generated from field: optional fixed64 answer_commentid = 12;
   */
  answerCommentid: bigint;

  /**
   * @generated from field: optional uint32 answer_actor = 13;
   */
  answerActor: number;

  /**
   * @generated from field: optional int32 answer_actor_rank = 14;
   */
  answerActorRank: number;

  /**
   * @generated from field: optional bool can_post = 15;
   */
  canPost: boolean;

  /**
   * @generated from field: optional uint32 comment_thread_type = 16;
   */
  commentThreadType: number;

  /**
   * @generated from field: optional fixed64 gidfeature = 17;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 18;
   */
  gidfeature2: bigint;
};

/**
 * @generated from message CCommunity_GetCommentThread_Response
 */
export type CCommunity_GetCommentThread_ResponseJson = {
  /**
   * @generated from field: repeated CCommunity_Comment comments = 1;
   */
  comments?: CCommunity_CommentJson[];

  /**
   * @generated from field: repeated CCommunity_Comment deleted_comments = 2;
   */
  deletedComments?: CCommunity_CommentJson[];

  /**
   * @generated from field: optional fixed64 steamid = 3;
   */
  steamid?: string;

  /**
   * @generated from field: optional fixed64 commentthreadid = 4;
   */
  commentthreadid?: string;

  /**
   * @generated from field: optional int32 start = 5;
   */
  start?: number;

  /**
   * @generated from field: optional int32 count = 6;
   */
  count?: number;

  /**
   * @generated from field: optional int32 total_count = 7;
   */
  totalCount?: number;

  /**
   * @generated from field: optional int32 upvotes = 8;
   */
  upvotes?: number;

  /**
   * @generated from field: repeated uint32 upvoters = 9;
   */
  upvoters?: number[];

  /**
   * @generated from field: optional bool user_subscribed = 10;
   */
  userSubscribed?: boolean;

  /**
   * @generated from field: optional bool user_upvoted = 11;
   */
  userUpvoted?: boolean;

  /**
   * @generated from field: optional fixed64 answer_commentid = 12;
   */
  answerCommentid?: string;

  /**
   * @generated from field: optional uint32 answer_actor = 13;
   */
  answerActor?: number;

  /**
   * @generated from field: optional int32 answer_actor_rank = 14;
   */
  answerActorRank?: number;

  /**
   * @generated from field: optional bool can_post = 15;
   */
  canPost?: boolean;

  /**
   * @generated from field: optional uint32 comment_thread_type = 16;
   */
  commentThreadType?: number;

  /**
   * @generated from field: optional fixed64 gidfeature = 17;
   */
  gidfeature?: string;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 18;
   */
  gidfeature2?: string;
};

/**
 * Describes the message CCommunity_GetCommentThread_Response.
 * Use `create(CCommunity_GetCommentThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetCommentThread_ResponseSchema: GenMessage<CCommunity_GetCommentThread_Response, CCommunity_GetCommentThread_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 32);

/**
 * @generated from message CCommunity_GetCommentThreadRatings_Request
 */
export type CCommunity_GetCommentThreadRatings_Request = Message<"CCommunity_GetCommentThreadRatings_Request"> & {
  /**
   * @generated from field: optional string commentthreadtype = 1;
   */
  commentthreadtype: string;

  /**
   * @generated from field: optional uint64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional uint64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 5;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint32 max_results = 6;
   */
  maxResults: number;
};

/**
 * @generated from message CCommunity_GetCommentThreadRatings_Request
 */
export type CCommunity_GetCommentThreadRatings_RequestJson = {
  /**
   * @generated from field: optional string commentthreadtype = 1;
   */
  commentthreadtype?: string;

  /**
   * @generated from field: optional uint64 steamid = 2;
   */
  steamid?: string;

  /**
   * @generated from field: optional uint64 gidfeature = 3;
   */
  gidfeature?: string;

  /**
   * @generated from field: optional uint64 gidfeature2 = 4;
   */
  gidfeature2?: string;

  /**
   * @generated from field: optional uint64 gidcomment = 5;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional uint32 max_results = 6;
   */
  maxResults?: number;
};

/**
 * Describes the message CCommunity_GetCommentThreadRatings_Request.
 * Use `create(CCommunity_GetCommentThreadRatings_RequestSchema)` to create a new message.
 */
export const CCommunity_GetCommentThreadRatings_RequestSchema: GenMessage<CCommunity_GetCommentThreadRatings_Request, CCommunity_GetCommentThreadRatings_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 33);

/**
 * @generated from message CCommunity_GetCommentThreadRatings_Response
 */
export type CCommunity_GetCommentThreadRatings_Response = Message<"CCommunity_GetCommentThreadRatings_Response"> & {
  /**
   * @generated from field: optional uint64 commentthreadid = 1;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 2;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint32 upvotes = 3;
   */
  upvotes: number;

  /**
   * @generated from field: optional bool has_upvoted = 4;
   */
  hasUpvoted: boolean;

  /**
   * @generated from field: repeated uint32 upvoter_accountids = 5;
   */
  upvoterAccountids: number[];
};

/**
 * @generated from message CCommunity_GetCommentThreadRatings_Response
 */
export type CCommunity_GetCommentThreadRatings_ResponseJson = {
  /**
   * @generated from field: optional uint64 commentthreadid = 1;
   */
  commentthreadid?: string;

  /**
   * @generated from field: optional uint64 gidcomment = 2;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional uint32 upvotes = 3;
   */
  upvotes?: number;

  /**
   * @generated from field: optional bool has_upvoted = 4;
   */
  hasUpvoted?: boolean;

  /**
   * @generated from field: repeated uint32 upvoter_accountids = 5;
   */
  upvoterAccountids?: number[];
};

/**
 * Describes the message CCommunity_GetCommentThreadRatings_Response.
 * Use `create(CCommunity_GetCommentThreadRatings_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetCommentThreadRatings_ResponseSchema: GenMessage<CCommunity_GetCommentThreadRatings_Response, CCommunity_GetCommentThreadRatings_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 34);

/**
 * @generated from message CCommunity_GetUserPartnerEventNews_Request
 */
export type CCommunity_GetUserPartnerEventNews_Request = Message<"CCommunity_GetUserPartnerEventNews_Request"> & {
  /**
   * @generated from field: optional uint32 count = 1;
   */
  count: number;

  /**
   * @generated from field: optional uint32 offset = 2;
   */
  offset: number;

  /**
   * @generated from field: optional uint32 rtime32_start_time = 3;
   */
  rtime32StartTime: number;

  /**
   * @generated from field: optional uint32 rtime32_end_time = 4;
   */
  rtime32EndTime: number;

  /**
   * @generated from field: repeated uint32 language_preference = 5;
   */
  languagePreference: number[];

  /**
   * @generated from field: repeated int32 filter_event_type = 6;
   */
  filterEventType: number[];

  /**
   * @generated from field: optional bool filter_to_appid = 7;
   */
  filterToAppid: boolean;

  /**
   * @generated from field: repeated CAppPriority app_list = 8;
   */
  appList: CAppPriority[];

  /**
   * @generated from field: optional uint32 count_after = 9 [default = 0];
   */
  countAfter: number;

  /**
   * @generated from field: optional uint32 count_before = 10 [default = 0];
   */
  countBefore: number;
};

/**
 * @generated from message CCommunity_GetUserPartnerEventNews_Request
 */
export type CCommunity_GetUserPartnerEventNews_RequestJson = {
  /**
   * @generated from field: optional uint32 count = 1;
   */
  count?: number;

  /**
   * @generated from field: optional uint32 offset = 2;
   */
  offset?: number;

  /**
   * @generated from field: optional uint32 rtime32_start_time = 3;
   */
  rtime32StartTime?: number;

  /**
   * @generated from field: optional uint32 rtime32_end_time = 4;
   */
  rtime32EndTime?: number;

  /**
   * @generated from field: repeated uint32 language_preference = 5;
   */
  languagePreference?: number[];

  /**
   * @generated from field: repeated int32 filter_event_type = 6;
   */
  filterEventType?: number[];

  /**
   * @generated from field: optional bool filter_to_appid = 7;
   */
  filterToAppid?: boolean;

  /**
   * @generated from field: repeated CAppPriority app_list = 8;
   */
  appList?: CAppPriorityJson[];

  /**
   * @generated from field: optional uint32 count_after = 9 [default = 0];
   */
  countAfter?: number;

  /**
   * @generated from field: optional uint32 count_before = 10 [default = 0];
   */
  countBefore?: number;
};

/**
 * Describes the message CCommunity_GetUserPartnerEventNews_Request.
 * Use `create(CCommunity_GetUserPartnerEventNews_RequestSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventNews_RequestSchema: GenMessage<CCommunity_GetUserPartnerEventNews_Request, CCommunity_GetUserPartnerEventNews_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 35);

/**
 * @generated from message CCommunity_GetUserPartnerEventNews_Response
 */
export type CCommunity_GetUserPartnerEventNews_Response = Message<"CCommunity_GetUserPartnerEventNews_Response"> & {
  /**
   * @generated from field: repeated CClanMatchEventByRange results = 1;
   */
  results: CClanMatchEventByRange[];
};

/**
 * @generated from message CCommunity_GetUserPartnerEventNews_Response
 */
export type CCommunity_GetUserPartnerEventNews_ResponseJson = {
  /**
   * @generated from field: repeated CClanMatchEventByRange results = 1;
   */
  results?: CClanMatchEventByRangeJson[];
};

/**
 * Describes the message CCommunity_GetUserPartnerEventNews_Response.
 * Use `create(CCommunity_GetUserPartnerEventNews_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventNews_ResponseSchema: GenMessage<CCommunity_GetUserPartnerEventNews_Response, CCommunity_GetUserPartnerEventNews_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 36);

/**
 * @generated from message CCommunity_GetUserPartnerEventsAppPriorities_Request
 */
export type CCommunity_GetUserPartnerEventsAppPriorities_Request = Message<"CCommunity_GetUserPartnerEventsAppPriorities_Request"> & {
};

/**
 * @generated from message CCommunity_GetUserPartnerEventsAppPriorities_Request
 */
export type CCommunity_GetUserPartnerEventsAppPriorities_RequestJson = {
};

/**
 * Describes the message CCommunity_GetUserPartnerEventsAppPriorities_Request.
 * Use `create(CCommunity_GetUserPartnerEventsAppPriorities_RequestSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventsAppPriorities_RequestSchema: GenMessage<CCommunity_GetUserPartnerEventsAppPriorities_Request, CCommunity_GetUserPartnerEventsAppPriorities_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 37);

/**
 * @generated from message CCommunity_GetUserPartnerEventsAppPriorities_Response
 */
export type CCommunity_GetUserPartnerEventsAppPriorities_Response = Message<"CCommunity_GetUserPartnerEventsAppPriorities_Response"> & {
  /**
   * @generated from field: repeated CCommunity_PartnerEventsAppPriority priorities = 1;
   */
  priorities: CCommunity_PartnerEventsAppPriority[];
};

/**
 * @generated from message CCommunity_GetUserPartnerEventsAppPriorities_Response
 */
export type CCommunity_GetUserPartnerEventsAppPriorities_ResponseJson = {
  /**
   * @generated from field: repeated CCommunity_PartnerEventsAppPriority priorities = 1;
   */
  priorities?: CCommunity_PartnerEventsAppPriorityJson[];
};

/**
 * Describes the message CCommunity_GetUserPartnerEventsAppPriorities_Response.
 * Use `create(CCommunity_GetUserPartnerEventsAppPriorities_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventsAppPriorities_ResponseSchema: GenMessage<CCommunity_GetUserPartnerEventsAppPriorities_Response, CCommunity_GetUserPartnerEventsAppPriorities_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 38);

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Request
 */
export type CCommunity_GetUserPartnerEventViewStatus_Request = Message<"CCommunity_GetUserPartnerEventViewStatus_Request"> & {
  /**
   * @generated from field: repeated fixed64 event_gids = 1;
   */
  eventGids: bigint[];

  /**
   * @generated from field: optional bool include_read_events_only = 2;
   */
  includeReadEventsOnly: boolean;
};

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Request
 */
export type CCommunity_GetUserPartnerEventViewStatus_RequestJson = {
  /**
   * @generated from field: repeated fixed64 event_gids = 1;
   */
  eventGids?: string[];

  /**
   * @generated from field: optional bool include_read_events_only = 2;
   */
  includeReadEventsOnly?: boolean;
};

/**
 * Describes the message CCommunity_GetUserPartnerEventViewStatus_Request.
 * Use `create(CCommunity_GetUserPartnerEventViewStatus_RequestSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventViewStatus_RequestSchema: GenMessage<CCommunity_GetUserPartnerEventViewStatus_Request, CCommunity_GetUserPartnerEventViewStatus_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 39);

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Response
 */
export type CCommunity_GetUserPartnerEventViewStatus_Response = Message<"CCommunity_GetUserPartnerEventViewStatus_Response"> & {
  /**
   * @generated from field: repeated CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent events = 1;
   */
  events: CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent[];
};

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Response
 */
export type CCommunity_GetUserPartnerEventViewStatus_ResponseJson = {
  /**
   * @generated from field: repeated CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent events = 1;
   */
  events?: CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventJson[];
};

/**
 * Describes the message CCommunity_GetUserPartnerEventViewStatus_Response.
 * Use `create(CCommunity_GetUserPartnerEventViewStatus_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventViewStatus_ResponseSchema: GenMessage<CCommunity_GetUserPartnerEventViewStatus_Response, CCommunity_GetUserPartnerEventViewStatus_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 40);

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent
 */
export type CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent = Message<"CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent"> & {
  /**
   * @generated from field: optional fixed64 event_gid = 1;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional uint32 last_shown_time = 2;
   */
  lastShownTime: number;

  /**
   * @generated from field: optional uint32 last_read_time = 3;
   */
  lastReadTime: number;

  /**
   * @generated from field: optional uint32 clan_account_id = 4;
   */
  clanAccountId: number;
};

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent
 */
export type CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventJson = {
  /**
   * @generated from field: optional fixed64 event_gid = 1;
   */
  eventGid?: string;

  /**
   * @generated from field: optional uint32 last_shown_time = 2;
   */
  lastShownTime?: number;

  /**
   * @generated from field: optional uint32 last_read_time = 3;
   */
  lastReadTime?: number;

  /**
   * @generated from field: optional uint32 clan_account_id = 4;
   */
  clanAccountId?: number;
};

/**
 * Describes the message CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent.
 * Use `create(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventSchema: GenMessage<CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent, CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 41);

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Request
 */
export type CCommunity_MarkPartnerEventsForUser_Request = Message<"CCommunity_MarkPartnerEventsForUser_Request"> & {
  /**
   * @generated from field: repeated CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking markings = 1;
   */
  markings: CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking[];
};

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Request
 */
export type CCommunity_MarkPartnerEventsForUser_RequestJson = {
  /**
   * @generated from field: repeated CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking markings = 1;
   */
  markings?: CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingJson[];
};

/**
 * Describes the message CCommunity_MarkPartnerEventsForUser_Request.
 * Use `create(CCommunity_MarkPartnerEventsForUser_RequestSchema)` to create a new message.
 */
export const CCommunity_MarkPartnerEventsForUser_RequestSchema: GenMessage<CCommunity_MarkPartnerEventsForUser_Request, CCommunity_MarkPartnerEventsForUser_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 42);

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking
 */
export type CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking = Message<"CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking"> & {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional int32 display_location = 3;
   */
  displayLocation: number;

  /**
   * @generated from field: optional bool mark_shown = 4;
   */
  markShown: boolean;

  /**
   * @generated from field: optional bool mark_read = 5;
   */
  markRead: boolean;
};

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking
 */
export type CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingJson = {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid?: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid?: string;

  /**
   * @generated from field: optional int32 display_location = 3;
   */
  displayLocation?: number;

  /**
   * @generated from field: optional bool mark_shown = 4;
   */
  markShown?: boolean;

  /**
   * @generated from field: optional bool mark_read = 5;
   */
  markRead?: boolean;
};

/**
 * Describes the message CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking.
 * Use `create(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingSchema)` to create a new message.
 */
export const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingSchema: GenMessage<CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking, CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 43);

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Response
 */
export type CCommunity_MarkPartnerEventsForUser_Response = Message<"CCommunity_MarkPartnerEventsForUser_Response"> & {
};

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Response
 */
export type CCommunity_MarkPartnerEventsForUser_ResponseJson = {
};

/**
 * Describes the message CCommunity_MarkPartnerEventsForUser_Response.
 * Use `create(CCommunity_MarkPartnerEventsForUser_ResponseSchema)` to create a new message.
 */
export const CCommunity_MarkPartnerEventsForUser_ResponseSchema: GenMessage<CCommunity_MarkPartnerEventsForUser_Response, CCommunity_MarkPartnerEventsForUser_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 44);

/**
 * @generated from message CCommunity_PartnerEventResult
 */
export type CCommunity_PartnerEventResult = Message<"CCommunity_PartnerEventResult"> & {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional fixed64 announcement_gid = 3;
   */
  announcementGid: bigint;

  /**
   * @generated from field: optional uint32 appid = 4;
   */
  appid: number;

  /**
   * @generated from field: optional bool possible_takeover = 5;
   */
  possibleTakeover: boolean;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 6 [default = 0];
   */
  rtime32LastModified: number;

  /**
   * @generated from field: optional int32 user_app_priority = 7;
   */
  userAppPriority: number;
};

/**
 * @generated from message CCommunity_PartnerEventResult
 */
export type CCommunity_PartnerEventResultJson = {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid?: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid?: string;

  /**
   * @generated from field: optional fixed64 announcement_gid = 3;
   */
  announcementGid?: string;

  /**
   * @generated from field: optional uint32 appid = 4;
   */
  appid?: number;

  /**
   * @generated from field: optional bool possible_takeover = 5;
   */
  possibleTakeover?: boolean;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 6 [default = 0];
   */
  rtime32LastModified?: number;

  /**
   * @generated from field: optional int32 user_app_priority = 7;
   */
  userAppPriority?: number;
};

/**
 * Describes the message CCommunity_PartnerEventResult.
 * Use `create(CCommunity_PartnerEventResultSchema)` to create a new message.
 */
export const CCommunity_PartnerEventResultSchema: GenMessage<CCommunity_PartnerEventResult, CCommunity_PartnerEventResultJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 45);

/**
 * @generated from message CCommunity_PartnerEventsAppPriority
 */
export type CCommunity_PartnerEventsAppPriority = Message<"CCommunity_PartnerEventsAppPriority"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional int32 user_app_priority = 2;
   */
  userAppPriority: number;
};

/**
 * @generated from message CCommunity_PartnerEventsAppPriority
 */
export type CCommunity_PartnerEventsAppPriorityJson = {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;

  /**
   * @generated from field: optional int32 user_app_priority = 2;
   */
  userAppPriority?: number;
};

/**
 * Describes the message CCommunity_PartnerEventsAppPriority.
 * Use `create(CCommunity_PartnerEventsAppPrioritySchema)` to create a new message.
 */
export const CCommunity_PartnerEventsAppPrioritySchema: GenMessage<CCommunity_PartnerEventsAppPriority, CCommunity_PartnerEventsAppPriorityJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 46);

/**
 * @generated from message CCommunity_PartnerEventsShowLessForApp_Request
 */
export type CCommunity_PartnerEventsShowLessForApp_Request = Message<"CCommunity_PartnerEventsShowLessForApp_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * @generated from message CCommunity_PartnerEventsShowLessForApp_Request
 */
export type CCommunity_PartnerEventsShowLessForApp_RequestJson = {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;
};

/**
 * Describes the message CCommunity_PartnerEventsShowLessForApp_Request.
 * Use `create(CCommunity_PartnerEventsShowLessForApp_RequestSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowLessForApp_RequestSchema: GenMessage<CCommunity_PartnerEventsShowLessForApp_Request, CCommunity_PartnerEventsShowLessForApp_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 47);

/**
 * @generated from message CCommunity_PartnerEventsShowLessForApp_Response
 */
export type CCommunity_PartnerEventsShowLessForApp_Response = Message<"CCommunity_PartnerEventsShowLessForApp_Response"> & {
};

/**
 * @generated from message CCommunity_PartnerEventsShowLessForApp_Response
 */
export type CCommunity_PartnerEventsShowLessForApp_ResponseJson = {
};

/**
 * Describes the message CCommunity_PartnerEventsShowLessForApp_Response.
 * Use `create(CCommunity_PartnerEventsShowLessForApp_ResponseSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowLessForApp_ResponseSchema: GenMessage<CCommunity_PartnerEventsShowLessForApp_Response, CCommunity_PartnerEventsShowLessForApp_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 48);

/**
 * @generated from message CCommunity_PartnerEventsShowMoreForApp_Request
 */
export type CCommunity_PartnerEventsShowMoreForApp_Request = Message<"CCommunity_PartnerEventsShowMoreForApp_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * @generated from message CCommunity_PartnerEventsShowMoreForApp_Request
 */
export type CCommunity_PartnerEventsShowMoreForApp_RequestJson = {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid?: number;
};

/**
 * Describes the message CCommunity_PartnerEventsShowMoreForApp_Request.
 * Use `create(CCommunity_PartnerEventsShowMoreForApp_RequestSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowMoreForApp_RequestSchema: GenMessage<CCommunity_PartnerEventsShowMoreForApp_Request, CCommunity_PartnerEventsShowMoreForApp_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 49);

/**
 * @generated from message CCommunity_PartnerEventsShowMoreForApp_Response
 */
export type CCommunity_PartnerEventsShowMoreForApp_Response = Message<"CCommunity_PartnerEventsShowMoreForApp_Response"> & {
};

/**
 * @generated from message CCommunity_PartnerEventsShowMoreForApp_Response
 */
export type CCommunity_PartnerEventsShowMoreForApp_ResponseJson = {
};

/**
 * Describes the message CCommunity_PartnerEventsShowMoreForApp_Response.
 * Use `create(CCommunity_PartnerEventsShowMoreForApp_ResponseSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowMoreForApp_ResponseSchema: GenMessage<CCommunity_PartnerEventsShowMoreForApp_Response, CCommunity_PartnerEventsShowMoreForApp_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 50);

/**
 * @generated from message CCommunity_PostCommentToThread_Request
 */
export type CCommunity_PostCommentToThread_Request = Message<"CCommunity_PostCommentToThread_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 comment_thread_type = 2;
   */
  commentThreadType: number;

  /**
   * optional uint32 comment_thread_type = 2;
   *
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional string text = 6;
   */
  text: string;

  /**
   * @generated from field: optional fixed64 gidparentcomment = 7;
   */
  gidparentcomment: bigint;

  /**
   * @generated from field: optional bool suppress_notifications = 8;
   */
  suppressNotifications: boolean;

  /**
   * @generated from field: optional bool is_report = 9;
   */
  isReport: boolean;

  /**
   * @generated from field: optional bool start_hidden = 10;
   */
  startHidden: boolean;
};

/**
 * @generated from message CCommunity_PostCommentToThread_Request
 */
export type CCommunity_PostCommentToThread_RequestJson = {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid?: string;

  /**
   * @generated from field: optional int32 comment_thread_type = 2;
   */
  commentThreadType?: number;

  /**
   * optional uint32 comment_thread_type = 2;
   *
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature?: string;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2?: string;

  /**
   * @generated from field: optional string text = 6;
   */
  text?: string;

  /**
   * @generated from field: optional fixed64 gidparentcomment = 7;
   */
  gidparentcomment?: string;

  /**
   * @generated from field: optional bool suppress_notifications = 8;
   */
  suppressNotifications?: boolean;

  /**
   * @generated from field: optional bool is_report = 9;
   */
  isReport?: boolean;

  /**
   * @generated from field: optional bool start_hidden = 10;
   */
  startHidden?: boolean;
};

/**
 * Describes the message CCommunity_PostCommentToThread_Request.
 * Use `create(CCommunity_PostCommentToThread_RequestSchema)` to create a new message.
 */
export const CCommunity_PostCommentToThread_RequestSchema: GenMessage<CCommunity_PostCommentToThread_Request, CCommunity_PostCommentToThread_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 51);

/**
 * @generated from message CCommunity_PostCommentToThread_Response
 */
export type CCommunity_PostCommentToThread_Response = Message<"CCommunity_PostCommentToThread_Response"> & {
  /**
   * @generated from field: optional fixed64 gidcomment = 1;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional fixed64 commentthreadid = 2;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional int32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional int32 upvotes = 4;
   */
  upvotes: number;
};

/**
 * @generated from message CCommunity_PostCommentToThread_Response
 */
export type CCommunity_PostCommentToThread_ResponseJson = {
  /**
   * @generated from field: optional fixed64 gidcomment = 1;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional fixed64 commentthreadid = 2;
   */
  commentthreadid?: string;

  /**
   * @generated from field: optional int32 count = 3;
   */
  count?: number;

  /**
   * @generated from field: optional int32 upvotes = 4;
   */
  upvotes?: number;
};

/**
 * Describes the message CCommunity_PostCommentToThread_Response.
 * Use `create(CCommunity_PostCommentToThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_PostCommentToThread_ResponseSchema: GenMessage<CCommunity_PostCommentToThread_Response, CCommunity_PostCommentToThread_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 52);

/**
 * @generated from message CCommunity_RateClanAnnouncement_Request
 */
export type CCommunity_RateClanAnnouncement_Request = Message<"CCommunity_RateClanAnnouncement_Request"> & {
  /**
   * @generated from field: optional uint64 announcementid = 1;
   */
  announcementid: bigint;

  /**
   * @generated from field: optional bool vote_up = 2;
   */
  voteUp: boolean;

  /**
   * @generated from field: optional uint32 clan_accountid = 3;
   */
  clanAccountid: number;
};

/**
 * @generated from message CCommunity_RateClanAnnouncement_Request
 */
export type CCommunity_RateClanAnnouncement_RequestJson = {
  /**
   * @generated from field: optional uint64 announcementid = 1;
   */
  announcementid?: string;

  /**
   * @generated from field: optional bool vote_up = 2;
   */
  voteUp?: boolean;

  /**
   * @generated from field: optional uint32 clan_accountid = 3;
   */
  clanAccountid?: number;
};

/**
 * Describes the message CCommunity_RateClanAnnouncement_Request.
 * Use `create(CCommunity_RateClanAnnouncement_RequestSchema)` to create a new message.
 */
export const CCommunity_RateClanAnnouncement_RequestSchema: GenMessage<CCommunity_RateClanAnnouncement_Request, CCommunity_RateClanAnnouncement_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 53);

/**
 * @generated from message CCommunity_RateClanAnnouncement_Response
 */
export type CCommunity_RateClanAnnouncement_Response = Message<"CCommunity_RateClanAnnouncement_Response"> & {
};

/**
 * @generated from message CCommunity_RateClanAnnouncement_Response
 */
export type CCommunity_RateClanAnnouncement_ResponseJson = {
};

/**
 * Describes the message CCommunity_RateClanAnnouncement_Response.
 * Use `create(CCommunity_RateClanAnnouncement_ResponseSchema)` to create a new message.
 */
export const CCommunity_RateClanAnnouncement_ResponseSchema: GenMessage<CCommunity_RateClanAnnouncement_Response, CCommunity_RateClanAnnouncement_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 54);

/**
 * @generated from message CCommunity_RateCommentThread_Request
 */
export type CCommunity_RateCommentThread_Request = Message<"CCommunity_RateCommentThread_Request"> & {
  /**
   * @generated from field: optional string commentthreadtype = 1;
   */
  commentthreadtype: string;

  /**
   * @generated from field: optional uint64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional uint64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 5;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional bool rate_up = 6;
   */
  rateUp: boolean;

  /**
   * @generated from field: optional bool suppress_notifications = 7;
   */
  suppressNotifications: boolean;
};

/**
 * @generated from message CCommunity_RateCommentThread_Request
 */
export type CCommunity_RateCommentThread_RequestJson = {
  /**
   * @generated from field: optional string commentthreadtype = 1;
   */
  commentthreadtype?: string;

  /**
   * @generated from field: optional uint64 steamid = 2;
   */
  steamid?: string;

  /**
   * @generated from field: optional uint64 gidfeature = 3;
   */
  gidfeature?: string;

  /**
   * @generated from field: optional uint64 gidfeature2 = 4;
   */
  gidfeature2?: string;

  /**
   * @generated from field: optional uint64 gidcomment = 5;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional bool rate_up = 6;
   */
  rateUp?: boolean;

  /**
   * @generated from field: optional bool suppress_notifications = 7;
   */
  suppressNotifications?: boolean;
};

/**
 * Describes the message CCommunity_RateCommentThread_Request.
 * Use `create(CCommunity_RateCommentThread_RequestSchema)` to create a new message.
 */
export const CCommunity_RateCommentThread_RequestSchema: GenMessage<CCommunity_RateCommentThread_Request, CCommunity_RateCommentThread_RequestJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 55);

/**
 * @generated from message CCommunity_RateCommentThread_Response
 */
export type CCommunity_RateCommentThread_Response = Message<"CCommunity_RateCommentThread_Response"> & {
  /**
   * @generated from field: optional uint64 gidcomment = 1;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint64 commentthreadid = 2;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional uint32 upvotes = 4;
   */
  upvotes: number;

  /**
   * @generated from field: optional bool has_upvoted = 5;
   */
  hasUpvoted: boolean;
};

/**
 * @generated from message CCommunity_RateCommentThread_Response
 */
export type CCommunity_RateCommentThread_ResponseJson = {
  /**
   * @generated from field: optional uint64 gidcomment = 1;
   */
  gidcomment?: string;

  /**
   * @generated from field: optional uint64 commentthreadid = 2;
   */
  commentthreadid?: string;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count?: number;

  /**
   * @generated from field: optional uint32 upvotes = 4;
   */
  upvotes?: number;

  /**
   * @generated from field: optional bool has_upvoted = 5;
   */
  hasUpvoted?: boolean;
};

/**
 * Describes the message CCommunity_RateCommentThread_Response.
 * Use `create(CCommunity_RateCommentThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_RateCommentThread_ResponseSchema: GenMessage<CCommunity_RateCommentThread_Response, CCommunity_RateCommentThread_ResponseJson> = /*@__PURE__*/
  messageDesc(file_web_ui_service_community, 56);

/**
 * @generated from service Community
 */
export const Community: GenService<{
  /**
   * @generated from rpc Community.ClearSinglePartnerEventsAppPriority
   */
  clearSinglePartnerEventsAppPriority: {
    methodKind: "unary";
    input: typeof CCommunity_ClearSinglePartnerEventsAppPriority_RequestSchema;
    output: typeof CCommunity_ClearSinglePartnerEventsAppPriority_ResponseSchema;
  },
  /**
   * @generated from rpc Community.ClearUserPartnerEventsAppPriorities
   */
  clearUserPartnerEventsAppPriorities: {
    methodKind: "unary";
    input: typeof CCommunity_ClearUserPartnerEventsAppPriorities_RequestSchema;
    output: typeof CCommunity_ClearUserPartnerEventsAppPriorities_ResponseSchema;
  },
  /**
   * @generated from rpc Community.DeleteCommentFromThread
   */
  deleteCommentFromThread: {
    methodKind: "unary";
    input: typeof CCommunity_DeleteCommentFromThread_RequestSchema;
    output: typeof CCommunity_DeleteCommentFromThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.FetchTranslationFromCrowdIn
   */
  fetchTranslationFromCrowdIn: {
    methodKind: "unary";
    input: typeof CCommunity_FetchTranslationFromCrowdIn_RequestSchema;
    output: typeof CCommunity_FetchTranslationFromCrowdIn_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetAppRichPresenceLocalization
   */
  getAppRichPresenceLocalization: {
    methodKind: "unary";
    input: typeof CCommunity_GetAppRichPresenceLocalization_RequestSchema;
    output: typeof CCommunity_GetAppRichPresenceLocalization_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetApps
   */
  getApps: {
    methodKind: "unary";
    input: typeof CCommunity_GetApps_RequestSchema;
    output: typeof CCommunity_GetApps_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetAvatarHistory
   */
  getAvatarHistory: {
    methodKind: "unary";
    input: typeof CCommunity_GetAvatarHistory_RequestSchema;
    output: typeof CCommunity_GetAvatarHistory_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetBestEventsForUser
   */
  getBestEventsForUser: {
    methodKind: "unary";
    input: typeof CCommunity_GetBestEventsForUser_RequestSchema;
    output: typeof CCommunity_GetBestEventsForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanAnnouncementVoteForUser
   */
  getClanAnnouncementVoteForUser: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanAnnouncementVoteForUser_RequestSchema;
    output: typeof CCommunity_GetClanAnnouncementVoteForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanCrowdInMetadata
   */
  getClanCrowdInMetadata: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanCrowdInMetadata_RequestSchema;
    output: typeof CCommunity_GetClanCrowdInMetadata_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanEventCrowdInMetadata
   */
  getClanEventCrowdInMetadata: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanEventCrowdInMetadata_RequestSchema;
    output: typeof CCommunity_GetClanEventCrowdInMetadata_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetCommentThread
   */
  getCommentThread: {
    methodKind: "unary";
    input: typeof CCommunity_GetCommentThread_RequestSchema;
    output: typeof CCommunity_GetCommentThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetCommentThreadRatings
   */
  getCommentThreadRatings: {
    methodKind: "unary";
    input: typeof CCommunity_GetCommentThreadRatings_RequestSchema;
    output: typeof CCommunity_GetCommentThreadRatings_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetUserPartnerEventNews
   */
  getUserPartnerEventNews: {
    methodKind: "unary";
    input: typeof CCommunity_GetUserPartnerEventNews_RequestSchema;
    output: typeof CCommunity_GetUserPartnerEventNews_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetUserPartnerEventsAppPriorities
   */
  getUserPartnerEventsAppPriorities: {
    methodKind: "unary";
    input: typeof CCommunity_GetUserPartnerEventsAppPriorities_RequestSchema;
    output: typeof CCommunity_GetUserPartnerEventsAppPriorities_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetUserPartnerEventViewStatus
   */
  getUserPartnerEventViewStatus: {
    methodKind: "unary";
    input: typeof CCommunity_GetUserPartnerEventViewStatus_RequestSchema;
    output: typeof CCommunity_GetUserPartnerEventViewStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Community.MarkPartnerEventsForUser
   */
  markPartnerEventsForUser: {
    methodKind: "unary";
    input: typeof CCommunity_MarkPartnerEventsForUser_RequestSchema;
    output: typeof CCommunity_MarkPartnerEventsForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Community.PartnerEventsShowLessForApp
   */
  partnerEventsShowLessForApp: {
    methodKind: "unary";
    input: typeof CCommunity_PartnerEventsShowLessForApp_RequestSchema;
    output: typeof CCommunity_PartnerEventsShowLessForApp_ResponseSchema;
  },
  /**
   * @generated from rpc Community.PartnerEventsShowMoreForApp
   */
  partnerEventsShowMoreForApp: {
    methodKind: "unary";
    input: typeof CCommunity_PartnerEventsShowMoreForApp_RequestSchema;
    output: typeof CCommunity_PartnerEventsShowMoreForApp_ResponseSchema;
  },
  /**
   * @generated from rpc Community.PostCommentToThread
   */
  postCommentToThread: {
    methodKind: "unary";
    input: typeof CCommunity_PostCommentToThread_RequestSchema;
    output: typeof CCommunity_PostCommentToThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.RateClanAnnouncement
   */
  rateClanAnnouncement: {
    methodKind: "unary";
    input: typeof CCommunity_RateClanAnnouncement_RequestSchema;
    output: typeof CCommunity_RateClanAnnouncement_ResponseSchema;
  },
  /**
   * @generated from rpc Community.RateCommentThread
   */
  rateCommentThread: {
    methodKind: "unary";
    input: typeof CCommunity_RateCommentThread_RequestSchema;
    output: typeof CCommunity_RateCommentThread_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_web_ui_service_community, 0);

